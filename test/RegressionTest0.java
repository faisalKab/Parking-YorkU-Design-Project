import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        int int0 = java.awt.Frame.MOVE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 13 + "'", int0 == 13);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        float float0 = java.awt.Component.RIGHT_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 1.0f + "'", float0 == 1.0f);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        int int0 = javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        int int0 = java.awt.image.ImageObserver.FRAMEBITS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 16 + "'", int0 == 16);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        ManagerRole managerRole0 = MainSystem.currentManager;
        org.junit.Assert.assertNull(managerRole0);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        String str0 = MainSystem.parkingSpaceFilePath;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "data/parkingSpaceData.csv" + "'", str0, "data/parkingSpaceData.csv");
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        int int0 = java.awt.image.ImageObserver.ABORT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 128 + "'", int0 == 128);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        int int0 = javax.swing.WindowConstants.HIDE_ON_CLOSE;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component6 = managementDashboard1.getComponent((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 97");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        ManagerRole managerRole0 = null;
        MainSystem.currentManager = managerRole0;
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.awt.event.ActionListener actionListener19 = null;
        javax.swing.KeyStroke keyStroke20 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener19, keyStroke20, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        int int0 = javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        float float0 = java.awt.Component.LEFT_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 0.0f + "'", float0 == 0.0f);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        // The following exception was thrown during execution in test generation
        try {
            parkingLot1.setSpace(128, "data/parkingSpaceData.csv", "data/parkingSpaceData.csv", "data/parkingSpaceData.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 128 out of bounds for length 100");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = component21.isBackgroundSet();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        int int0 = java.awt.Frame.DEFAULT_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj9 = managementDashboard1.getTreeLock();
        java.awt.FocusTraversalPolicy focusTraversalPolicy10 = managementDashboard1.getFocusTraversalPolicy();
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isVisible();
        java.awt.Image image16 = managementDashboard12.createImage(13, (-1));
        managementDashboard12.show(true);
        java.awt.Dimension dimension19 = managementDashboard12.size();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard12, (Object) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: constraint must be a string (or null)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(focusTraversalPolicy10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(image16);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        javax.swing.InputVerifier inputVerifier38 = null;
        managementDashboard32.setInputVerifier(inputVerifier38);
        java.awt.Rectangle rectangle40 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard32.paintImmediately(rectangle40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"r\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        int int0 = java.awt.Frame.S_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 9 + "'", int0 == 9);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        String str0 = javax.swing.JComponent.TOOL_TIP_TEXT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "ToolTipText" + "'", str0, "ToolTipText");
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        javax.swing.border.Border border8 = managementDashboard1.getBorder();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNull(border8);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        int int0 = java.awt.Frame.SW_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 4 + "'", int0 == 4);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.util.ArrayList<Manager> managerList0 = MainSystem.managers;
        org.junit.Assert.assertNotNull(managerList0);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Array index out of range: 100");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        // The following exception was thrown during execution in test generation
        try {
            paymentProcessor1.processPayment((double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"PaymentStrategy.pay(double)\" because \"this.paymentStrategy\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        javax.swing.JFrame.setDefaultLookAndFeelDecorated(true);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.util.function.Consumer<String> strConsumer5 = null;
        ManagementDashboard managementDashboard6 = new ManagementDashboard(strConsumer5);
        java.beans.PropertyChangeListener propertyChangeListener7 = null;
        managementDashboard6.addPropertyChangeListener(propertyChangeListener7);
        java.awt.event.FocusEvent.Cause cause9 = null;
        managementDashboard6.requestFocus(cause9);
        java.awt.event.MouseMotionListener mouseMotionListener11 = null;
        managementDashboard6.removeMouseMotionListener(mouseMotionListener11);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component13 = managementDashboard1.add("PanelUI", (java.awt.Component) managementDashboard6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: PanelUI");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.awt.AWTEvent aWTEvent9 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.dispatchEvent(aWTEvent9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.AWTEvent.getID()\" because \"e\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        int int0 = java.awt.Frame.HAND_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 12 + "'", int0 == 12);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.Dimension dimension8 = managementDashboard1.size();
        java.awt.event.MouseListener[] mouseListenerArray9 = managementDashboard1.getMouseListeners();
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap11 = managementDashboard1.getInputMap(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertNotNull(mouseListenerArray9);
        org.junit.Assert.assertArrayEquals(mouseListenerArray9, new java.awt.event.MouseListener[] {});
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        String str0 = MainSystem.lotFilePath;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "data/lotData.csv" + "'", str0, "data/lotData.csv");
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.io.PrintStream printStream3 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        Class<?> wildcardClass38 = component37.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        float float0 = java.awt.Component.TOP_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 0.0f + "'", float0 == 0.0f);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        int int0 = java.awt.Frame.NORMAL;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        int int0 = javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        int int0 = java.awt.image.ImageObserver.PROPERTIES;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 4 + "'", int0 == 4);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.awt.image.ImageProducer imageProducer6 = null;
        java.awt.Image image7 = managementDashboard5.createImage(imageProducer6);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component8 = managementDashboard1.add("data/parkingSpaceData.csv", (java.awt.Component) managementDashboard5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: data/parkingSpaceData.csv");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(image7);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        int int0 = javax.swing.JComponent.UNDEFINED_CONDITION;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + (-1) + "'", int0 == (-1));
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        int int0 = java.awt.image.ImageObserver.SOMEBITS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 8 + "'", int0 == 8);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.JRootPane jRootPane4 = managementDashboard1.getRootPane();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet6 = jRootPane4.getFocusTraversalKeys((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNull(jRootPane4);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        java.awt.event.HierarchyListener hierarchyListener5 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener5);
        int int7 = managementDashboard1.getY();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        java.awt.event.ActionListener actionListener6 = null;
        javax.swing.KeyStroke keyStroke7 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener6, keyStroke7, 128);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        boolean boolean5 = managementDashboard1.isPaintingTile();
        managementDashboard1.requestFocus();
        java.awt.Graphics graphics7 = null;
        managementDashboard1.printAll(graphics7);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        int int0 = java.awt.image.ImageObserver.ALLBITS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 32 + "'", int0 == 32);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        float float0 = java.awt.Component.CENTER_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 0.5f + "'", float0 == 0.5f);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.awt.Graphics graphics18 = null;
        managementDashboard1.update(graphics18);
        javax.swing.InputVerifier inputVerifier20 = managementDashboard1.getInputVerifier();
        managementDashboard1.firePropertyChange("PanelUI", 'a', '4');
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component26 = managementDashboard1.getComponent((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: -1");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNull(inputVerifier20);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        int int47 = managementDashboard32.getHeight();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        int int0 = java.awt.Frame.E_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 11 + "'", int0 == 11);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.awt.image.ColorModel colorModel4 = managementDashboard1.getColorModel();
        java.awt.ComponentOrientation componentOrientation5 = managementDashboard1.getComponentOrientation();
        int int6 = managementDashboard1.getComponentCount();
        java.awt.image.ColorModel colorModel7 = managementDashboard1.getColorModel();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(colorModel4);
        org.junit.Assert.assertNotNull(componentOrientation5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(colorModel7);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Color color6 = managementDashboard1.getBackground();
        java.beans.PropertyChangeListener propertyChangeListener8 = null;
        managementDashboard1.removePropertyChangeListener("ToolTipText", propertyChangeListener8);
        float float10 = managementDashboard1.getAlignmentY();
        org.junit.Assert.assertNotNull(color6);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.5f + "'", float10 == 0.5f);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.io.PrintWriter printWriter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter19, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.print(String)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.Container container47 = managementDashboard32.getTopLevelAncestor();
        java.awt.event.ComponentListener componentListener48 = null;
        // The following exception was thrown during execution in test generation
        try {
            container47.addComponentListener(componentListener48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNull(container47);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        boolean boolean0 = javax.swing.JFrame.isDefaultLookAndFeelDecorated();
        org.junit.Assert.assertTrue("'" + boolean0 + "' != '" + true + "'", boolean0 == true);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        java.awt.Point point16 = managementDashboard1.getMousePosition(true);
        java.awt.Component component17 = managementDashboard1.getNextFocusableComponent();
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap19 = managementDashboard1.getInputMap(128);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNull(point16);
        org.junit.Assert.assertNull(component17);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        int int0 = java.awt.Frame.CROSSHAIR_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        managementDashboard1.setLocation(point12);
        java.beans.PropertyChangeListener propertyChangeListener14 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener14);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(point12);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.util.function.Consumer<String> strConsumer85 = null;
        ManagementDashboard managementDashboard86 = new ManagementDashboard(strConsumer85);
        boolean boolean87 = managementDashboard86.isVisible();
        java.awt.Dimension dimension88 = managementDashboard86.getMinimumSize();
        managementDashboard86.transferFocusUpCycle();
        java.util.function.Consumer<String> strConsumer90 = null;
        ManagementDashboard managementDashboard91 = new ManagementDashboard(strConsumer90);
        boolean boolean92 = managementDashboard91.isVisible();
        java.awt.Dimension dimension93 = managementDashboard91.getMinimumSize();
        managementDashboard91.enable();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard72.add((java.awt.Component) managementDashboard86, (Object) managementDashboard91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: constraint must be a string (or null)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(dimension88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(dimension93);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        int int0 = javax.swing.WindowConstants.EXIT_ON_CLOSE;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 3 + "'", int0 == 3);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.awt.Graphics graphics18 = null;
        managementDashboard1.update(graphics18);
        javax.swing.InputVerifier inputVerifier20 = managementDashboard1.getInputVerifier();
        managementDashboard1.firePropertyChange("PanelUI", 'a', '4');
        String str25 = managementDashboard1.getUIClassID();
        java.util.function.Consumer<String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        boolean boolean28 = managementDashboard27.isVisible();
        java.awt.Image image31 = managementDashboard27.createImage(13, (-1));
        managementDashboard27.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.beans.PropertyChangeListener propertyChangeListener36 = null;
        managementDashboard35.addPropertyChangeListener(propertyChangeListener36);
        java.awt.event.FocusEvent.Cause cause38 = null;
        managementDashboard35.requestFocus(cause38);
        java.awt.event.InputMethodListener inputMethodListener40 = null;
        managementDashboard35.addInputMethodListener(inputMethodListener40);
        java.awt.Point point42 = managementDashboard35.location();
        java.awt.Component component43 = managementDashboard27.findComponentAt(point42);
        java.util.function.Consumer<String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        java.awt.image.ImageProducer imageProducer46 = null;
        java.awt.Image image47 = managementDashboard45.createImage(imageProducer46);
        java.util.function.Consumer<String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        java.beans.PropertyChangeListener propertyChangeListener50 = null;
        managementDashboard49.addPropertyChangeListener(propertyChangeListener50);
        java.awt.event.FocusEvent.Cause cause52 = null;
        managementDashboard49.requestFocus(cause52);
        java.awt.event.InputMethodListener inputMethodListener54 = null;
        managementDashboard49.addInputMethodListener(inputMethodListener54);
        int int56 = managementDashboard27.checkImage(image47, (java.awt.image.ImageObserver) managementDashboard49);
        java.util.function.Consumer<String> strConsumer57 = null;
        ManagementDashboard managementDashboard58 = new ManagementDashboard(strConsumer57);
        java.beans.PropertyChangeListener propertyChangeListener59 = null;
        managementDashboard58.addPropertyChangeListener(propertyChangeListener59);
        java.util.Locale locale61 = managementDashboard58.getLocale();
        float float62 = managementDashboard58.getAlignmentY();
        java.awt.Component component63 = managementDashboard49.add((java.awt.Component) managementDashboard58);
        boolean boolean64 = component63.isMaximumSizeSet();
        java.util.function.Consumer<String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        boolean boolean67 = managementDashboard66.isVisible();
        java.awt.Image image70 = managementDashboard66.createImage(13, (-1));
        managementDashboard66.show(true);
        java.awt.Dimension dimension73 = managementDashboard66.size();
        java.awt.event.MouseListener[] mouseListenerArray74 = managementDashboard66.getMouseListeners();
        managementDashboard66.firePropertyChange("", (byte) 0, (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add(component63, (Object) "", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNull(inputVerifier20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PanelUI" + "'", str25, "PanelUI");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(image31);
        org.junit.Assert.assertNotNull(point42);
        org.junit.Assert.assertNull(component43);
        org.junit.Assert.assertNotNull(image47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 0.5f + "'", float62 == 0.5f);
        org.junit.Assert.assertNotNull(component63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(image70);
        org.junit.Assert.assertNotNull(dimension73);
        org.junit.Assert.assertNotNull(mouseListenerArray74);
        org.junit.Assert.assertArrayEquals(mouseListenerArray74, new java.awt.event.MouseListener[] {});
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        int int0 = java.awt.Frame.MAXIMIZED_HORIZ;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        managementDashboard1.hide();
        java.awt.Graphics graphics6 = null;
        managementDashboard1.printComponents(graphics6);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        int int0 = java.awt.image.ImageObserver.ERROR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 64 + "'", int0 == 64);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Shape shape11 = null;
        managementDashboard1.setMixingCutoutShape(shape11);
        java.awt.im.InputContext inputContext13 = managementDashboard1.getInputContext();
        int int16 = managementDashboard1.getBaseline((int) (byte) 100, (int) (byte) 10);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard19.addPropertyChangeListener(propertyChangeListener20);
        java.util.Locale locale22 = managementDashboard19.getLocale();
        String str23 = managementDashboard19.getUIClassID();
        java.awt.event.ComponentListener[] componentListenerArray24 = managementDashboard19.getComponentListeners();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component25 = managementDashboard1.add("data/parkingSpaceData.csv", (java.awt.Component) managementDashboard19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: data/parkingSpaceData.csv");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertNull(inputContext13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(locale22);
        org.junit.Assert.assertEquals(locale22.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PanelUI" + "'", str23, "PanelUI");
        org.junit.Assert.assertNotNull(componentListenerArray24);
        org.junit.Assert.assertArrayEquals(componentListenerArray24, new java.awt.event.ComponentListener[] {});
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.awt.PopupMenu popupMenu3 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add(popupMenu3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"parent\" because \"popup\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        int int0 = java.awt.Frame.W_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 10 + "'", int0 == 10);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        int int0 = java.awt.Frame.ICONIFIED;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        managementDashboard1.grabFocus();
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        boolean boolean25 = managementDashboard24.isVisible();
        java.awt.Image image28 = managementDashboard24.createImage(13, (-1));
        managementDashboard24.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.awt.event.FocusEvent.Cause cause35 = null;
        managementDashboard32.requestFocus(cause35);
        java.awt.event.InputMethodListener inputMethodListener37 = null;
        managementDashboard32.addInputMethodListener(inputMethodListener37);
        java.awt.Point point39 = managementDashboard32.location();
        java.awt.Component component40 = managementDashboard24.findComponentAt(point39);
        java.util.function.Consumer<String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        java.awt.image.ImageProducer imageProducer43 = null;
        java.awt.Image image44 = managementDashboard42.createImage(imageProducer43);
        java.util.function.Consumer<String> strConsumer45 = null;
        ManagementDashboard managementDashboard46 = new ManagementDashboard(strConsumer45);
        java.beans.PropertyChangeListener propertyChangeListener47 = null;
        managementDashboard46.addPropertyChangeListener(propertyChangeListener47);
        java.awt.event.FocusEvent.Cause cause49 = null;
        managementDashboard46.requestFocus(cause49);
        java.awt.event.InputMethodListener inputMethodListener51 = null;
        managementDashboard46.addInputMethodListener(inputMethodListener51);
        int int53 = managementDashboard24.checkImage(image44, (java.awt.image.ImageObserver) managementDashboard46);
        java.util.function.Consumer<String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        java.beans.PropertyChangeListener propertyChangeListener56 = null;
        managementDashboard55.addPropertyChangeListener(propertyChangeListener56);
        java.util.Locale locale58 = managementDashboard55.getLocale();
        float float59 = managementDashboard55.getAlignmentY();
        java.awt.Component component60 = managementDashboard46.add((java.awt.Component) managementDashboard55);
        java.util.function.Consumer<String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        java.beans.PropertyChangeListener propertyChangeListener63 = null;
        managementDashboard62.addPropertyChangeListener(propertyChangeListener63);
        java.util.Locale locale65 = managementDashboard62.getLocale();
        managementDashboard55.setLocale(locale65);
        managementDashboard55.addNotify();
        java.awt.Dimension dimension68 = managementDashboard55.getMaximumSize();
        managementDashboard1.setMaximumSize(dimension68);
        java.io.PrintStream printStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(image28);
        org.junit.Assert.assertNotNull(point39);
        org.junit.Assert.assertNull(component40);
        org.junit.Assert.assertNotNull(image44);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.5f + "'", float59 == 0.5f);
        org.junit.Assert.assertNotNull(component60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension68);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jPopupMenu14.isFocusTraversable();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        int int0 = java.awt.Frame.WAIT_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 3 + "'", int0 == 3);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        int int0 = java.awt.Frame.MAXIMIZED_BOTH;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 6 + "'", int0 == 6);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        int int0 = javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.JRootPane jRootPane4 = managementDashboard1.getRootPane();
        java.util.function.Consumer<String> strConsumer5 = null;
        ManagementDashboard managementDashboard6 = new ManagementDashboard(strConsumer5);
        boolean boolean7 = managementDashboard6.isVisible();
        java.awt.Image image10 = managementDashboard6.createImage(13, (-1));
        managementDashboard6.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        java.beans.PropertyChangeListener propertyChangeListener15 = null;
        managementDashboard14.addPropertyChangeListener(propertyChangeListener15);
        java.awt.event.FocusEvent.Cause cause17 = null;
        managementDashboard14.requestFocus(cause17);
        java.awt.event.InputMethodListener inputMethodListener19 = null;
        managementDashboard14.addInputMethodListener(inputMethodListener19);
        java.awt.Point point21 = managementDashboard14.location();
        java.awt.Component component22 = managementDashboard6.findComponentAt(point21);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component23 = jRootPane4.findComponentAt(point21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNull(jRootPane4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(image10);
        org.junit.Assert.assertNotNull(point21);
        org.junit.Assert.assertNull(component22);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        boolean boolean5 = managementDashboard1.isPaintingTile();
        managementDashboard1.requestFocus();
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        java.awt.image.ImageProducer imageProducer9 = null;
        java.awt.Image image10 = managementDashboard8.createImage(imageProducer9);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        java.beans.PropertyChangeListener propertyChangeListener15 = null;
        managementDashboard14.addPropertyChangeListener(propertyChangeListener15);
        java.awt.image.ImageProducer imageProducer17 = null;
        java.awt.Image image18 = managementDashboard14.createImage(imageProducer17);
        java.awt.Insets insets19 = managementDashboard14.getInsets();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = managementDashboard1.prepareImage(image10, (int) (byte) 100, 64, (java.awt.image.ImageObserver) managementDashboard14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.ImageProducer.startProduction(java.awt.image.ImageConsumer)\" because the return value of \"sun.awt.image.ToolkitImage.getSource()\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(image10);
        org.junit.Assert.assertNotNull(image18);
        org.junit.Assert.assertNotNull(insets19);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.awt.image.ColorModel colorModel4 = managementDashboard1.getColorModel();
        java.awt.ComponentOrientation componentOrientation5 = managementDashboard1.getComponentOrientation();
        float float6 = managementDashboard1.getAlignmentY();
        java.awt.im.InputContext inputContext7 = managementDashboard1.getInputContext();
        managementDashboard1.setAlignmentX((float) 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(colorModel4);
        org.junit.Assert.assertNotNull(componentOrientation5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.5f + "'", float6 == 0.5f);
        org.junit.Assert.assertNull(inputContext7);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        String str3 = managementDashboard1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str3, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        int int7 = managementDashboard1.getBaseline((int) '#', (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap9 = managementDashboard1.getInputMap((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        int int0 = java.awt.Frame.MAXIMIZED_VERT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 4 + "'", int0 == 4);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        String str5 = managementDashboard1.getUIClassID();
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener6);
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        int int10 = managementDashboard1.getY();
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener11 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener11);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.list();
        java.awt.Component component46 = null;
        java.util.function.Consumer<String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        boolean boolean49 = managementDashboard48.isVisible();
        java.awt.Dimension dimension50 = managementDashboard48.getMinimumSize();
        java.awt.event.MouseWheelListener mouseWheelListener51 = null;
        managementDashboard48.removeMouseWheelListener(mouseWheelListener51);
        boolean boolean55 = managementDashboard48.contains(13, (-1));
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard32.add(component46, (Object) managementDashboard48, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(dimension50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.Event event38 = null;
        boolean boolean40 = managementDashboard23.keyUp(event38, 0);
        java.awt.Event event41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = managementDashboard23.postEvent(event41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.awt.Frame[] frameArray0 = java.awt.Frame.getFrames();
        org.junit.Assert.assertNotNull(frameArray0);
        org.junit.Assert.assertArrayEquals(frameArray0, new java.awt.Frame[] {});
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.event.ActionListener actionListener38 = null;
        javax.swing.KeyStroke keyStroke40 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard32.registerKeyboardAction(actionListener38, "data/parkingSpaceData.csv", keyStroke40, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        java.awt.Component component9 = managementDashboard1.findComponentAt((-1), 12);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(component9);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        int int7 = managementDashboard1.getBaseline((int) '#', (int) (byte) 100);
        int int10 = managementDashboard1.getBaseline(0, (int) (short) 0);
        javax.swing.JPopupMenu jPopupMenu11 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu11);
        boolean boolean13 = managementDashboard1.isMaximumSizeSet();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        int int0 = java.awt.Frame.N_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 8 + "'", int0 == 8);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        String str2 = parkingLot1.getLotAvailability();
        parkingLot1.removeBooking(16);
        boolean boolean5 = parkingLot1.getEnabled();
        String str6 = parkingLot1.getLotName();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard1.keyUp(event20, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        int int20 = managementDashboard19.countComponents();
        managementDashboard19.resetKeyboardActions();
        managementDashboard19.layout();
        java.awt.event.MouseEvent mouseEvent23 = null;
        java.awt.Point point24 = managementDashboard19.getPopupLocation(mouseEvent23);
        boolean boolean25 = managementDashboard1.isAncestorOf((java.awt.Component) managementDashboard19);
        managementDashboard1.firePropertyChange("", (long) 3, (long) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(point24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        float float13 = managementDashboard1.getAlignmentY();
        java.awt.Dimension dimension14 = null;
        managementDashboard1.setMinimumSize(dimension14);
        boolean boolean18 = managementDashboard1.contains(32, 10);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.5f + "'", float13 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        int int7 = managementDashboard1.getBaseline((int) '#', (int) (byte) 100);
        int int10 = managementDashboard1.getBaseline(0, (int) (short) 0);
        javax.swing.JPopupMenu jPopupMenu11 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu11);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) jPopupMenu11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"peer\" because \"comp\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.awt.Window[] windowArray0 = java.awt.Window.getWindows();
        org.junit.Assert.assertNotNull(windowArray0);
        org.junit.Assert.assertArrayEquals(windowArray0, new java.awt.Window[] {});
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        ParkingSpace parkingSpace4 = new ParkingSpace((int) (short) -1, "data/parkingSpaceData.csv", "PanelUI", "PanelUI");
        String str5 = parkingSpace4.getCurrentUser();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        // The following exception was thrown during execution in test generation
        try {
            jPopupMenu14.setRequestFocusEnabled(false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        User user0 = MainSystem.currentUser;
        org.junit.Assert.assertNull(user0);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj9 = managementDashboard1.getTreeLock();
        managementDashboard1.setFocusTraversalKeysEnabled(false);
        java.awt.Font font12 = managementDashboard1.getFont();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(font12);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        // The following exception was thrown during execution in test generation
        try {
            paymentProcessor1.processPayment((double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"PaymentStrategy.pay(double)\" because \"this.paymentStrategy\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        int int0 = java.awt.image.ImageObserver.WIDTH;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        java.awt.Dimension dimension45 = managementDashboard32.getMaximumSize();
        // The following exception was thrown during execution in test generation
        try {
            int int48 = managementDashboard32.getBaseline((int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Width and height must be >= 0");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension45);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        int int0 = java.awt.image.ImageObserver.HEIGHT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        float float0 = java.awt.Component.BOTTOM_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 1.0f + "'", float0 == 1.0f);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Graphics graphics6 = null;
        managementDashboard1.printComponents(graphics6);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.printComponents(graphics8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener(propertyChangeListener10);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        // The following exception was thrown during execution in test generation
        try {
            paymentProcessor1.processPayment((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"PaymentStrategy.pay(double)\" because \"this.paymentStrategy\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        boolean boolean5 = managementDashboard1.isPaintingTile();
        managementDashboard1.requestFocus();
        java.awt.AWTEvent aWTEvent7 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.dispatchEvent(aWTEvent7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.AWTEvent.getID()\" because \"e\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Event event11 = null;
        java.util.function.Consumer<String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isVisible();
        java.awt.Image image17 = managementDashboard13.createImage(13, (-1));
        managementDashboard13.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        java.beans.PropertyChangeListener propertyChangeListener22 = null;
        managementDashboard21.addPropertyChangeListener(propertyChangeListener22);
        java.awt.event.FocusEvent.Cause cause24 = null;
        managementDashboard21.requestFocus(cause24);
        java.awt.event.InputMethodListener inputMethodListener26 = null;
        managementDashboard21.addInputMethodListener(inputMethodListener26);
        java.awt.Point point28 = managementDashboard21.location();
        java.awt.Component component29 = managementDashboard13.findComponentAt(point28);
        java.util.function.Consumer<String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        java.awt.image.ImageProducer imageProducer32 = null;
        java.awt.Image image33 = managementDashboard31.createImage(imageProducer32);
        java.util.function.Consumer<String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.beans.PropertyChangeListener propertyChangeListener36 = null;
        managementDashboard35.addPropertyChangeListener(propertyChangeListener36);
        java.awt.event.FocusEvent.Cause cause38 = null;
        managementDashboard35.requestFocus(cause38);
        java.awt.event.InputMethodListener inputMethodListener40 = null;
        managementDashboard35.addInputMethodListener(inputMethodListener40);
        int int42 = managementDashboard13.checkImage(image33, (java.awt.image.ImageObserver) managementDashboard35);
        java.util.function.Consumer<String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        java.beans.PropertyChangeListener propertyChangeListener45 = null;
        managementDashboard44.addPropertyChangeListener(propertyChangeListener45);
        java.util.Locale locale47 = managementDashboard44.getLocale();
        float float48 = managementDashboard44.getAlignmentY();
        java.awt.Component component49 = managementDashboard35.add((java.awt.Component) managementDashboard44);
        boolean boolean50 = managementDashboard1.gotFocus(event11, (Object) component49);
        managementDashboard1.show();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(image17);
        org.junit.Assert.assertNotNull(point28);
        org.junit.Assert.assertNull(component29);
        org.junit.Assert.assertNotNull(image33);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(locale47);
        org.junit.Assert.assertEquals(locale47.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 0.5f + "'", float48 == 0.5f);
        org.junit.Assert.assertNotNull(component49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        managementDashboard1.reshape(0, 10, (int) (byte) 100, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        managementDashboard21.setEnabled(true);
        java.util.function.Consumer<String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        boolean boolean26 = managementDashboard25.isVisible();
        java.awt.Image image29 = managementDashboard25.createImage(13, (-1));
        managementDashboard25.remove((int) (short) 1);
        java.awt.Insets insets32 = managementDashboard25.getInsets();
        java.util.Locale locale33 = managementDashboard25.getLocale();
        java.awt.Graphics graphics34 = null;
        managementDashboard25.printAll(graphics34);
        String str36 = managementDashboard25.toString();
        managementDashboard21.setNextFocusableComponent((java.awt.Component) managementDashboard25);
        java.awt.event.MouseListener mouseListener38 = null;
        managementDashboard21.addMouseListener(mouseListener38);
        java.awt.event.MouseWheelListener mouseWheelListener40 = null;
        managementDashboard21.removeMouseWheelListener(mouseWheelListener40);
        java.awt.event.MouseListener mouseListener42 = null;
        managementDashboard21.addMouseListener(mouseListener42);
        javax.swing.InputMap inputMap45 = managementDashboard21.getInputMap(0);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap(16, inputMap45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(image29);
        org.junit.Assert.assertNotNull(insets32);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str36, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(inputMap45);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.event.ContainerListener[] containerListenerArray38 = managementDashboard32.getContainerListeners();
        java.awt.Toolkit toolkit39 = managementDashboard32.getToolkit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(containerListenerArray38);
        org.junit.Assert.assertArrayEquals(containerListenerArray38, new java.awt.event.ContainerListener[] {});
        org.junit.Assert.assertNotNull(toolkit39);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        int int10 = managementDashboard1.getDebugGraphicsOptions();
        java.awt.Component component13 = managementDashboard1.locate(32, 16);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        java.beans.PropertyChangeListener propertyChangeListener16 = null;
        managementDashboard15.addPropertyChangeListener(propertyChangeListener16);
        java.awt.event.FocusEvent.Cause cause18 = null;
        managementDashboard15.requestFocus(cause18);
        java.awt.event.InputMethodListener inputMethodListener20 = null;
        managementDashboard15.addInputMethodListener(inputMethodListener20);
        java.awt.Color color22 = managementDashboard15.getBackground();
        managementDashboard15.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener25 = null;
        managementDashboard15.addMouseListener(mouseListener25);
        boolean boolean27 = managementDashboard15.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent28 = null;
        java.awt.Point point29 = managementDashboard15.getPopupLocation(mouseEvent28);
        java.util.function.Consumer<String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        managementDashboard31.setEnabled(true);
        java.awt.Point point34 = managementDashboard31.location();
        java.awt.Component component35 = managementDashboard15.findComponentAt(point34);
        java.awt.Point point36 = managementDashboard1.getLocation(point34);
        boolean boolean37 = managementDashboard1.isValid();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(component13);
        org.junit.Assert.assertNotNull(color22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(point29);
        org.junit.Assert.assertNotNull(point34);
        org.junit.Assert.assertNull(component35);
        org.junit.Assert.assertNotNull(point36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        managementDashboard1.repaint((long) 32);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard1.keyDown(event11, (int) (short) 1);
        int int14 = managementDashboard1.getHeight();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.Container container47 = managementDashboard32.getTopLevelAncestor();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = container47.isShowing();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNull(container47);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        String str0 = MainSystem.managerFilePath;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "data/managerData.csv" + "'", str0, "data/managerData.csv");
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.grabFocus();
        javax.accessibility.AccessibleContext accessibleContext5 = managementDashboard1.getAccessibleContext();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet7 = managementDashboard1.getFocusTraversalKeys((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(accessibleContext5);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        UserFactory userFactory0 = new UserFactory();
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener8 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener8);
        managementDashboard1.resize((int) (byte) -1, (int) (byte) -1);
        javax.accessibility.AccessibleContext accessibleContext13 = managementDashboard1.getAccessibleContext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(accessibleContext13);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        java.awt.Graphics graphics4 = null;
        managementDashboard1.print(graphics4);
        String str6 = managementDashboard1.getToolTipText();
        java.awt.Component.BaselineResizeBehavior baselineResizeBehavior7 = managementDashboard1.getBaselineResizeBehavior();
        managementDashboard1.setVisible(false);
        java.awt.PopupMenu popupMenu10 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add(popupMenu10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"parent\" because \"popup\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + baselineResizeBehavior7 + "' != '" + java.awt.Component.BaselineResizeBehavior.OTHER + "'", baselineResizeBehavior7.equals(java.awt.Component.BaselineResizeBehavior.OTHER));
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        managementDashboard1.setName("ToolTipText");
        managementDashboard1.setAutoscrolls(false);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        managementDashboard1.doLayout();
        managementDashboard1.setBounds(12, (int) (byte) 1, (int) (short) 10, (int) (short) 1);
        java.awt.event.ActionListener actionListener16 = null;
        javax.swing.KeyStroke keyStroke18 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener16, "data/parkingSpaceData.csv", keyStroke18, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        javax.swing.JComponent.setDefaultLocale(locale9);
        javax.swing.JComponent.setDefaultLocale(locale9);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.ActionListener actionListener2 = null;
        javax.swing.KeyStroke keyStroke4 = null;
        managementDashboard1.registerKeyboardAction(actionListener2, "hi!", keyStroke4, (int) (short) 0);
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Dimension dimension10 = managementDashboard8.getMinimumSize();
        java.awt.image.ColorModel colorModel11 = managementDashboard8.getColorModel();
        java.awt.ComponentOrientation componentOrientation12 = managementDashboard8.getComponentOrientation();
        managementDashboard1.setComponentOrientation(componentOrientation12);
        java.awt.Event event14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = managementDashboard1.handleEvent(event14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(dimension10);
        org.junit.Assert.assertNotNull(colorModel11);
        org.junit.Assert.assertNotNull(componentOrientation12);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.transferFocus();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isFocusOwner();
        java.io.PrintWriter printWriter3 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter3, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.print(String)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        org.junit.Assert.assertNotNull(dimension6);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        boolean boolean14 = component13.isMinimumSizeSet();
        java.awt.event.FocusEvent.Cause cause15 = null;
        boolean boolean16 = component13.requestFocusInWindow(cause15);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        Class<?> wildcardClass32 = point30.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        boolean boolean13 = managementDashboard1.isValid();
        java.util.function.Consumer<String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        boolean boolean17 = managementDashboard16.isVisible();
        java.awt.Image image20 = managementDashboard16.createImage(13, (-1));
        managementDashboard16.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        java.beans.PropertyChangeListener propertyChangeListener25 = null;
        managementDashboard24.addPropertyChangeListener(propertyChangeListener25);
        java.awt.event.FocusEvent.Cause cause27 = null;
        managementDashboard24.requestFocus(cause27);
        java.awt.event.InputMethodListener inputMethodListener29 = null;
        managementDashboard24.addInputMethodListener(inputMethodListener29);
        java.awt.Point point31 = managementDashboard24.location();
        java.awt.Component component32 = managementDashboard16.findComponentAt(point31);
        java.awt.Graphics graphics33 = null;
        managementDashboard16.update(graphics33);
        javax.swing.InputVerifier inputVerifier35 = managementDashboard16.getInputVerifier();
        managementDashboard16.firePropertyChange("PanelUI", 'a', '4');
        javax.swing.InputMap inputMap41 = managementDashboard16.getInputMap(0);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap(10, inputMap41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(image20);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertNull(component32);
        org.junit.Assert.assertNull(inputVerifier35);
        org.junit.Assert.assertNotNull(inputMap41);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        String str5 = managementDashboard1.getUIClassID();
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener6);
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        java.awt.event.ActionListener actionListener10 = null;
        javax.swing.KeyStroke keyStroke11 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener10, keyStroke11, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        int int0 = java.awt.Frame.SE_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 5 + "'", int0 == 5);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        boolean boolean39 = managementDashboard23.requestFocus(false);
        managementDashboard23.validate();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        boolean boolean84 = managementDashboard23.isOptimizedDrawingEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        boolean boolean14 = managementDashboard1.isDisplayable();
        boolean boolean15 = managementDashboard1.getVerifyInputWhenFocusTarget();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        int int0 = java.awt.Frame.NE_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 7 + "'", int0 == 7);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.util.function.Consumer<String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        javax.swing.InputVerifier inputVerifier2 = userDashboard1.getInputVerifier();
        org.junit.Assert.assertNull(inputVerifier2);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        boolean boolean2 = managementAccountsView1.isFocusCycleRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Point point3 = managementAccountsView1.getLocationOnScreen();
            org.junit.Assert.fail("Expected exception of type java.awt.IllegalComponentStateException; message: component must be showing on the screen to determine its location");
        } catch (java.awt.IllegalComponentStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        boolean boolean14 = component13.isMinimumSizeSet();
        boolean boolean15 = component13.isFocusOwner();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        int int0 = java.awt.Frame.TEXT_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        boolean boolean5 = managementDashboard1.isPaintingTile();
        managementDashboard1.requestFocus();
        java.awt.Event event7 = null;
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        boolean boolean16 = managementDashboard1.action(event7, (Object) inputMethodListener14);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        boolean boolean5 = managementDashboard1.isPaintingTile();
        java.awt.event.HierarchyListener hierarchyListener6 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener6);
        java.awt.Event event8 = null;
        boolean boolean10 = managementDashboard1.lostFocus(event8, (Object) "");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.awt.image.ColorModel colorModel4 = managementDashboard1.getColorModel();
        java.awt.ComponentOrientation componentOrientation5 = managementDashboard1.getComponentOrientation();
        float float6 = managementDashboard1.getAlignmentY();
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.resize(0, (int) '4');
        managementDashboard8.repaint((long) 32);
        java.awt.Event event18 = null;
        boolean boolean20 = managementDashboard8.keyDown(event18, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        boolean boolean23 = managementDashboard22.isVisible();
        java.awt.Dimension dimension24 = managementDashboard22.getMinimumSize();
        java.util.function.Consumer<String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard26.addPropertyChangeListener(propertyChangeListener27);
        java.awt.event.FocusEvent.Cause cause29 = null;
        managementDashboard26.requestFocus(cause29);
        java.awt.event.InputMethodListener inputMethodListener31 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener31);
        java.awt.Point point33 = managementDashboard26.location();
        managementDashboard22.setLocation(point33);
        java.awt.Point point35 = managementDashboard8.getLocation(point33);
        managementDashboard1.setLocation(point35);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(colorModel4);
        org.junit.Assert.assertNotNull(componentOrientation5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.5f + "'", float6 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertNotNull(point33);
        org.junit.Assert.assertNotNull(point35);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        java.awt.MenuComponent menuComponent13 = null;
        managementDashboard1.remove(menuComponent13);
        managementDashboard1.grabFocus();
        java.util.function.Consumer<String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        java.beans.PropertyChangeListener propertyChangeListener18 = null;
        managementDashboard17.addPropertyChangeListener(propertyChangeListener18);
        java.awt.event.FocusEvent.Cause cause20 = null;
        managementDashboard17.requestFocus(cause20);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard17.addInputMethodListener(inputMethodListener22);
        java.awt.Color color24 = managementDashboard17.getBackground();
        managementDashboard17.setRequestFocusEnabled(true);
        java.awt.Shape shape27 = null;
        managementDashboard17.setMixingCutoutShape(shape27);
        java.awt.im.InputContext inputContext29 = managementDashboard17.getInputContext();
        java.util.function.Consumer<String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isVisible();
        java.awt.Image image35 = managementDashboard31.createImage(13, (-1));
        managementDashboard31.remove((int) (short) 1);
        java.awt.Dimension dimension38 = managementDashboard31.minimumSize();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard17, (Object) dimension38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: constraint must be a string (or null)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(color24);
        org.junit.Assert.assertNull(inputContext29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(image35);
        org.junit.Assert.assertNotNull(dimension38);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        managementDashboard1.enableInputMethods(false);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        java.util.function.Consumer<String> strConsumer0 = null;
        GenerateAccountView generateAccountView1 = new GenerateAccountView(strConsumer0);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray2 = generateAccountView1.getPropertyChangeListeners();
        int int3 = generateAccountView1.getX();
        java.awt.Container container4 = generateAccountView1.getParent();
        java.awt.image.ImageProducer imageProducer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Image image6 = container4.createImage(imageProducer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(propertyChangeListenerArray2);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray2, new java.beans.PropertyChangeListener[] {});
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(container4);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        managementDashboard23.show();
        managementDashboard23.show();
        boolean boolean33 = managementDashboard23.getAutoscrolls();
        java.awt.ImageCapabilities imageCapabilities36 = null;
        java.awt.image.VolatileImage volatileImage37 = managementDashboard23.createVolatileImage((int) (short) 10, (int) (short) -1, imageCapabilities36);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(volatileImage37);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        managementDashboard1.transferFocusUpCycle();
        java.awt.GraphicsConfiguration graphicsConfiguration8 = managementDashboard1.getGraphicsConfiguration();
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertNull(graphicsConfiguration8);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.event.MouseListener mouseListener22 = null;
        managementDashboard1.addMouseListener(mouseListener22);
        javax.swing.InputMap inputMap25 = managementDashboard1.getInputMap(0);
        Class<?> wildcardClass26 = managementDashboard1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(inputMap25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        java.awt.event.InputMethodListener inputMethodListener2 = null;
        managementAccountsView1.removeInputMethodListener(inputMethodListener2);
        managementAccountsView1.setAlignmentY((float) (byte) 1);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        SuperManager superManager0 = SuperManager.getInstance();
        MainSystem.currentManager = superManager0;
        org.junit.Assert.assertNotNull(superManager0);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        java.awt.event.HierarchyListener hierarchyListener5 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener5);
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray7 = managementDashboard1.getVetoableChangeListeners();
        java.awt.Component component10 = managementDashboard1.getComponentAt((int) '#', 8);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray7);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray7, new java.beans.VetoableChangeListener[] {});
        org.junit.Assert.assertNull(component10);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.event.MouseListener mouseListener22 = null;
        managementDashboard1.addMouseListener(mouseListener22);
        javax.swing.InputMap inputMap25 = managementDashboard1.getInputMap(0);
        boolean boolean26 = managementDashboard1.isFocusTraversalPolicyProvider();
        java.util.function.Consumer<String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard28.addPropertyChangeListener(propertyChangeListener29);
        managementDashboard28.enableInputMethods(true);
        java.awt.Dimension dimension33 = managementDashboard28.getMinimumSize();
        float float34 = managementDashboard28.getAlignmentX();
        managementDashboard28.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", '#', '#');
        java.awt.event.MouseMotionListener mouseMotionListener39 = null;
        managementDashboard28.removeMouseMotionListener(mouseMotionListener39);
        java.util.function.Consumer<String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        java.awt.image.ImageProducer imageProducer43 = null;
        java.awt.Image image44 = managementDashboard42.createImage(imageProducer43);
        java.util.function.Consumer<String> strConsumer45 = null;
        ManagementDashboard managementDashboard46 = new ManagementDashboard(strConsumer45);
        java.beans.PropertyChangeListener propertyChangeListener47 = null;
        managementDashboard46.addPropertyChangeListener(propertyChangeListener47);
        java.awt.event.FocusEvent.Cause cause49 = null;
        managementDashboard46.requestFocus(cause49);
        java.awt.event.InputMethodListener inputMethodListener51 = null;
        managementDashboard46.addInputMethodListener(inputMethodListener51);
        java.awt.Point point53 = managementDashboard46.location();
        java.awt.Component component54 = managementDashboard42.add((java.awt.Component) managementDashboard46);
        javax.swing.JPopupMenu jPopupMenu55 = managementDashboard42.getComponentPopupMenu();
        managementDashboard42.repaint((int) '#', 9, 1, (-1));
        managementDashboard42.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer63 = null;
        ManagementDashboard managementDashboard64 = new ManagementDashboard(strConsumer63);
        java.awt.event.ActionListener actionListener65 = null;
        javax.swing.KeyStroke keyStroke67 = null;
        managementDashboard64.registerKeyboardAction(actionListener65, "hi!", keyStroke67, (int) (short) 0);
        java.awt.Font font70 = managementDashboard64.getFont();
        managementDashboard42.setFont(font70);
        managementDashboard28.setFont(font70);
        managementDashboard1.setFont(font70);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(inputMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(dimension33);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 0.5f + "'", float34 == 0.5f);
        org.junit.Assert.assertNotNull(image44);
        org.junit.Assert.assertNotNull(point53);
        org.junit.Assert.assertNotNull(component54);
        org.junit.Assert.assertNull(jPopupMenu55);
        org.junit.Assert.assertNotNull(font70);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        managementDashboard1.setFocusTraversalKeysEnabled(true);
        boolean boolean12 = managementDashboard1.isBackgroundSet();
        java.awt.ImageCapabilities imageCapabilities15 = null;
        java.awt.image.VolatileImage volatileImage16 = managementDashboard1.createVolatileImage((int) (short) 100, (int) (short) 0, imageCapabilities15);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(volatileImage16);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        boolean boolean38 = component37.isMaximumSizeSet();
        java.util.function.Consumer<String> strConsumer39 = null;
        ManagementDashboard managementDashboard40 = new ManagementDashboard(strConsumer39);
        java.awt.image.ImageProducer imageProducer41 = null;
        java.awt.Image image42 = managementDashboard40.createImage(imageProducer41);
        boolean boolean48 = component37.imageUpdate(image42, 8, 128, (int) (short) 10, (int) 'a', 128);
        java.awt.event.MouseListener mouseListener49 = null;
        component37.addMouseListener(mouseListener49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(image42);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        ParkingSpace parkingSpace4 = new ParkingSpace(4, "", "PanelUI", "hi!");
        String str5 = parkingSpace4.getCurrentCar();
        int int6 = parkingSpace4.getIndex();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        java.awt.event.ActionListener actionListener4 = null;
        javax.swing.KeyStroke keyStroke5 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener4, keyStroke5, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        managementDashboard1.repaint((long) 32);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard1.keyDown(event11, (int) (short) 1);
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter14, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.print(String)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.enable();
        managementDashboard1.validate();
        managementDashboard1.setFocusable(true);
        boolean boolean8 = managementDashboard1.isPaintingForPrint();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        boolean boolean9 = managementDashboard1.isVisible();
        boolean boolean10 = managementDashboard1.isOptimizedDrawingEnabled();
        java.util.function.Consumer<String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        java.beans.PropertyChangeListener propertyChangeListener14 = null;
        managementDashboard13.addPropertyChangeListener(propertyChangeListener14);
        java.awt.event.FocusEvent.Cause cause16 = null;
        managementDashboard13.requestFocus(cause16);
        java.awt.event.InputMethodListener inputMethodListener18 = null;
        managementDashboard13.addInputMethodListener(inputMethodListener18);
        managementDashboard13.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        java.awt.MenuComponent menuComponent25 = null;
        managementDashboard13.remove(menuComponent25);
        managementDashboard13.grabFocus();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component28 = managementDashboard1.add("ToolTipText", (java.awt.Component) managementDashboard13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: ToolTipText");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.enable();
        managementDashboard1.validate();
        java.util.function.Consumer<String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        boolean boolean8 = managementDashboard7.isVisible();
        java.awt.Dimension dimension9 = managementDashboard7.getMinimumSize();
        managementDashboard7.transferFocusUpCycle();
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        int int13 = managementDashboard12.countComponents();
        java.awt.Insets insets14 = managementDashboard12.getInsets();
        boolean boolean15 = managementDashboard12.getIgnoreRepaint();
        managementDashboard12.move((int) '4', (int) (short) 1);
        int int19 = managementDashboard12.getX();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard7, (Object) managementDashboard12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: constraint must be a string (or null)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(insets14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.Component component22 = managementDashboard1.getNextFocusableComponent();
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener23);
        java.awt.Component component25 = null;
        java.util.function.Consumer<String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        boolean boolean28 = managementDashboard27.isVisible();
        java.awt.Image image31 = managementDashboard27.createImage(13, (-1));
        managementDashboard27.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.beans.PropertyChangeListener propertyChangeListener36 = null;
        managementDashboard35.addPropertyChangeListener(propertyChangeListener36);
        java.awt.event.FocusEvent.Cause cause38 = null;
        managementDashboard35.requestFocus(cause38);
        java.awt.event.InputMethodListener inputMethodListener40 = null;
        managementDashboard35.addInputMethodListener(inputMethodListener40);
        java.awt.Point point42 = managementDashboard35.location();
        java.awt.Component component43 = managementDashboard27.findComponentAt(point42);
        java.util.function.Consumer<String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        java.awt.image.ImageProducer imageProducer46 = null;
        java.awt.Image image47 = managementDashboard45.createImage(imageProducer46);
        java.util.function.Consumer<String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        java.beans.PropertyChangeListener propertyChangeListener50 = null;
        managementDashboard49.addPropertyChangeListener(propertyChangeListener50);
        java.awt.event.FocusEvent.Cause cause52 = null;
        managementDashboard49.requestFocus(cause52);
        java.awt.event.InputMethodListener inputMethodListener54 = null;
        managementDashboard49.addInputMethodListener(inputMethodListener54);
        int int56 = managementDashboard27.checkImage(image47, (java.awt.image.ImageObserver) managementDashboard49);
        java.util.function.Consumer<String> strConsumer57 = null;
        ManagementDashboard managementDashboard58 = new ManagementDashboard(strConsumer57);
        java.beans.PropertyChangeListener propertyChangeListener59 = null;
        managementDashboard58.addPropertyChangeListener(propertyChangeListener59);
        java.util.Locale locale61 = managementDashboard58.getLocale();
        float float62 = managementDashboard58.getAlignmentY();
        java.awt.Component component63 = managementDashboard49.add((java.awt.Component) managementDashboard58);
        java.util.function.Consumer<String> strConsumer64 = null;
        ManagementDashboard managementDashboard65 = new ManagementDashboard(strConsumer64);
        java.beans.PropertyChangeListener propertyChangeListener66 = null;
        managementDashboard65.addPropertyChangeListener(propertyChangeListener66);
        java.util.Locale locale68 = managementDashboard65.getLocale();
        managementDashboard58.setLocale(locale68);
        managementDashboard58.addNotify();
        managementDashboard58.setVisible(true);
        java.awt.Container container73 = managementDashboard58.getTopLevelAncestor();
        java.util.function.Consumer<String> strConsumer74 = null;
        ManagementDashboard managementDashboard75 = new ManagementDashboard(strConsumer74);
        boolean boolean76 = managementDashboard75.isVisible();
        java.util.function.Consumer<String> strConsumer77 = null;
        ManagementDashboard managementDashboard78 = new ManagementDashboard(strConsumer77);
        boolean boolean79 = managementDashboard78.isVisible();
        java.awt.Image image82 = managementDashboard78.createImage(13, (-1));
        managementDashboard78.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer85 = null;
        ManagementDashboard managementDashboard86 = new ManagementDashboard(strConsumer85);
        java.beans.PropertyChangeListener propertyChangeListener87 = null;
        managementDashboard86.addPropertyChangeListener(propertyChangeListener87);
        java.awt.event.FocusEvent.Cause cause89 = null;
        managementDashboard86.requestFocus(cause89);
        java.awt.event.InputMethodListener inputMethodListener91 = null;
        managementDashboard86.addInputMethodListener(inputMethodListener91);
        java.awt.Point point93 = managementDashboard86.location();
        java.awt.Component component94 = managementDashboard78.findComponentAt(point93);
        java.awt.Component component95 = managementDashboard75.getComponentAt(point93);
        java.awt.Point point96 = managementDashboard58.getLocation(point93);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add(component25, (Object) managementDashboard58, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"parent\" because \"comp\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(component22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(image31);
        org.junit.Assert.assertNotNull(point42);
        org.junit.Assert.assertNull(component43);
        org.junit.Assert.assertNotNull(image47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(locale61);
        org.junit.Assert.assertEquals(locale61.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float62 + "' != '" + 0.5f + "'", float62 == 0.5f);
        org.junit.Assert.assertNotNull(component63);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_CA");
        org.junit.Assert.assertNull(container73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(image82);
        org.junit.Assert.assertNotNull(point93);
        org.junit.Assert.assertNull(component94);
        org.junit.Assert.assertNull(component95);
        org.junit.Assert.assertNotNull(point96);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        boolean boolean33 = managementDashboard1.isOpaque();
        java.awt.Event event34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = managementDashboard1.postEvent(event34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Color color6 = managementDashboard1.getBackground();
        managementDashboard1.repaint();
        boolean boolean8 = managementDashboard1.isOpaque();
        int int9 = managementDashboard1.getHeight();
        managementDashboard1.setDoubleBuffered(true);
        org.junit.Assert.assertNotNull(color6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.Container container47 = managementDashboard32.getTopLevelAncestor();
        java.util.function.Consumer<String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        boolean boolean50 = managementDashboard49.isVisible();
        java.util.function.Consumer<String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        boolean boolean53 = managementDashboard52.isVisible();
        java.awt.Image image56 = managementDashboard52.createImage(13, (-1));
        managementDashboard52.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer59 = null;
        ManagementDashboard managementDashboard60 = new ManagementDashboard(strConsumer59);
        java.beans.PropertyChangeListener propertyChangeListener61 = null;
        managementDashboard60.addPropertyChangeListener(propertyChangeListener61);
        java.awt.event.FocusEvent.Cause cause63 = null;
        managementDashboard60.requestFocus(cause63);
        java.awt.event.InputMethodListener inputMethodListener65 = null;
        managementDashboard60.addInputMethodListener(inputMethodListener65);
        java.awt.Point point67 = managementDashboard60.location();
        java.awt.Component component68 = managementDashboard52.findComponentAt(point67);
        java.awt.Component component69 = managementDashboard49.getComponentAt(point67);
        java.awt.Point point70 = managementDashboard32.getLocation(point67);
        java.awt.Event event71 = null;
        boolean boolean74 = managementDashboard32.mouseEnter(event71, (int) '#', 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNull(container47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(image56);
        org.junit.Assert.assertNotNull(point67);
        org.junit.Assert.assertNull(component68);
        org.junit.Assert.assertNull(component69);
        org.junit.Assert.assertNotNull(point70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        managementDashboard1.repaint(0, (int) '#', (int) (short) -1, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        int int7 = managementDashboard1.getBaseline((int) '#', (int) (byte) 100);
        managementDashboard1.setOpaque(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.FocusTraversalPolicy focusTraversalPolicy6 = managementDashboard1.getFocusTraversalPolicy();
        org.junit.Assert.assertNull(focusTraversalPolicy6);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        int int0 = javax.swing.JComponent.WHEN_FOCUSED;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        java.awt.AWTEvent aWTEvent10 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.dispatchEvent(aWTEvent10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.AWTEvent.getID()\" because \"e\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.Component component22 = managementDashboard1.getNextFocusableComponent();
        managementDashboard1.repaint(0L, 0, 8, 11, 11);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component30 = managementDashboard1.getComponent((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 35");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(component22);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Graphics graphics6 = null;
        managementDashboard1.printComponents(graphics6);
        java.awt.Event event8 = null;
        boolean boolean11 = managementDashboard1.mouseDown(event8, (int) ' ', (int) '#');
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream12, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.print(String)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener11 = null;
        managementDashboard1.addMouseListener(mouseListener11);
        boolean boolean13 = managementDashboard1.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent14 = null;
        java.awt.Point point15 = managementDashboard1.getPopupLocation(mouseEvent14);
        managementDashboard1.resetKeyboardActions();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(point15);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        managementDashboard5.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        float float17 = managementDashboard5.getAlignmentY();
        javax.swing.ActionMap actionMap18 = managementDashboard5.getActionMap();
        managementDashboard1.setActionMap(actionMap18);
        java.awt.Event event20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = managementDashboard1.handleEvent(event20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.5f + "'", float17 == 0.5f);
        org.junit.Assert.assertNotNull(actionMap18);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        int int0 = java.awt.Frame.NW_RESIZE_CURSOR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 6 + "'", int0 == 6);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        boolean boolean6 = managementDashboard1.contains((int) (byte) -1, (int) '#');
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        javax.swing.JToolTip jToolTip16 = managementDashboard8.createToolTip();
        Object obj17 = null;
        managementDashboard1.putClientProperty((Object) jToolTip16, obj17);
        java.util.function.Consumer<String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        java.beans.PropertyChangeListener propertyChangeListener21 = null;
        managementDashboard20.addPropertyChangeListener(propertyChangeListener21);
        java.awt.event.FocusEvent.Cause cause23 = null;
        managementDashboard20.requestFocus(cause23);
        java.awt.Color color25 = managementDashboard20.getBackground();
        jToolTip16.setBackground(color25);
        java.awt.event.InputMethodListener[] inputMethodListenerArray27 = jToolTip16.getInputMethodListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
        org.junit.Assert.assertNotNull(jToolTip16);
        org.junit.Assert.assertNotNull(color25);
        org.junit.Assert.assertNotNull(inputMethodListenerArray27);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray27, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        java.awt.event.InputMethodListener inputMethodListener2 = null;
        managementAccountsView1.removeInputMethodListener(inputMethodListener2);
        boolean boolean4 = managementAccountsView1.isFocusTraversable();
        java.awt.Point point5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = managementAccountsView1.contains(point5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"p\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.awt.Window[] windowArray0 = java.awt.Window.getOwnerlessWindows();
        org.junit.Assert.assertNotNull(windowArray0);
        org.junit.Assert.assertArrayEquals(windowArray0, new java.awt.Window[] {});
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Color color6 = managementDashboard1.getBackground();
        managementDashboard1.repaint();
        boolean boolean8 = managementDashboard1.isOpaque();
        managementDashboard1.firePropertyChange("hi!", 10, 10);
        javax.swing.plaf.PanelUI panelUI13 = managementDashboard1.getUI();
        java.awt.Dimension dimension14 = managementDashboard1.minimumSize();
        org.junit.Assert.assertNotNull(color6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(panelUI13);
        org.junit.Assert.assertNotNull(dimension14);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        managementDashboard23.show();
        java.awt.event.FocusListener focusListener32 = null;
        managementDashboard23.addFocusListener(focusListener32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", '#', '#');
        boolean boolean12 = managementDashboard1.isVisible();
        managementDashboard1.firePropertyChange("123456789", (short) (byte) 0, (short) -1);
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        java.awt.Toolkit toolkit33 = managementDashboard1.getToolkit();
        java.util.function.Consumer<String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        boolean boolean36 = managementDashboard35.isVisible();
        java.awt.Dimension dimension37 = managementDashboard35.getMinimumSize();
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.awt.event.FocusEvent.Cause cause42 = null;
        managementDashboard39.requestFocus(cause42);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener44);
        java.awt.Point point46 = managementDashboard39.location();
        managementDashboard35.setLocation(point46);
        java.awt.Component component48 = managementDashboard1.getComponentAt(point46);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertNotNull(toolkit33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(dimension37);
        org.junit.Assert.assertNotNull(point46);
        org.junit.Assert.assertNull(component48);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.setEnabled(false);
        managementDashboard1.move(2, 8);
        boolean boolean16 = managementDashboard1.isOpaque();
        String str17 = managementDashboard1.getToolTipText();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.event.ComponentListener componentListener6 = null;
        managementDashboard1.removeComponentListener(componentListener6);
        managementDashboard1.removeAll();
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.repaint((int) '#', 9, 1, (-1));
        managementDashboard1.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.awt.event.ActionListener actionListener24 = null;
        javax.swing.KeyStroke keyStroke26 = null;
        managementDashboard23.registerKeyboardAction(actionListener24, "hi!", keyStroke26, (int) (short) 0);
        java.awt.Font font29 = managementDashboard23.getFont();
        managementDashboard1.setFont(font29);
        javax.swing.KeyStroke keyStroke31 = null;
        managementDashboard1.unregisterKeyboardAction(keyStroke31);
        java.awt.Event event33 = null;
        boolean boolean36 = managementDashboard1.mouseDrag(event33, (int) (short) 100, 12);
        java.util.function.Consumer<String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        java.beans.PropertyChangeListener propertyChangeListener39 = null;
        managementDashboard38.addPropertyChangeListener(propertyChangeListener39);
        java.util.Locale locale41 = managementDashboard38.getLocale();
        float float42 = managementDashboard38.getAlignmentY();
        java.awt.image.VolatileImage volatileImage45 = managementDashboard38.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj46 = managementDashboard38.getTreeLock();
        managementDashboard38.setVerifyInputWhenFocusTarget(true);
        managementDashboard38.requestFocus();
        int int50 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard38);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(locale41);
        org.junit.Assert.assertEquals(locale41.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + 0.5f + "'", float42 == 0.5f);
        org.junit.Assert.assertNull(volatileImage45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        java.awt.event.MouseEvent mouseEvent5 = null;
        java.awt.Point point6 = managementDashboard1.getPopupLocation(mouseEvent5);
        boolean boolean7 = managementDashboard1.isPreferredSizeSet();
        boolean boolean9 = managementDashboard1.areFocusTraversalKeysSet(1);
        managementDashboard1.setAlignmentY((float) (byte) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(point6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.event.MouseListener mouseListener22 = null;
        managementDashboard1.addMouseListener(mouseListener22);
        java.io.PrintWriter printWriter24 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter24, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", '#', '#');
        boolean boolean12 = managementDashboard1.isBackgroundSet();
        managementDashboard1.invalidate();
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        ParkingSpace parkingSpace4 = new ParkingSpace(4, "", "PanelUI", "hi!");
        String str5 = parkingSpace4.getCurrentUser();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        java.awt.Dimension dimension45 = managementDashboard32.getMaximumSize();
        boolean boolean46 = managementDashboard32.isFocusTraversalPolicySet();
        managementDashboard32.disable();
        java.awt.Graphics graphics48 = null;
        managementDashboard32.update(graphics48);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray45 = managementDashboard32.getVetoableChangeListeners();
        managementDashboard32.firePropertyChange("PanelUI", (byte) -1, (byte) 0);
        java.awt.event.MouseEvent mouseEvent50 = null;
        java.awt.Point point51 = managementDashboard32.getPopupLocation(mouseEvent50);
        java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray52 = managementDashboard32.getHierarchyBoundsListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray45);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray45, new java.beans.VetoableChangeListener[] {});
        org.junit.Assert.assertNull(point51);
        org.junit.Assert.assertNotNull(hierarchyBoundsListenerArray52);
        org.junit.Assert.assertArrayEquals(hierarchyBoundsListenerArray52, new java.awt.event.HierarchyBoundsListener[] {});
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        javax.swing.JRootPane jRootPane32 = managementDashboard1.getRootPane();
        javax.accessibility.AccessibleContext accessibleContext33 = managementDashboard1.getAccessibleContext();
        boolean boolean35 = managementDashboard1.requestFocus(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertNull(jRootPane32);
        org.junit.Assert.assertNotNull(accessibleContext33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        java.awt.Graphics graphics4 = null;
        managementDashboard1.print(graphics4);
        String str6 = managementDashboard1.getToolTipText();
        java.awt.Container container7 = managementDashboard1.getTopLevelAncestor();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.GraphicsConfiguration graphicsConfiguration8 = container7.getGraphicsConfiguration();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(container7);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        boolean boolean6 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        boolean boolean7 = managementDashboard1.requestDefaultFocus();
        managementDashboard1.updateUI();
        java.util.function.Consumer<String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.remove((int) (short) 1);
        java.awt.Insets insets17 = managementDashboard10.getInsets();
        java.util.Locale locale18 = managementDashboard10.getLocale();
        java.awt.Graphics graphics19 = null;
        managementDashboard10.printAll(graphics19);
        boolean boolean21 = managementDashboard10.isPreferredSizeSet();
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        boolean boolean24 = managementDashboard23.isVisible();
        java.util.function.Consumer<String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        boolean boolean27 = managementDashboard26.isVisible();
        java.awt.Image image30 = managementDashboard26.createImage(13, (-1));
        managementDashboard26.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        java.beans.PropertyChangeListener propertyChangeListener35 = null;
        managementDashboard34.addPropertyChangeListener(propertyChangeListener35);
        java.awt.event.FocusEvent.Cause cause37 = null;
        managementDashboard34.requestFocus(cause37);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard34.addInputMethodListener(inputMethodListener39);
        java.awt.Point point41 = managementDashboard34.location();
        java.awt.Component component42 = managementDashboard26.findComponentAt(point41);
        java.awt.Component component43 = managementDashboard23.getComponentAt(point41);
        managementDashboard23.grabFocus();
        java.awt.Rectangle rectangle45 = managementDashboard23.bounds();
        managementDashboard10.setBounds(rectangle45);
        managementDashboard1.setBounds(rectangle45);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(insets17);
        org.junit.Assert.assertNotNull(locale18);
        org.junit.Assert.assertEquals(locale18.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(image30);
        org.junit.Assert.assertNotNull(point41);
        org.junit.Assert.assertNull(component42);
        org.junit.Assert.assertNull(component43);
        org.junit.Assert.assertNotNull(rectangle45);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        boolean boolean14 = managementDashboard1.isDisplayable();
        managementDashboard1.addNotify();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        int int20 = managementDashboard1.getComponentCount();
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray21 = managementDashboard1.getVetoableChangeListeners();
        java.io.PrintStream printStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray21);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray21, new java.beans.VetoableChangeListener[] {});
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        managementDashboard1.grabFocus();
        boolean boolean23 = managementDashboard1.isOptimizedDrawingEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        javax.swing.plaf.PanelUI panelUI9 = managementDashboard1.getUI();
        javax.swing.InputVerifier inputVerifier10 = managementDashboard1.getInputVerifier();
        javax.swing.InputVerifier inputVerifier11 = managementDashboard1.getInputVerifier();
        managementDashboard1.invalidate();
        java.awt.event.MouseMotionListener mouseMotionListener13 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener13);
        java.awt.Component component17 = managementDashboard1.getComponentAt((int) ' ', 10);
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertNotNull(panelUI9);
        org.junit.Assert.assertNull(inputVerifier10);
        org.junit.Assert.assertNull(inputVerifier11);
        org.junit.Assert.assertNull(component17);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        int int47 = managementDashboard32.getHeight();
        managementDashboard32.resize(1, 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.ActionListener actionListener2 = null;
        javax.swing.KeyStroke keyStroke4 = null;
        managementDashboard1.registerKeyboardAction(actionListener2, "hi!", keyStroke4, (int) (short) 0);
        int int7 = managementDashboard1.getHeight();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener8);
        java.awt.Component component12 = managementDashboard1.locate(7, (int) (byte) 1);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setEnabled(true);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        boolean boolean20 = managementDashboard19.isVisible();
        java.awt.Image image23 = managementDashboard19.createImage(13, (-1));
        managementDashboard19.remove((int) (short) 1);
        java.awt.Insets insets26 = managementDashboard19.getInsets();
        java.util.Locale locale27 = managementDashboard19.getLocale();
        java.awt.Graphics graphics28 = null;
        managementDashboard19.printAll(graphics28);
        String str30 = managementDashboard19.toString();
        managementDashboard15.setNextFocusableComponent((java.awt.Component) managementDashboard19);
        java.awt.event.MouseListener mouseListener32 = null;
        managementDashboard15.addMouseListener(mouseListener32);
        java.awt.event.MouseWheelListener mouseWheelListener34 = null;
        managementDashboard15.removeMouseWheelListener(mouseWheelListener34);
        java.awt.event.MouseListener mouseListener36 = null;
        managementDashboard15.addMouseListener(mouseListener36);
        javax.swing.InputMap inputMap39 = managementDashboard15.getInputMap(0);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap(5, inputMap39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(component12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(image23);
        org.junit.Assert.assertNotNull(insets26);
        org.junit.Assert.assertNotNull(locale27);
        org.junit.Assert.assertEquals(locale27.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str30, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(inputMap39);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        int int33 = managementDashboard1.getComponentCount();
        managementDashboard1.requestFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        managementDashboard1.transferFocusUpCycle();
        java.awt.event.KeyListener keyListener8 = null;
        managementDashboard1.removeKeyListener(keyListener8);
        managementDashboard1.firePropertyChange("data/lotData.csv", (short) (byte) 10, (short) 1);
        org.junit.Assert.assertNotNull(dimension6);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        javax.swing.plaf.PanelUI panelUI9 = managementDashboard1.getUI();
        javax.swing.InputVerifier inputVerifier10 = managementDashboard1.getInputVerifier();
        javax.swing.InputVerifier inputVerifier11 = managementDashboard1.getInputVerifier();
        managementDashboard1.invalidate();
        boolean boolean14 = managementDashboard1.requestFocus(false);
        java.awt.Image image17 = managementDashboard1.createImage(11, (int) (short) -1);
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertNotNull(panelUI9);
        org.junit.Assert.assertNull(inputVerifier10);
        org.junit.Assert.assertNull(inputVerifier11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(image17);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.repaint((int) '#', 9, 1, (-1));
        managementDashboard1.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.awt.event.ActionListener actionListener24 = null;
        javax.swing.KeyStroke keyStroke26 = null;
        managementDashboard23.registerKeyboardAction(actionListener24, "hi!", keyStroke26, (int) (short) 0);
        java.awt.Font font29 = managementDashboard23.getFont();
        managementDashboard1.setFont(font29);
        javax.swing.KeyStroke keyStroke31 = null;
        managementDashboard1.unregisterKeyboardAction(keyStroke31);
        java.awt.Component.BaselineResizeBehavior baselineResizeBehavior33 = managementDashboard1.getBaselineResizeBehavior();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + baselineResizeBehavior33 + "' != '" + java.awt.Component.BaselineResizeBehavior.OTHER + "'", baselineResizeBehavior33.equals(java.awt.Component.BaselineResizeBehavior.OTHER));
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        boolean boolean6 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        boolean boolean7 = managementDashboard1.requestDefaultFocus();
        managementDashboard1.updateUI();
        managementDashboard1.setOpaque(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        managementDashboard1.resize(2, 100);
        java.beans.VetoableChangeListener vetoableChangeListener7 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener7);
        java.util.function.Consumer<String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard18.addPropertyChangeListener(propertyChangeListener19);
        java.awt.event.FocusEvent.Cause cause21 = null;
        managementDashboard18.requestFocus(cause21);
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard18.addInputMethodListener(inputMethodListener23);
        java.awt.Point point25 = managementDashboard18.location();
        java.awt.Component component26 = managementDashboard10.findComponentAt(point25);
        java.util.function.Consumer<String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        java.awt.image.ImageProducer imageProducer29 = null;
        java.awt.Image image30 = managementDashboard28.createImage(imageProducer29);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.awt.event.FocusEvent.Cause cause35 = null;
        managementDashboard32.requestFocus(cause35);
        java.awt.event.InputMethodListener inputMethodListener37 = null;
        managementDashboard32.addInputMethodListener(inputMethodListener37);
        int int39 = managementDashboard10.checkImage(image30, (java.awt.image.ImageObserver) managementDashboard32);
        java.util.function.Consumer<String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        java.beans.PropertyChangeListener propertyChangeListener42 = null;
        managementDashboard41.addPropertyChangeListener(propertyChangeListener42);
        java.util.Locale locale44 = managementDashboard41.getLocale();
        float float45 = managementDashboard41.getAlignmentY();
        java.awt.Component component46 = managementDashboard32.add((java.awt.Component) managementDashboard41);
        java.util.function.Consumer<String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        java.beans.PropertyChangeListener propertyChangeListener49 = null;
        managementDashboard48.addPropertyChangeListener(propertyChangeListener49);
        java.util.Locale locale51 = managementDashboard48.getLocale();
        managementDashboard41.setLocale(locale51);
        managementDashboard1.setLocale(locale51);
        java.util.function.Consumer<String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        boolean boolean56 = managementDashboard55.isVisible();
        java.awt.Image image59 = managementDashboard55.createImage(13, (-1));
        managementDashboard55.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        java.beans.PropertyChangeListener propertyChangeListener64 = null;
        managementDashboard63.addPropertyChangeListener(propertyChangeListener64);
        java.awt.event.FocusEvent.Cause cause66 = null;
        managementDashboard63.requestFocus(cause66);
        java.awt.event.InputMethodListener inputMethodListener68 = null;
        managementDashboard63.addInputMethodListener(inputMethodListener68);
        java.awt.Point point70 = managementDashboard63.location();
        java.awt.Component component71 = managementDashboard55.findComponentAt(point70);
        java.util.function.Consumer<String> strConsumer72 = null;
        ManagementDashboard managementDashboard73 = new ManagementDashboard(strConsumer72);
        int int74 = managementDashboard73.countComponents();
        managementDashboard73.resetKeyboardActions();
        managementDashboard73.layout();
        java.awt.event.MouseEvent mouseEvent77 = null;
        java.awt.Point point78 = managementDashboard73.getPopupLocation(mouseEvent77);
        boolean boolean79 = managementDashboard55.isAncestorOf((java.awt.Component) managementDashboard73);
        java.awt.dnd.DropTarget dropTarget80 = managementDashboard55.getDropTarget();
        int int81 = managementDashboard55.getY();
        java.awt.Point point82 = managementDashboard55.location();
        boolean boolean83 = managementDashboard1.contains(point82);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(point25);
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNotNull(image30);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.5f + "'", float45 == 0.5f);
        org.junit.Assert.assertNotNull(component46);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(image59);
        org.junit.Assert.assertNotNull(point70);
        org.junit.Assert.assertNull(component71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertNull(point78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(dropTarget80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(point82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.Insets insets4 = null;
        java.awt.Insets insets5 = managementDashboard1.getInsets(insets4);
        String str6 = managementDashboard1.getToolTipText();
        java.io.PrintStream printStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(insets5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        managementDashboard1.grabFocus();
        java.awt.Rectangle rectangle23 = managementDashboard1.bounds();
        java.awt.event.MouseMotionListener mouseMotionListener24 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener24);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertNotNull(rectangle23);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        managementDashboard1.grabFocus();
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        boolean boolean25 = managementDashboard24.isVisible();
        java.awt.Image image28 = managementDashboard24.createImage(13, (-1));
        managementDashboard24.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.awt.event.FocusEvent.Cause cause35 = null;
        managementDashboard32.requestFocus(cause35);
        java.awt.event.InputMethodListener inputMethodListener37 = null;
        managementDashboard32.addInputMethodListener(inputMethodListener37);
        java.awt.Point point39 = managementDashboard32.location();
        java.awt.Component component40 = managementDashboard24.findComponentAt(point39);
        java.util.function.Consumer<String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        java.awt.image.ImageProducer imageProducer43 = null;
        java.awt.Image image44 = managementDashboard42.createImage(imageProducer43);
        java.util.function.Consumer<String> strConsumer45 = null;
        ManagementDashboard managementDashboard46 = new ManagementDashboard(strConsumer45);
        java.beans.PropertyChangeListener propertyChangeListener47 = null;
        managementDashboard46.addPropertyChangeListener(propertyChangeListener47);
        java.awt.event.FocusEvent.Cause cause49 = null;
        managementDashboard46.requestFocus(cause49);
        java.awt.event.InputMethodListener inputMethodListener51 = null;
        managementDashboard46.addInputMethodListener(inputMethodListener51);
        int int53 = managementDashboard24.checkImage(image44, (java.awt.image.ImageObserver) managementDashboard46);
        java.util.function.Consumer<String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        java.beans.PropertyChangeListener propertyChangeListener56 = null;
        managementDashboard55.addPropertyChangeListener(propertyChangeListener56);
        java.util.Locale locale58 = managementDashboard55.getLocale();
        float float59 = managementDashboard55.getAlignmentY();
        java.awt.Component component60 = managementDashboard46.add((java.awt.Component) managementDashboard55);
        java.util.function.Consumer<String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        java.beans.PropertyChangeListener propertyChangeListener63 = null;
        managementDashboard62.addPropertyChangeListener(propertyChangeListener63);
        java.util.Locale locale65 = managementDashboard62.getLocale();
        managementDashboard55.setLocale(locale65);
        managementDashboard55.addNotify();
        java.awt.Dimension dimension68 = managementDashboard55.getMaximumSize();
        managementDashboard1.setMaximumSize(dimension68);
        managementDashboard1.firePropertyChange("hi!", (long) 11, (long) 8);
        int int74 = managementDashboard1.getX();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(image28);
        org.junit.Assert.assertNotNull(point39);
        org.junit.Assert.assertNull(component40);
        org.junit.Assert.assertNotNull(image44);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.5f + "'", float59 == 0.5f);
        org.junit.Assert.assertNotNull(component60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension68);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        managementDashboard1.layout();
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.repaint((int) '#', 9, 1, (-1));
        managementDashboard1.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.awt.event.ActionListener actionListener24 = null;
        javax.swing.KeyStroke keyStroke26 = null;
        managementDashboard23.registerKeyboardAction(actionListener24, "hi!", keyStroke26, (int) (short) 0);
        java.awt.Font font29 = managementDashboard23.getFont();
        managementDashboard1.setFont(font29);
        int int31 = managementDashboard1.getY();
        java.awt.event.MouseListener[] mouseListenerArray32 = managementDashboard1.getMouseListeners();
        managementDashboard1.show(true);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mouseListenerArray32);
        org.junit.Assert.assertArrayEquals(mouseListenerArray32, new java.awt.event.MouseListener[] {});
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        java.awt.event.InputMethodListener inputMethodListener2 = null;
        managementAccountsView1.removeInputMethodListener(inputMethodListener2);
        boolean boolean4 = managementAccountsView1.isFocusTraversable();
        java.awt.Component component7 = managementAccountsView1.locate(5, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(component7);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Image image19 = managementDashboard15.createImage(13, (-1));
        managementDashboard15.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Component component31 = managementDashboard15.findComponentAt(point30);
        java.util.function.Consumer<String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        int int34 = managementDashboard33.countComponents();
        managementDashboard33.resetKeyboardActions();
        managementDashboard33.layout();
        java.awt.event.MouseEvent mouseEvent37 = null;
        java.awt.Point point38 = managementDashboard33.getPopupLocation(mouseEvent37);
        boolean boolean39 = managementDashboard15.isAncestorOf((java.awt.Component) managementDashboard33);
        java.awt.dnd.DropTarget dropTarget40 = managementDashboard15.getDropTarget();
        boolean boolean43 = managementDashboard15.contains(3, (int) (short) 100);
        java.awt.Dimension dimension44 = managementDashboard15.getMinimumSize();
        managementDashboard5.setPreferredSize(dimension44);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNull(component31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNull(point38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(dropTarget40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dimension44);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj9 = managementDashboard1.getTreeLock();
        managementDashboard1.setVerifyInputWhenFocusTarget(true);
        managementDashboard1.requestFocus();
        managementDashboard1.setFocusTraversalKeysEnabled(false);
        java.awt.LayoutManager layoutManager15 = managementDashboard1.getLayout();
        boolean boolean16 = managementDashboard1.isValidateRoot();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(layoutManager15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Graphics graphics31 = null;
        managementDashboard1.printAll(graphics31);
        java.util.function.Consumer<String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        java.awt.image.ImageProducer imageProducer35 = null;
        java.awt.Image image36 = managementDashboard34.createImage(imageProducer35);
        java.util.function.Consumer<String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        java.beans.PropertyChangeListener propertyChangeListener39 = null;
        managementDashboard38.addPropertyChangeListener(propertyChangeListener39);
        java.awt.event.FocusEvent.Cause cause41 = null;
        managementDashboard38.requestFocus(cause41);
        java.awt.event.InputMethodListener inputMethodListener43 = null;
        managementDashboard38.addInputMethodListener(inputMethodListener43);
        java.awt.Point point45 = managementDashboard38.location();
        java.awt.Component component46 = managementDashboard34.add((java.awt.Component) managementDashboard38);
        component46.setBounds((int) (byte) 0, 0, 100, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer52 = null;
        ManagementDashboard managementDashboard53 = new ManagementDashboard(strConsumer52);
        boolean boolean54 = managementDashboard53.isVisible();
        java.util.function.Consumer<String> strConsumer55 = null;
        ManagementDashboard managementDashboard56 = new ManagementDashboard(strConsumer55);
        boolean boolean57 = managementDashboard56.isVisible();
        java.awt.Image image60 = managementDashboard56.createImage(13, (-1));
        managementDashboard56.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer63 = null;
        ManagementDashboard managementDashboard64 = new ManagementDashboard(strConsumer63);
        java.beans.PropertyChangeListener propertyChangeListener65 = null;
        managementDashboard64.addPropertyChangeListener(propertyChangeListener65);
        java.awt.event.FocusEvent.Cause cause67 = null;
        managementDashboard64.requestFocus(cause67);
        java.awt.event.InputMethodListener inputMethodListener69 = null;
        managementDashboard64.addInputMethodListener(inputMethodListener69);
        java.awt.Point point71 = managementDashboard64.location();
        java.awt.Component component72 = managementDashboard56.findComponentAt(point71);
        java.awt.Component component73 = managementDashboard53.getComponentAt(point71);
        managementDashboard53.grabFocus();
        java.awt.Rectangle rectangle75 = managementDashboard53.bounds();
        java.awt.Rectangle rectangle76 = managementDashboard53.bounds();
        java.awt.Rectangle rectangle77 = component46.getBounds(rectangle76);
        java.awt.Rectangle rectangle78 = managementDashboard1.getBounds(rectangle76);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener79 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener79);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(image36);
        org.junit.Assert.assertNotNull(point45);
        org.junit.Assert.assertNotNull(component46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(image60);
        org.junit.Assert.assertNotNull(point71);
        org.junit.Assert.assertNull(component72);
        org.junit.Assert.assertNull(component73);
        org.junit.Assert.assertNotNull(rectangle75);
        org.junit.Assert.assertNotNull(rectangle76);
        org.junit.Assert.assertNotNull(rectangle77);
        org.junit.Assert.assertNotNull(rectangle78);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        managementDashboard1.repaint((long) 32);
        java.util.Locale locale11 = managementDashboard1.getLocale();
        java.awt.event.KeyListener[] keyListenerArray12 = managementDashboard1.getKeyListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_CA");
        org.junit.Assert.assertNotNull(keyListenerArray12);
        org.junit.Assert.assertArrayEquals(keyListenerArray12, new java.awt.event.KeyListener[] {});
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard33.addPropertyChangeListener(propertyChangeListener34);
        java.awt.event.FocusEvent.Cause cause36 = null;
        managementDashboard33.requestFocus(cause36);
        java.awt.event.InputMethodListener inputMethodListener38 = null;
        managementDashboard33.addInputMethodListener(inputMethodListener38);
        managementDashboard33.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        java.awt.event.ComponentListener componentListener45 = null;
        managementDashboard33.addComponentListener(componentListener45);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component47 = managementDashboard1.add("data/lotData.csv", (java.awt.Component) managementDashboard33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: data/lotData.csv");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        java.awt.event.HierarchyListener hierarchyListener5 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener5);
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray7 = managementDashboard1.getVetoableChangeListeners();
        java.io.PrintWriter printWriter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter8, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray7);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray7, new java.beans.VetoableChangeListener[] {});
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        User user0 = null;
        MainSystem.currentUser = user0;
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        int int10 = managementDashboard1.getDebugGraphicsOptions();
        java.awt.Component component13 = managementDashboard1.locate(32, 16);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        java.beans.PropertyChangeListener propertyChangeListener16 = null;
        managementDashboard15.addPropertyChangeListener(propertyChangeListener16);
        java.awt.event.FocusEvent.Cause cause18 = null;
        managementDashboard15.requestFocus(cause18);
        java.awt.event.InputMethodListener inputMethodListener20 = null;
        managementDashboard15.addInputMethodListener(inputMethodListener20);
        java.awt.Color color22 = managementDashboard15.getBackground();
        managementDashboard15.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener25 = null;
        managementDashboard15.addMouseListener(mouseListener25);
        boolean boolean27 = managementDashboard15.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent28 = null;
        java.awt.Point point29 = managementDashboard15.getPopupLocation(mouseEvent28);
        java.util.function.Consumer<String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        managementDashboard31.setEnabled(true);
        java.awt.Point point34 = managementDashboard31.location();
        java.awt.Component component35 = managementDashboard15.findComponentAt(point34);
        java.awt.Point point36 = managementDashboard1.getLocation(point34);
        java.awt.Graphics graphics37 = null;
        managementDashboard1.paint(graphics37);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(component13);
        org.junit.Assert.assertNotNull(color22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(point29);
        org.junit.Assert.assertNotNull(point34);
        org.junit.Assert.assertNull(component35);
        org.junit.Assert.assertNotNull(point36);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Graphics graphics6 = null;
        managementDashboard1.printComponents(graphics6);
        java.awt.event.InputMethodListener[] inputMethodListenerArray8 = managementDashboard1.getInputMethodListeners();
        org.junit.Assert.assertNotNull(inputMethodListenerArray8);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray8, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.repaint((int) '#', 9, 1, (-1));
        managementDashboard1.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.awt.event.ActionListener actionListener24 = null;
        javax.swing.KeyStroke keyStroke26 = null;
        managementDashboard23.registerKeyboardAction(actionListener24, "hi!", keyStroke26, (int) (short) 0);
        java.awt.Font font29 = managementDashboard23.getFont();
        managementDashboard1.setFont(font29);
        java.awt.Event event31 = null;
        boolean boolean33 = managementDashboard1.gotFocus(event31, (Object) "data/parkingSpaceData.csv");
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.awt.Graphics graphics18 = null;
        managementDashboard1.update(graphics18);
        javax.swing.InputVerifier inputVerifier20 = managementDashboard1.getInputVerifier();
        managementDashboard1.firePropertyChange("PanelUI", 'a', '4');
        javax.swing.InputMap inputMap26 = managementDashboard1.getInputMap(0);
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap28 = managementDashboard1.getInputMap(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNull(inputVerifier20);
        org.junit.Assert.assertNotNull(inputMap26);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        int int20 = managementDashboard19.countComponents();
        managementDashboard19.resetKeyboardActions();
        managementDashboard19.layout();
        java.awt.event.MouseEvent mouseEvent23 = null;
        java.awt.Point point24 = managementDashboard19.getPopupLocation(mouseEvent23);
        boolean boolean25 = managementDashboard1.isAncestorOf((java.awt.Component) managementDashboard19);
        managementDashboard1.revalidate();
        managementDashboard1.resize((int) ' ', 3);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(point24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.MouseMotionListener mouseMotionListener15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jPopupMenu14.removeMouseMotionListener(mouseMotionListener15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.util.function.Consumer<String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        boolean boolean49 = managementDashboard48.isVisible();
        java.awt.Dimension dimension50 = managementDashboard48.getMinimumSize();
        java.util.function.Consumer<String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard52.addPropertyChangeListener(propertyChangeListener53);
        java.awt.event.FocusEvent.Cause cause55 = null;
        managementDashboard52.requestFocus(cause55);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard52.addInputMethodListener(inputMethodListener57);
        java.awt.Point point59 = managementDashboard52.location();
        managementDashboard48.setLocation(point59);
        managementDashboard32.setLocation(point59);
        java.util.function.Consumer<String> strConsumer63 = null;
        ManagementDashboard managementDashboard64 = new ManagementDashboard(strConsumer63);
        managementDashboard64.setEnabled(true);
        java.util.function.Consumer<String> strConsumer67 = null;
        ManagementDashboard managementDashboard68 = new ManagementDashboard(strConsumer67);
        boolean boolean69 = managementDashboard68.isVisible();
        java.awt.Image image72 = managementDashboard68.createImage(13, (-1));
        managementDashboard68.remove((int) (short) 1);
        java.awt.Insets insets75 = managementDashboard68.getInsets();
        java.util.Locale locale76 = managementDashboard68.getLocale();
        java.awt.Graphics graphics77 = null;
        managementDashboard68.printAll(graphics77);
        String str79 = managementDashboard68.toString();
        managementDashboard64.setNextFocusableComponent((java.awt.Component) managementDashboard68);
        java.awt.event.MouseListener mouseListener81 = null;
        managementDashboard64.addMouseListener(mouseListener81);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component83 = managementDashboard32.add("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", (java.awt.Component) managementDashboard64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.Container.getFocusTraversalPolicy()\" because \"nearestRoot\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(dimension50);
        org.junit.Assert.assertNotNull(point59);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(image72);
        org.junit.Assert.assertNotNull(insets75);
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str79, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        String str2 = parkingLot1.getLotAvailability();
        parkingLot1.removeBooking(16);
        ParkingSpace parkingSpace6 = parkingLot1.getSpace(64);
        boolean boolean7 = parkingLot1.getEnabled();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(parkingSpace6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.awt.Insets insets3 = managementDashboard1.getInsets();
        boolean boolean4 = managementDashboard1.getIgnoreRepaint();
        managementDashboard1.move((int) '4', (int) (short) 1);
        managementDashboard1.setFocusCycleRoot(true);
        java.awt.Event event10 = null;
        boolean boolean13 = managementDashboard1.mouseDown(event10, (int) (byte) 0, (int) '4');
        java.awt.event.MouseWheelListener mouseWheelListener14 = null;
        managementDashboard1.addMouseWheelListener(mouseWheelListener14);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(insets3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.image.ImageProducer imageProducer38 = null;
        java.awt.Image image39 = managementDashboard32.createImage(imageProducer38);
        java.awt.event.KeyListener[] keyListenerArray40 = managementDashboard32.getKeyListeners();
        boolean boolean41 = managementDashboard32.isOpaque();
        java.awt.event.InputMethodListener inputMethodListener42 = null;
        managementDashboard32.removeInputMethodListener(inputMethodListener42);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(image39);
        org.junit.Assert.assertNotNull(keyListenerArray40);
        org.junit.Assert.assertArrayEquals(keyListenerArray40, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.repaint((int) '#', 9, 1, (-1));
        managementDashboard1.enable();
        java.awt.Graphics graphics21 = null;
        managementDashboard1.printAll(graphics21);
        java.awt.Graphics graphics23 = null;
        managementDashboard1.printAll(graphics23);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        SuperManager superManager0 = new SuperManager();
        String str1 = superManager0.getUsername();
        MainSystem.currentManager = superManager0;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "SUPERMAN" + "'", str1, "SUPERMAN");
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        managementDashboard1.repaint((long) 32);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard1.keyDown(event11, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Dimension dimension17 = managementDashboard15.getMinimumSize();
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard19.addPropertyChangeListener(propertyChangeListener20);
        java.awt.event.FocusEvent.Cause cause22 = null;
        managementDashboard19.requestFocus(cause22);
        java.awt.event.InputMethodListener inputMethodListener24 = null;
        managementDashboard19.addInputMethodListener(inputMethodListener24);
        java.awt.Point point26 = managementDashboard19.location();
        managementDashboard15.setLocation(point26);
        java.awt.Point point28 = managementDashboard1.getLocation(point26);
        java.util.function.Consumer<String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        boolean boolean31 = managementDashboard30.isVisible();
        java.awt.Image image34 = managementDashboard30.createImage(13, (-1));
        managementDashboard30.resize(0, (int) '4');
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener46 = null;
        managementDashboard39.removeMouseMotionListener(mouseMotionListener46);
        managementDashboard39.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray51 = managementDashboard39.getComponents();
        java.util.function.Consumer<String> strConsumer52 = null;
        ManagementDashboard managementDashboard53 = new ManagementDashboard(strConsumer52);
        java.awt.event.ActionListener actionListener54 = null;
        javax.swing.KeyStroke keyStroke56 = null;
        managementDashboard53.registerKeyboardAction(actionListener54, "hi!", keyStroke56, (int) (short) 0);
        java.awt.Font font59 = managementDashboard53.getFont();
        managementDashboard39.setFont(font59);
        managementDashboard30.setFont(font59);
        java.util.function.Consumer<String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        boolean boolean64 = managementDashboard63.isVisible();
        java.awt.Image image67 = managementDashboard63.createImage(13, (-1));
        managementDashboard63.remove((int) (short) 1);
        java.awt.Dimension dimension70 = managementDashboard63.minimumSize();
        java.awt.Dimension dimension71 = managementDashboard63.getPreferredSize();
        java.awt.Dimension dimension72 = managementDashboard30.getSize(dimension71);
        java.util.function.Consumer<String> strConsumer73 = null;
        ManagementDashboard managementDashboard74 = new ManagementDashboard(strConsumer73);
        boolean boolean75 = managementDashboard74.isVisible();
        java.awt.Image image78 = managementDashboard74.createImage(13, (-1));
        managementDashboard74.remove((int) (short) 1);
        java.awt.Dimension dimension81 = managementDashboard74.minimumSize();
        java.awt.Dimension dimension82 = managementDashboard74.getPreferredSize();
        managementDashboard30.setMaximumSize(dimension82);
        managementDashboard1.setPreferredSize(dimension82);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(dimension17);
        org.junit.Assert.assertNotNull(point26);
        org.junit.Assert.assertNotNull(point28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(image34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(componentArray51);
        org.junit.Assert.assertNotNull(font59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(image67);
        org.junit.Assert.assertNotNull(dimension70);
        org.junit.Assert.assertNotNull(dimension71);
        org.junit.Assert.assertNotNull(dimension72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(image78);
        org.junit.Assert.assertNotNull(dimension81);
        org.junit.Assert.assertNotNull(dimension82);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.event.MouseListener mouseListener22 = null;
        managementDashboard1.addMouseListener(mouseListener22);
        java.io.PrintStream printStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Shape shape11 = null;
        managementDashboard1.setMixingCutoutShape(shape11);
        int int13 = managementDashboard1.getHeight();
        managementDashboard1.setFocusTraversalPolicyProvider(false);
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        boolean boolean38 = managementDashboard23.isOpaque();
        java.awt.event.FocusListener[] focusListenerArray39 = managementDashboard23.getFocusListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(focusListenerArray39);
        org.junit.Assert.assertArrayEquals(focusListenerArray39, new java.awt.event.FocusListener[] {});
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        String str2 = parkingLot1.getLotAvailability();
        ParkingSpace[] parkingSpaceArray3 = parkingLot1.getSpaces();
        ParkingSpace[] parkingSpaceArray4 = parkingLot1.getSpaces();
        parkingLot1.setEnabled(true);
        boolean boolean7 = parkingLot1.getEnabled();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(parkingSpaceArray3);
        org.junit.Assert.assertNotNull(parkingSpaceArray4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        java.awt.Graphics graphics10 = null;
        managementDashboard1.printAll(graphics10);
        boolean boolean12 = managementDashboard1.isPreferredSizeSet();
        boolean boolean13 = managementDashboard1.isFocusable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        int int33 = managementDashboard1.getComponentCount();
        managementDashboard1.enable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        java.util.Locale locale9 = managementDashboard1.getLocale();
        javax.swing.JComponent.setDefaultLocale(locale9);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.Component component22 = managementDashboard1.getNextFocusableComponent();
        managementDashboard1.firePropertyChange("", (long) (short) 100, (long) 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(component22);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseMove(event6, (-1), (int) (byte) 0);
        boolean boolean10 = managementDashboard1.isFocusable();
        java.awt.event.ComponentListener componentListener11 = null;
        managementDashboard1.addComponentListener(componentListener11);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isVisible();
        java.awt.LayoutManager layoutManager16 = managementDashboard14.getLayout();
        java.awt.Graphics graphics17 = null;
        managementDashboard14.print(graphics17);
        String str19 = managementDashboard14.getToolTipText();
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        boolean boolean22 = managementDashboard21.isVisible();
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        boolean boolean25 = managementDashboard24.isVisible();
        java.awt.Image image28 = managementDashboard24.createImage(13, (-1));
        managementDashboard24.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.awt.event.FocusEvent.Cause cause35 = null;
        managementDashboard32.requestFocus(cause35);
        java.awt.event.InputMethodListener inputMethodListener37 = null;
        managementDashboard32.addInputMethodListener(inputMethodListener37);
        java.awt.Point point39 = managementDashboard32.location();
        java.awt.Component component40 = managementDashboard24.findComponentAt(point39);
        java.awt.Component component41 = managementDashboard21.getComponentAt(point39);
        managementDashboard21.grabFocus();
        java.awt.Rectangle rectangle43 = managementDashboard21.bounds();
        managementDashboard14.repaint(rectangle43);
        managementDashboard1.scrollRectToVisible(rectangle43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(layoutManager16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(image28);
        org.junit.Assert.assertNotNull(point39);
        org.junit.Assert.assertNull(component40);
        org.junit.Assert.assertNull(component41);
        org.junit.Assert.assertNotNull(rectangle43);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.awt.Cursor cursor85 = managementDashboard72.getCursor();
        boolean boolean86 = managementDashboard72.isFontSet();
        managementDashboard72.firePropertyChange("data/parkingSpaceData.csv", '#', ' ');
        managementDashboard72.setAlignmentX((float) 6);
        java.awt.Rectangle rectangle93 = managementDashboard72.getBounds();
        java.awt.image.ColorModel colorModel94 = managementDashboard72.getColorModel();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertNotNull(cursor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(rectangle93);
        org.junit.Assert.assertNotNull(colorModel94);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        java.awt.event.ActionListener actionListener14 = null;
        javax.swing.KeyStroke keyStroke16 = null;
        managementDashboard1.registerKeyboardAction(actionListener14, "data/parkingSpaceData.csv", keyStroke16, 1);
        boolean boolean19 = managementDashboard1.isFocusTraversalPolicyProvider();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        managementDashboard1.setLocation(point12);
        managementDashboard1.setDebugGraphicsOptions((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(point12);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        java.util.function.Consumer<String> strConsumer0 = null;
        GenerateAccountView generateAccountView1 = new GenerateAccountView(strConsumer0);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray2 = generateAccountView1.getPropertyChangeListeners();
        javax.swing.InputVerifier inputVerifier3 = null;
        generateAccountView1.setInputVerifier(inputVerifier3);
        java.awt.Graphics graphics5 = null;
        generateAccountView1.paint(graphics5);
        generateAccountView1.firePropertyChange("hi!", (long) 6, (long) 32);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray2);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray2, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        java.awt.event.ContainerListener containerListener8 = null;
        managementDashboard1.removeContainerListener(containerListener8);
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        String str5 = managementDashboard1.getUIClassID();
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener6);
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        int int10 = managementDashboard1.getY();
        managementDashboard1.setVerifyInputWhenFocusTarget(false);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Graphics graphics31 = null;
        managementDashboard1.printAll(graphics31);
        boolean boolean33 = managementDashboard1.requestDefaultFocus();
        javax.swing.TransferHandler transferHandler34 = managementDashboard1.getTransferHandler();
        java.awt.Insets insets35 = managementDashboard1.insets();
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener36);
        int int40 = managementDashboard1.getBaseline((int) (short) 100, (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(transferHandler34);
        org.junit.Assert.assertNotNull(insets35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener8 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener8);
        managementDashboard1.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray13 = managementDashboard1.getComponents();
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Image image19 = managementDashboard15.createImage(13, (-1));
        managementDashboard15.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Component component31 = managementDashboard15.findComponentAt(point30);
        java.util.function.Consumer<String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        int int34 = managementDashboard33.countComponents();
        managementDashboard33.resetKeyboardActions();
        managementDashboard33.layout();
        java.awt.event.MouseEvent mouseEvent37 = null;
        java.awt.Point point38 = managementDashboard33.getPopupLocation(mouseEvent37);
        boolean boolean39 = managementDashboard15.isAncestorOf((java.awt.Component) managementDashboard33);
        java.awt.Dimension dimension40 = managementDashboard15.minimumSize();
        managementDashboard1.setSize(dimension40);
        managementDashboard1.setInheritsPopupMenu(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(componentArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNull(component31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNull(point38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(dimension40);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        int int20 = managementDashboard19.countComponents();
        managementDashboard19.resetKeyboardActions();
        managementDashboard19.layout();
        java.awt.event.MouseEvent mouseEvent23 = null;
        java.awt.Point point24 = managementDashboard19.getPopupLocation(mouseEvent23);
        boolean boolean25 = managementDashboard1.isAncestorOf((java.awt.Component) managementDashboard19);
        java.awt.Dimension dimension26 = managementDashboard1.minimumSize();
        java.util.function.Consumer<String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isVisible();
        java.awt.Image image32 = managementDashboard28.createImage(13, (-1));
        managementDashboard28.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        java.beans.PropertyChangeListener propertyChangeListener37 = null;
        managementDashboard36.addPropertyChangeListener(propertyChangeListener37);
        java.awt.event.FocusEvent.Cause cause39 = null;
        managementDashboard36.requestFocus(cause39);
        java.awt.event.InputMethodListener inputMethodListener41 = null;
        managementDashboard36.addInputMethodListener(inputMethodListener41);
        java.awt.Point point43 = managementDashboard36.location();
        java.awt.Component component44 = managementDashboard28.findComponentAt(point43);
        java.util.function.Consumer<String> strConsumer45 = null;
        ManagementDashboard managementDashboard46 = new ManagementDashboard(strConsumer45);
        java.awt.image.ImageProducer imageProducer47 = null;
        java.awt.Image image48 = managementDashboard46.createImage(imageProducer47);
        java.util.function.Consumer<String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        java.beans.PropertyChangeListener propertyChangeListener51 = null;
        managementDashboard50.addPropertyChangeListener(propertyChangeListener51);
        java.awt.event.FocusEvent.Cause cause53 = null;
        managementDashboard50.requestFocus(cause53);
        java.awt.event.InputMethodListener inputMethodListener55 = null;
        managementDashboard50.addInputMethodListener(inputMethodListener55);
        int int57 = managementDashboard28.checkImage(image48, (java.awt.image.ImageObserver) managementDashboard50);
        java.awt.Container container58 = managementDashboard28.getParent();
        Object obj59 = managementDashboard1.getClientProperty((Object) container58);
        managementDashboard1.doLayout();
        java.awt.Component.BaselineResizeBehavior baselineResizeBehavior61 = managementDashboard1.getBaselineResizeBehavior();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(point24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dimension26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(image32);
        org.junit.Assert.assertNotNull(point43);
        org.junit.Assert.assertNull(component44);
        org.junit.Assert.assertNotNull(image48);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(container58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + baselineResizeBehavior61 + "' != '" + java.awt.Component.BaselineResizeBehavior.OTHER + "'", baselineResizeBehavior61.equals(java.awt.Component.BaselineResizeBehavior.OTHER));
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        managementDashboard23.show();
        managementDashboard23.show();
        java.awt.Dimension dimension33 = managementDashboard23.getPreferredSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(dimension33);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        managementDashboard1.hide();
        boolean boolean6 = managementDashboard1.isEnabled();
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        managementDashboard1.setSize(dimension15);
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", false, true);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        int int20 = managementDashboard19.countComponents();
        managementDashboard19.resetKeyboardActions();
        managementDashboard19.layout();
        java.awt.event.MouseEvent mouseEvent23 = null;
        java.awt.Point point24 = managementDashboard19.getPopupLocation(mouseEvent23);
        boolean boolean25 = managementDashboard1.isAncestorOf((java.awt.Component) managementDashboard19);
        java.awt.event.ComponentListener componentListener26 = null;
        managementDashboard19.addComponentListener(componentListener26);
        javax.swing.KeyStroke[] keyStrokeArray28 = managementDashboard19.getRegisteredKeyStrokes();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(point24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(keyStrokeArray28);
        org.junit.Assert.assertArrayEquals(keyStrokeArray28, new javax.swing.KeyStroke[] {});
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.JRootPane jRootPane4 = managementDashboard1.getRootPane();
        boolean boolean5 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        java.awt.Event event6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = managementDashboard1.handleEvent(event6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNull(jRootPane4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        managementDashboard1.grabFocus();
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        boolean boolean25 = managementDashboard24.isVisible();
        java.awt.Image image28 = managementDashboard24.createImage(13, (-1));
        managementDashboard24.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.awt.event.FocusEvent.Cause cause35 = null;
        managementDashboard32.requestFocus(cause35);
        java.awt.event.InputMethodListener inputMethodListener37 = null;
        managementDashboard32.addInputMethodListener(inputMethodListener37);
        java.awt.Point point39 = managementDashboard32.location();
        java.awt.Component component40 = managementDashboard24.findComponentAt(point39);
        java.util.function.Consumer<String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        java.awt.image.ImageProducer imageProducer43 = null;
        java.awt.Image image44 = managementDashboard42.createImage(imageProducer43);
        java.util.function.Consumer<String> strConsumer45 = null;
        ManagementDashboard managementDashboard46 = new ManagementDashboard(strConsumer45);
        java.beans.PropertyChangeListener propertyChangeListener47 = null;
        managementDashboard46.addPropertyChangeListener(propertyChangeListener47);
        java.awt.event.FocusEvent.Cause cause49 = null;
        managementDashboard46.requestFocus(cause49);
        java.awt.event.InputMethodListener inputMethodListener51 = null;
        managementDashboard46.addInputMethodListener(inputMethodListener51);
        int int53 = managementDashboard24.checkImage(image44, (java.awt.image.ImageObserver) managementDashboard46);
        java.util.function.Consumer<String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        java.beans.PropertyChangeListener propertyChangeListener56 = null;
        managementDashboard55.addPropertyChangeListener(propertyChangeListener56);
        java.util.Locale locale58 = managementDashboard55.getLocale();
        float float59 = managementDashboard55.getAlignmentY();
        java.awt.Component component60 = managementDashboard46.add((java.awt.Component) managementDashboard55);
        java.util.function.Consumer<String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        java.beans.PropertyChangeListener propertyChangeListener63 = null;
        managementDashboard62.addPropertyChangeListener(propertyChangeListener63);
        java.util.Locale locale65 = managementDashboard62.getLocale();
        managementDashboard55.setLocale(locale65);
        managementDashboard55.addNotify();
        java.awt.Dimension dimension68 = managementDashboard55.getMaximumSize();
        managementDashboard1.setMaximumSize(dimension68);
        boolean boolean70 = managementDashboard1.isFocusOwner();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(image28);
        org.junit.Assert.assertNotNull(point39);
        org.junit.Assert.assertNull(component40);
        org.junit.Assert.assertNotNull(image44);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(locale58);
        org.junit.Assert.assertEquals(locale58.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.5f + "'", float59 == 0.5f);
        org.junit.Assert.assertNotNull(component60);
        org.junit.Assert.assertNotNull(locale65);
        org.junit.Assert.assertEquals(locale65.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        boolean boolean32 = managementDashboard1.isLightweight();
        managementDashboard1.setFocusTraversalKeysEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        ParkingSpace parkingSpace4 = new ParkingSpace((int) (short) -1, "data/parkingSpaceData.csv", "PanelUI", "PanelUI");
        int int5 = parkingSpace4.getIndex();
        int int6 = parkingSpace4.getIndex();
        String str7 = parkingSpace4.getCurrentUser();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PanelUI" + "'", str7, "PanelUI");
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        managementDashboard1.doLayout();
        managementDashboard1.setBounds(12, (int) (byte) 1, (int) (short) 10, (int) (short) 1);
        java.awt.Dimension dimension16 = managementDashboard1.getSize();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(dimension16);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.image.ImageProducer imageProducer38 = null;
        java.awt.Image image39 = managementDashboard32.createImage(imageProducer38);
        java.awt.event.KeyListener[] keyListenerArray40 = managementDashboard32.getKeyListeners();
        boolean boolean41 = managementDashboard32.isOpaque();
        javax.swing.event.AncestorListener ancestorListener42 = null;
        managementDashboard32.addAncestorListener(ancestorListener42);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(image39);
        org.junit.Assert.assertNotNull(keyListenerArray40);
        org.junit.Assert.assertArrayEquals(keyListenerArray40, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj9 = managementDashboard1.getTreeLock();
        java.awt.FocusTraversalPolicy focusTraversalPolicy10 = managementDashboard1.getFocusTraversalPolicy();
        java.awt.event.KeyListener[] keyListenerArray11 = managementDashboard1.getKeyListeners();
        String str12 = managementDashboard1.getName();
        java.awt.Graphics graphics13 = null;
        managementDashboard1.printAll(graphics13);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(focusTraversalPolicy10);
        org.junit.Assert.assertNotNull(keyListenerArray11);
        org.junit.Assert.assertArrayEquals(keyListenerArray11, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", '#', '#');
        managementDashboard1.validate();
        java.awt.event.HierarchyListener hierarchyListener13 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener13);
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Image image10 = managementDashboard1.createImage((int) 'a', (int) (byte) 1);
        java.awt.event.MouseMotionListener mouseMotionListener11 = null;
        managementDashboard1.addMouseMotionListener(mouseMotionListener11);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        managementDashboard1.repaint(10L);
        managementDashboard1.removeAll();
        org.junit.Assert.assertNull(image10);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.repaint((int) '#', 9, 1, (-1));
        managementDashboard1.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.awt.event.ActionListener actionListener24 = null;
        javax.swing.KeyStroke keyStroke26 = null;
        managementDashboard23.registerKeyboardAction(actionListener24, "hi!", keyStroke26, (int) (short) 0);
        java.awt.Font font29 = managementDashboard23.getFont();
        managementDashboard1.setFont(font29);
        javax.swing.KeyStroke keyStroke31 = null;
        managementDashboard1.unregisterKeyboardAction(keyStroke31);
        managementDashboard1.transferFocusUpCycle();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNotNull(font29);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        boolean boolean5 = managementDashboard1.isPaintingTile();
        managementDashboard1.requestFocus();
        java.io.PrintWriter printWriter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        boolean boolean4 = managementDashboard1.requestFocusInWindow();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isFocusOwner();
        boolean boolean3 = managementDashboard1.isDoubleBuffered();
        managementDashboard1.setAlignmentX((float) 32);
        java.awt.event.ActionListener actionListener6 = null;
        javax.swing.KeyStroke keyStroke8 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener6, "PanelUI", keyStroke8, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.ActionListener actionListener2 = null;
        javax.swing.KeyStroke keyStroke4 = null;
        managementDashboard1.registerKeyboardAction(actionListener2, "hi!", keyStroke4, (int) (short) 0);
        boolean boolean8 = managementDashboard1.areFocusTraversalKeysSet((int) (byte) 1);
        boolean boolean9 = managementDashboard1.isFocusTraversalPolicyProvider();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        // The following exception was thrown during execution in test generation
        try {
            paymentProcessor1.processPayment((double) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"PaymentStrategy.pay(double)\" because \"this.paymentStrategy\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.awt.Cursor cursor85 = managementDashboard72.getCursor();
        boolean boolean86 = managementDashboard72.isFocusTraversalPolicyProvider();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertNotNull(cursor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.image.ImageProducer imageProducer4 = null;
        java.awt.Image image5 = managementDashboard1.createImage(imageProducer4);
        float float6 = managementDashboard1.getAlignmentX();
        managementDashboard1.setVisible(true);
        org.junit.Assert.assertNotNull(image5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.5f + "'", float6 == 0.5f);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        managementDashboard1.reshape(0, 10, (int) (byte) 100, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        boolean boolean21 = managementDashboard20.isVisible();
        java.awt.Image image24 = managementDashboard20.createImage(13, (-1));
        managementDashboard20.show(true);
        java.awt.Dimension dimension27 = managementDashboard20.size();
        managementDashboard1.setMaximumSize(dimension27);
        java.awt.Graphics graphics29 = null;
        managementDashboard1.paintAll(graphics29);
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(image24);
        org.junit.Assert.assertNotNull(dimension27);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        // The following exception was thrown during execution in test generation
        try {
            paymentProcessor1.processPayment((double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"PaymentStrategy.pay(double)\" because \"this.paymentStrategy\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        ParkingSpace parkingSpace4 = new ParkingSpace((int) (short) 100, "data/managerData.csv", "ManagementDashboard[,100,9,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", "ManagementDashboard[,100,9,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Shape shape11 = null;
        managementDashboard1.setMixingCutoutShape(shape11);
        boolean boolean13 = managementDashboard1.isEnabled();
        java.awt.AWTEvent aWTEvent14 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.dispatchEvent(aWTEvent14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.AWTEvent.getID()\" because \"e\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.event.FocusEvent.Cause cause47 = null;
        managementDashboard32.requestFocus(cause47);
        java.awt.Event event49 = null;
        ParkingLot parkingLot51 = new ParkingLot("hi!");
        String str52 = parkingLot51.getLotAvailability();
        boolean boolean53 = managementDashboard32.action(event49, (Object) parkingLot51);
        parkingLot51.setSpace(6, "123456789", "PanelUI", "ToolTipText");
        String str59 = parkingLot51.getLotName();
        String str60 = parkingLot51.getLotAvailability();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.event.InputMethodListener[] inputMethodListenerArray47 = managementDashboard32.getInputMethodListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(inputMethodListenerArray47);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray47, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        boolean boolean33 = managementDashboard32.isVisible();
        java.awt.Image image36 = managementDashboard32.createImage(13, (-1));
        managementDashboard32.resize(0, (int) '4');
        java.util.function.Consumer<String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        boolean boolean42 = managementDashboard41.isVisible();
        java.awt.Image image45 = managementDashboard41.createImage(13, (-1));
        managementDashboard41.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener48 = null;
        managementDashboard41.removeMouseMotionListener(mouseMotionListener48);
        managementDashboard41.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray53 = managementDashboard41.getComponents();
        java.util.function.Consumer<String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        java.awt.event.ActionListener actionListener56 = null;
        javax.swing.KeyStroke keyStroke58 = null;
        managementDashboard55.registerKeyboardAction(actionListener56, "hi!", keyStroke58, (int) (short) 0);
        java.awt.Font font61 = managementDashboard55.getFont();
        managementDashboard41.setFont(font61);
        managementDashboard32.setFont(font61);
        managementDashboard1.setFont(font61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(image36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(image45);
        org.junit.Assert.assertNotNull(componentArray53);
        org.junit.Assert.assertNotNull(font61);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        javax.swing.border.Border border15 = null;
        managementDashboard1.setBorder(border15);
        java.awt.Graphics graphics17 = null;
        managementDashboard1.print(graphics17);
        java.awt.Graphics graphics19 = null;
        managementDashboard1.printAll(graphics19);
        managementDashboard1.show();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        managementDashboard1.invalidate();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Point point33 = managementDashboard1.getLocationOnScreen();
            org.junit.Assert.fail("Expected exception of type java.awt.IllegalComponentStateException; message: component must be showing on the screen to determine its location");
        } catch (java.awt.IllegalComponentStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        ParkingSpace parkingSpace4 = new ParkingSpace(10, "data/managerData.csv", "data/parkingSpaceData.csv", "data/lotData.csv");
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        boolean boolean6 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        boolean boolean7 = managementDashboard1.requestDefaultFocus();
        managementDashboard1.updateUI();
        java.awt.Shape shape9 = null;
        managementDashboard1.setMixingCutoutShape(shape9);
        java.io.PrintStream printStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        boolean boolean10 = managementDashboard1.isLightweight();
        int int13 = managementDashboard1.getBaseline((int) (byte) 10, 9);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.remove((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Array index out of range: 1");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        ParkingSpace[] parkingSpaceArray2 = parkingLot1.getSpaces();
        ParkingSpace parkingSpace4 = parkingLot1.getSpace((int) 'a');
        String str5 = parkingSpace4.getCurrentCar();
        org.junit.Assert.assertNotNull(parkingSpaceArray2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Empty" + "'", str5, "Empty");
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        managementDashboard5.repaint();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", '#', '#');
        java.awt.event.FocusEvent.Cause cause12 = null;
        boolean boolean13 = managementDashboard1.requestFocusInWindow(cause12);
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        managementDashboard1.grabFocus();
        java.awt.Rectangle rectangle23 = managementDashboard1.bounds();
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray24 = managementDashboard1.getMouseWheelListeners();
        java.util.function.Consumer<String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        boolean boolean27 = managementDashboard26.isVisible();
        java.awt.Image image30 = managementDashboard26.createImage(13, (-1));
        java.awt.Event event31 = null;
        boolean boolean34 = managementDashboard26.mouseMove(event31, (-1), (int) (byte) 0);
        boolean boolean35 = managementDashboard26.isFocusable();
        java.awt.event.ComponentListener componentListener36 = null;
        managementDashboard26.addComponentListener(componentListener36);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer69 = null;
        ManagementDashboard managementDashboard70 = new ManagementDashboard(strConsumer69);
        boolean boolean71 = managementDashboard70.isVisible();
        java.awt.Image image74 = managementDashboard70.createImage(13, (-1));
        managementDashboard70.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener77 = null;
        managementDashboard70.removeMouseMotionListener(mouseMotionListener77);
        managementDashboard70.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray82 = managementDashboard70.getComponents();
        java.awt.Point point83 = managementDashboard70.location();
        managementDashboard70.setFocusTraversalPolicyProvider(false);
        int int86 = managementDashboard26.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard70);
        java.util.function.Consumer<String> strConsumer89 = null;
        ManagementDashboard managementDashboard90 = new ManagementDashboard(strConsumer89);
        java.beans.PropertyChangeListener propertyChangeListener91 = null;
        managementDashboard90.addPropertyChangeListener(propertyChangeListener91);
        java.util.Locale locale93 = managementDashboard90.getLocale();
        String str94 = managementDashboard90.getUIClassID();
        java.awt.event.ComponentListener[] componentListenerArray95 = managementDashboard90.getComponentListeners();
        managementDashboard90.transferFocusDownCycle();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = managementDashboard1.prepareImage(image59, 5, (int) (short) 10, (java.awt.image.ImageObserver) managementDashboard90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.ImageProducer.startProduction(java.awt.image.ImageConsumer)\" because the return value of \"sun.awt.image.ToolkitImage.getSource()\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertNotNull(rectangle23);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray24);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray24, new java.awt.event.MouseWheelListener[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(image30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(image74);
        org.junit.Assert.assertNotNull(componentArray82);
        org.junit.Assert.assertNotNull(point83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(locale93);
        org.junit.Assert.assertEquals(locale93.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "PanelUI" + "'", str94, "PanelUI");
        org.junit.Assert.assertNotNull(componentListenerArray95);
        org.junit.Assert.assertArrayEquals(componentListenerArray95, new java.awt.event.ComponentListener[] {});
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        java.awt.Point point16 = managementDashboard1.getMousePosition(true);
        managementDashboard1.firePropertyChange("data/managerData.csv", 'a', '#');
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNull(point16);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        javax.swing.plaf.PanelUI panelUI9 = managementDashboard1.getUI();
        javax.swing.InputVerifier inputVerifier10 = managementDashboard1.getInputVerifier();
        javax.swing.InputVerifier inputVerifier11 = managementDashboard1.getInputVerifier();
        managementDashboard1.setBounds((int) ' ', 1, 4, 10);
        javax.swing.KeyStroke keyStroke17 = null;
        managementDashboard1.unregisterKeyboardAction(keyStroke17);
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertNotNull(panelUI9);
        org.junit.Assert.assertNull(inputVerifier10);
        org.junit.Assert.assertNull(inputVerifier11);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        javax.swing.border.Border border38 = null;
        managementDashboard32.setBorder(border38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        parkingLot1.setSpace(10, "Empty", "data/parkingSpaceData.csv", "ToolTipText");
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        java.awt.Graphics graphics10 = null;
        managementDashboard1.printAll(graphics10);
        String str12 = managementDashboard1.toString();
        boolean boolean13 = managementDashboard1.isOptimizedDrawingEnabled();
        managementDashboard1.setSize(10, 100);
        managementDashboard1.setEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str12, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        java.awt.event.MouseEvent mouseEvent5 = null;
        java.awt.Point point6 = managementDashboard1.getPopupLocation(mouseEvent5);
        java.awt.Color color7 = managementDashboard1.getForeground();
        java.awt.Dimension dimension8 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setSize(dimension8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"width\" because \"d\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(point6);
        org.junit.Assert.assertNotNull(color7);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.MouseMotionListener mouseMotionListener6 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener6);
        String str8 = managementDashboard1.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str8, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        managementDashboard1.disable();
        java.awt.MenuComponent menuComponent15 = null;
        managementDashboard1.remove(menuComponent15);
        java.awt.Event event17 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.deliverEvent(event17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"e\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(color8);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        Class<?> wildcardClass45 = managementDashboard32.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Dimension dimension4 = managementDashboard1.getSize();
        managementDashboard1.move((int) (byte) -1, 3);
        java.util.function.Consumer<String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        java.awt.image.ImageProducer imageProducer11 = null;
        java.awt.Image image12 = managementDashboard10.createImage(imageProducer11);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        java.beans.PropertyChangeListener propertyChangeListener15 = null;
        managementDashboard14.addPropertyChangeListener(propertyChangeListener15);
        java.awt.event.FocusEvent.Cause cause17 = null;
        managementDashboard14.requestFocus(cause17);
        java.awt.event.InputMethodListener inputMethodListener19 = null;
        managementDashboard14.addInputMethodListener(inputMethodListener19);
        java.awt.Point point21 = managementDashboard14.location();
        java.awt.Component component22 = managementDashboard10.add((java.awt.Component) managementDashboard14);
        javax.swing.JPopupMenu jPopupMenu23 = managementDashboard10.getComponentPopupMenu();
        javax.swing.border.Border border24 = null;
        managementDashboard10.setBorder(border24);
        java.util.function.Consumer<String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        java.beans.PropertyChangeListener propertyChangeListener28 = null;
        managementDashboard27.addPropertyChangeListener(propertyChangeListener28);
        java.awt.event.FocusEvent.Cause cause30 = null;
        managementDashboard27.requestFocus(cause30);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard27.addInputMethodListener(inputMethodListener32);
        java.awt.Color color34 = managementDashboard27.getBackground();
        managementDashboard10.setForeground(color34);
        javax.swing.InputMap inputMap36 = managementDashboard10.getInputMap();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap(9, inputMap36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNotNull(dimension4);
        org.junit.Assert.assertNotNull(image12);
        org.junit.Assert.assertNotNull(point21);
        org.junit.Assert.assertNotNull(component22);
        org.junit.Assert.assertNull(jPopupMenu23);
        org.junit.Assert.assertNotNull(color34);
        org.junit.Assert.assertNotNull(inputMap36);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        boolean boolean22 = managementDashboard21.isVisible();
        java.awt.LayoutManager layoutManager23 = managementDashboard21.getLayout();
        java.awt.Graphics graphics24 = null;
        managementDashboard21.print(graphics24);
        String str26 = managementDashboard21.getToolTipText();
        java.util.function.Consumer<String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isVisible();
        java.util.function.Consumer<String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isVisible();
        java.awt.Image image35 = managementDashboard31.createImage(13, (-1));
        managementDashboard31.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.awt.event.FocusEvent.Cause cause42 = null;
        managementDashboard39.requestFocus(cause42);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener44);
        java.awt.Point point46 = managementDashboard39.location();
        java.awt.Component component47 = managementDashboard31.findComponentAt(point46);
        java.awt.Component component48 = managementDashboard28.getComponentAt(point46);
        managementDashboard28.grabFocus();
        java.awt.Rectangle rectangle50 = managementDashboard28.bounds();
        managementDashboard21.repaint(rectangle50);
        managementDashboard1.paintImmediately(rectangle50);
        java.beans.VetoableChangeListener vetoableChangeListener53 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener53);
        java.awt.Event event55 = null;
        Object obj56 = null;
        boolean boolean57 = managementDashboard1.action(event55, obj56);
        java.awt.image.VolatileImage volatileImage60 = managementDashboard1.createVolatileImage((int) (byte) 10, 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(layoutManager23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(image35);
        org.junit.Assert.assertNotNull(point46);
        org.junit.Assert.assertNull(component47);
        org.junit.Assert.assertNull(component48);
        org.junit.Assert.assertNotNull(rectangle50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(volatileImage60);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseMove(event6, (-1), (int) (byte) 0);
        boolean boolean10 = managementDashboard1.isFocusable();
        java.awt.event.ComponentListener componentListener11 = null;
        managementDashboard1.addComponentListener(componentListener11);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isVisible();
        java.awt.Image image18 = managementDashboard14.createImage(13, (-1));
        managementDashboard14.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard22.addPropertyChangeListener(propertyChangeListener23);
        java.awt.event.FocusEvent.Cause cause25 = null;
        managementDashboard22.requestFocus(cause25);
        java.awt.event.InputMethodListener inputMethodListener27 = null;
        managementDashboard22.addInputMethodListener(inputMethodListener27);
        java.awt.Point point29 = managementDashboard22.location();
        java.awt.Component component30 = managementDashboard14.findComponentAt(point29);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.awt.image.ImageProducer imageProducer33 = null;
        java.awt.Image image34 = managementDashboard32.createImage(imageProducer33);
        java.util.function.Consumer<String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        java.beans.PropertyChangeListener propertyChangeListener37 = null;
        managementDashboard36.addPropertyChangeListener(propertyChangeListener37);
        java.awt.event.FocusEvent.Cause cause39 = null;
        managementDashboard36.requestFocus(cause39);
        java.awt.event.InputMethodListener inputMethodListener41 = null;
        managementDashboard36.addInputMethodListener(inputMethodListener41);
        int int43 = managementDashboard14.checkImage(image34, (java.awt.image.ImageObserver) managementDashboard36);
        java.util.function.Consumer<String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        boolean boolean46 = managementDashboard45.isVisible();
        java.awt.Image image49 = managementDashboard45.createImage(13, (-1));
        managementDashboard45.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener52 = null;
        managementDashboard45.removeMouseMotionListener(mouseMotionListener52);
        managementDashboard45.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray57 = managementDashboard45.getComponents();
        java.awt.Point point58 = managementDashboard45.location();
        managementDashboard45.setFocusTraversalPolicyProvider(false);
        int int61 = managementDashboard1.checkImage(image34, (java.awt.image.ImageObserver) managementDashboard45);
        java.awt.Event event62 = null;
        boolean boolean65 = managementDashboard45.mouseMove(event62, 4, 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(image18);
        org.junit.Assert.assertNotNull(point29);
        org.junit.Assert.assertNull(component30);
        org.junit.Assert.assertNotNull(image34);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(image49);
        org.junit.Assert.assertNotNull(componentArray57);
        org.junit.Assert.assertNotNull(point58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        int int8 = managementDashboard1.getComponentCount();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.util.function.Consumer<String> strConsumer0 = null;
        GenerateAccountView generateAccountView1 = new GenerateAccountView(strConsumer0);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray2 = generateAccountView1.getPropertyChangeListeners();
        javax.swing.InputVerifier inputVerifier3 = null;
        generateAccountView1.setInputVerifier(inputVerifier3);
        java.util.function.Consumer<String> strConsumer5 = null;
        ManagementDashboard managementDashboard6 = new ManagementDashboard(strConsumer5);
        boolean boolean7 = managementDashboard6.isVisible();
        java.awt.Image image10 = managementDashboard6.createImage(13, (-1));
        managementDashboard6.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        java.beans.PropertyChangeListener propertyChangeListener15 = null;
        managementDashboard14.addPropertyChangeListener(propertyChangeListener15);
        java.awt.event.FocusEvent.Cause cause17 = null;
        managementDashboard14.requestFocus(cause17);
        java.awt.event.InputMethodListener inputMethodListener19 = null;
        managementDashboard14.addInputMethodListener(inputMethodListener19);
        java.awt.Point point21 = managementDashboard14.location();
        java.awt.Component component22 = managementDashboard6.findComponentAt(point21);
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        int int25 = managementDashboard24.countComponents();
        managementDashboard24.resetKeyboardActions();
        managementDashboard24.layout();
        java.awt.event.MouseEvent mouseEvent28 = null;
        java.awt.Point point29 = managementDashboard24.getPopupLocation(mouseEvent28);
        boolean boolean30 = managementDashboard6.isAncestorOf((java.awt.Component) managementDashboard24);
        java.awt.dnd.DropTarget dropTarget31 = managementDashboard6.getDropTarget();
        boolean boolean34 = managementDashboard6.contains(3, (int) (short) 100);
        java.awt.Dimension dimension35 = managementDashboard6.getMinimumSize();
        generateAccountView1.setPreferredSize(dimension35);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray2);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray2, new java.beans.PropertyChangeListener[] {});
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(image10);
        org.junit.Assert.assertNotNull(point21);
        org.junit.Assert.assertNull(component22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNull(point29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(dropTarget31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(dimension35);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Shape shape11 = null;
        managementDashboard1.setMixingCutoutShape(shape11);
        java.awt.im.InputContext inputContext13 = managementDashboard1.getInputContext();
        int int16 = managementDashboard1.getBaseline((int) (byte) 100, (int) (byte) 10);
        java.awt.Point point17 = managementDashboard1.getLocation();
        boolean boolean18 = managementDashboard1.isFontSet();
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard1.keyUp(event19, (int) 'a');
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertNull(inputContext13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(point17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.event.FocusEvent.Cause cause47 = null;
        managementDashboard32.requestFocus(cause47);
        java.awt.Event event49 = null;
        ParkingLot parkingLot51 = new ParkingLot("hi!");
        String str52 = parkingLot51.getLotAvailability();
        boolean boolean53 = managementDashboard32.action(event49, (Object) parkingLot51);
        int int54 = managementDashboard32.getX();
        boolean boolean55 = managementDashboard32.isLightweight();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        managementDashboard1.show(true);
        java.awt.event.ComponentListener componentListener6 = null;
        managementDashboard1.addComponentListener(componentListener6);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        managementDashboard1.show(true);
        boolean boolean20 = managementDashboard1.requestFocusInWindow();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseMove(event6, (-1), (int) (byte) 0);
        boolean boolean10 = managementDashboard1.isMinimumSizeSet();
        java.awt.Graphics graphics11 = null;
        managementDashboard1.print(graphics11);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isVisible();
        java.util.function.Consumer<String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        boolean boolean18 = managementDashboard17.isVisible();
        java.awt.Image image21 = managementDashboard17.createImage(13, (-1));
        managementDashboard17.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        java.beans.PropertyChangeListener propertyChangeListener26 = null;
        managementDashboard25.addPropertyChangeListener(propertyChangeListener26);
        java.awt.event.FocusEvent.Cause cause28 = null;
        managementDashboard25.requestFocus(cause28);
        java.awt.event.InputMethodListener inputMethodListener30 = null;
        managementDashboard25.addInputMethodListener(inputMethodListener30);
        java.awt.Point point32 = managementDashboard25.location();
        java.awt.Component component33 = managementDashboard17.findComponentAt(point32);
        java.awt.Component component34 = managementDashboard14.getComponentAt(point32);
        managementDashboard14.grabFocus();
        java.awt.Rectangle rectangle36 = managementDashboard14.bounds();
        managementDashboard1.paintImmediately(rectangle36);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        int int58 = managementDashboard57.countComponents();
        managementDashboard57.resetKeyboardActions();
        managementDashboard57.layout();
        java.awt.event.MouseEvent mouseEvent61 = null;
        java.awt.Point point62 = managementDashboard57.getPopupLocation(mouseEvent61);
        boolean boolean63 = managementDashboard39.isAncestorOf((java.awt.Component) managementDashboard57);
        java.awt.dnd.DropTarget dropTarget64 = managementDashboard39.getDropTarget();
        int int65 = managementDashboard39.getY();
        java.awt.Point point66 = managementDashboard39.location();
        boolean boolean67 = managementDashboard1.isAncestorOf((java.awt.Component) managementDashboard39);
        java.awt.Insets insets68 = managementDashboard39.getInsets();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet70 = managementDashboard39.getFocusTraversalKeys(11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(image21);
        org.junit.Assert.assertNotNull(point32);
        org.junit.Assert.assertNull(component33);
        org.junit.Assert.assertNull(component34);
        org.junit.Assert.assertNotNull(rectangle36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertNull(point62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(dropTarget64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(point66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(insets68);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        int int10 = managementDashboard1.getDebugGraphicsOptions();
        managementDashboard1.setSize(11, 8);
        java.awt.Point point14 = managementDashboard1.getLocation();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet16 = managementDashboard1.getFocusTraversalKeys(7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(point14);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.firePropertyChange("", 'a', '4');
        managementDashboard1.show();
        java.awt.Event event20 = null;
        boolean boolean23 = managementDashboard1.mouseMove(event20, 7, 12);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.enable();
        boolean boolean5 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        java.awt.Graphics graphics6 = null;
        managementDashboard1.print(graphics6);
        managementDashboard1.doLayout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        boolean boolean10 = managementDashboard1.isLightweight();
        boolean boolean11 = managementDashboard1.isValid();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.event.MouseWheelListener mouseWheelListener38 = null;
        component37.addMouseWheelListener(mouseWheelListener38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        CreditCardPayment creditCardPayment0 = new CreditCardPayment();
        creditCardPayment0.pay((double) (short) -1);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        int int10 = managementDashboard1.getDebugGraphicsOptions();
        managementDashboard1.setSize(11, 8);
        java.awt.Point point14 = managementDashboard1.getLocation();
        java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray15 = managementDashboard1.getHierarchyBoundsListeners();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(point14);
        org.junit.Assert.assertNotNull(hierarchyBoundsListenerArray15);
        org.junit.Assert.assertArrayEquals(hierarchyBoundsListenerArray15, new java.awt.event.HierarchyBoundsListener[] {});
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        java.awt.event.InputMethodListener inputMethodListener2 = null;
        managementAccountsView1.removeInputMethodListener(inputMethodListener2);
        boolean boolean4 = managementAccountsView1.isFocusTraversable();
        java.awt.im.InputMethodRequests inputMethodRequests5 = managementAccountsView1.getInputMethodRequests();
        java.util.function.Consumer<String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        java.beans.PropertyChangeListener propertyChangeListener8 = null;
        managementDashboard7.addPropertyChangeListener(propertyChangeListener8);
        java.awt.event.FocusEvent.Cause cause10 = null;
        managementDashboard7.requestFocus(cause10);
        java.awt.Color color12 = managementDashboard7.getBackground();
        managementDashboard7.repaint();
        boolean boolean14 = managementDashboard7.isOpaque();
        managementDashboard7.firePropertyChange("hi!", 10, 10);
        javax.swing.plaf.PanelUI panelUI19 = managementDashboard7.getUI();
        managementAccountsView1.setUI(panelUI19);
        boolean boolean21 = managementAccountsView1.isMaximumSizeSet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(inputMethodRequests5);
        org.junit.Assert.assertNotNull(color12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(panelUI19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Dimension dimension8 = managementDashboard1.minimumSize();
        java.awt.Dimension dimension9 = managementDashboard1.getPreferredSize();
        float float10 = managementDashboard1.getAlignmentX();
        java.awt.dnd.DropTarget dropTarget11 = managementDashboard1.getDropTarget();
        java.awt.Graphics graphics12 = null;
        managementDashboard1.printAll(graphics12);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.5f + "'", float10 == 0.5f);
        org.junit.Assert.assertNull(dropTarget11);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        java.awt.Dimension dimension45 = managementDashboard32.getMaximumSize();
        boolean boolean46 = managementDashboard32.isFocusTraversalPolicySet();
        managementDashboard32.disable();
        boolean boolean48 = managementDashboard32.isRequestFocusEnabled();
        float float49 = managementDashboard32.getAlignmentX();
        java.awt.LayoutManager layoutManager50 = managementDashboard32.getLayout();
        java.util.function.Consumer<String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        boolean boolean53 = managementDashboard52.isVisible();
        java.util.function.Consumer<String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        boolean boolean56 = managementDashboard55.isVisible();
        java.awt.Image image59 = managementDashboard55.createImage(13, (-1));
        managementDashboard55.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        java.beans.PropertyChangeListener propertyChangeListener64 = null;
        managementDashboard63.addPropertyChangeListener(propertyChangeListener64);
        java.awt.event.FocusEvent.Cause cause66 = null;
        managementDashboard63.requestFocus(cause66);
        java.awt.event.InputMethodListener inputMethodListener68 = null;
        managementDashboard63.addInputMethodListener(inputMethodListener68);
        java.awt.Point point70 = managementDashboard63.location();
        java.awt.Component component71 = managementDashboard55.findComponentAt(point70);
        java.awt.Component component72 = managementDashboard52.getComponentAt(point70);
        java.awt.Component component73 = managementDashboard32.findComponentAt(point70);
        java.util.function.Consumer<String> strConsumer74 = null;
        ManagementDashboard managementDashboard75 = new ManagementDashboard(strConsumer74);
        java.awt.image.ImageProducer imageProducer76 = null;
        java.awt.Image image77 = managementDashboard75.createImage(imageProducer76);
        java.util.function.Consumer<String> strConsumer78 = null;
        ManagementDashboard managementDashboard79 = new ManagementDashboard(strConsumer78);
        java.beans.PropertyChangeListener propertyChangeListener80 = null;
        managementDashboard79.addPropertyChangeListener(propertyChangeListener80);
        java.awt.event.FocusEvent.Cause cause82 = null;
        managementDashboard79.requestFocus(cause82);
        java.awt.event.InputMethodListener inputMethodListener84 = null;
        managementDashboard79.addInputMethodListener(inputMethodListener84);
        java.awt.Point point86 = managementDashboard79.location();
        java.awt.Component component87 = managementDashboard75.add((java.awt.Component) managementDashboard79);
        javax.swing.JPopupMenu jPopupMenu88 = managementDashboard75.getComponentPopupMenu();
        javax.swing.border.Border border89 = null;
        managementDashboard75.setBorder(border89);
        java.awt.Graphics graphics91 = null;
        managementDashboard75.print(graphics91);
        java.awt.Color color93 = managementDashboard75.getBackground();
        managementDashboard32.setForeground(color93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 0.5f + "'", float49 == 0.5f);
        org.junit.Assert.assertNotNull(layoutManager50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(image59);
        org.junit.Assert.assertNotNull(point70);
        org.junit.Assert.assertNull(component71);
        org.junit.Assert.assertNull(component72);
        org.junit.Assert.assertNull(component73);
        org.junit.Assert.assertNotNull(image77);
        org.junit.Assert.assertNotNull(point86);
        org.junit.Assert.assertNotNull(component87);
        org.junit.Assert.assertNull(jPopupMenu88);
        org.junit.Assert.assertNotNull(color93);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj9 = managementDashboard1.getTreeLock();
        managementDashboard1.setVerifyInputWhenFocusTarget(true);
        java.awt.event.MouseEvent mouseEvent12 = null;
        String str13 = managementDashboard1.getToolTipText(mouseEvent12);
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        int int10 = managementDashboard1.getDebugGraphicsOptions();
        javax.swing.border.Border border11 = managementDashboard1.getBorder();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(border11);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        java.awt.event.InputMethodListener inputMethodListener2 = null;
        managementAccountsView1.removeInputMethodListener(inputMethodListener2);
        boolean boolean4 = managementAccountsView1.isFocusTraversable();
        java.awt.im.InputMethodRequests inputMethodRequests5 = managementAccountsView1.getInputMethodRequests();
        managementAccountsView1.disable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(inputMethodRequests5);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.image.ImageProducer imageProducer38 = null;
        java.awt.Image image39 = managementDashboard32.createImage(imageProducer38);
        java.awt.ComponentOrientation componentOrientation40 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard32.applyComponentOrientation(componentOrientation40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(image39);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Color color6 = managementDashboard1.getBackground();
        managementDashboard1.repaint();
        boolean boolean8 = managementDashboard1.isOpaque();
        managementDashboard1.firePropertyChange("hi!", 10, 10);
        javax.swing.plaf.PanelUI panelUI13 = managementDashboard1.getUI();
        String str14 = managementDashboard1.toString();
        java.awt.Toolkit toolkit15 = managementDashboard1.getToolkit();
        java.awt.Event event16 = null;
        boolean boolean19 = managementDashboard1.mouseExit(event16, 52, (int) (short) 0);
        org.junit.Assert.assertNotNull(color6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(panelUI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str14, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(toolkit15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.Component component22 = managementDashboard1.getNextFocusableComponent();
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener23);
        managementDashboard1.doLayout();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(component22);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        javax.swing.plaf.PanelUI panelUI9 = managementDashboard1.getUI();
        java.awt.Event event10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = managementDashboard1.postEvent(event10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertNotNull(panelUI9);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.Dimension dimension8 = managementDashboard1.size();
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        int int10 = managementDashboard1.getWidth();
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isVisible();
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Image image19 = managementDashboard15.createImage(13, (-1));
        managementDashboard15.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Component component31 = managementDashboard15.findComponentAt(point30);
        java.awt.Component component32 = managementDashboard12.getComponentAt(point30);
        managementDashboard12.grabFocus();
        java.util.function.Consumer<String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        boolean boolean36 = managementDashboard35.isVisible();
        java.awt.Image image39 = managementDashboard35.createImage(13, (-1));
        managementDashboard35.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer42 = null;
        ManagementDashboard managementDashboard43 = new ManagementDashboard(strConsumer42);
        java.beans.PropertyChangeListener propertyChangeListener44 = null;
        managementDashboard43.addPropertyChangeListener(propertyChangeListener44);
        java.awt.event.FocusEvent.Cause cause46 = null;
        managementDashboard43.requestFocus(cause46);
        java.awt.event.InputMethodListener inputMethodListener48 = null;
        managementDashboard43.addInputMethodListener(inputMethodListener48);
        java.awt.Point point50 = managementDashboard43.location();
        java.awt.Component component51 = managementDashboard35.findComponentAt(point50);
        java.util.function.Consumer<String> strConsumer52 = null;
        ManagementDashboard managementDashboard53 = new ManagementDashboard(strConsumer52);
        java.awt.image.ImageProducer imageProducer54 = null;
        java.awt.Image image55 = managementDashboard53.createImage(imageProducer54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.beans.PropertyChangeListener propertyChangeListener58 = null;
        managementDashboard57.addPropertyChangeListener(propertyChangeListener58);
        java.awt.event.FocusEvent.Cause cause60 = null;
        managementDashboard57.requestFocus(cause60);
        java.awt.event.InputMethodListener inputMethodListener62 = null;
        managementDashboard57.addInputMethodListener(inputMethodListener62);
        int int64 = managementDashboard35.checkImage(image55, (java.awt.image.ImageObserver) managementDashboard57);
        java.util.function.Consumer<String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        java.beans.PropertyChangeListener propertyChangeListener67 = null;
        managementDashboard66.addPropertyChangeListener(propertyChangeListener67);
        java.util.Locale locale69 = managementDashboard66.getLocale();
        float float70 = managementDashboard66.getAlignmentY();
        java.awt.Component component71 = managementDashboard57.add((java.awt.Component) managementDashboard66);
        java.util.function.Consumer<String> strConsumer72 = null;
        ManagementDashboard managementDashboard73 = new ManagementDashboard(strConsumer72);
        java.beans.PropertyChangeListener propertyChangeListener74 = null;
        managementDashboard73.addPropertyChangeListener(propertyChangeListener74);
        java.util.Locale locale76 = managementDashboard73.getLocale();
        managementDashboard66.setLocale(locale76);
        managementDashboard66.addNotify();
        java.awt.Dimension dimension79 = managementDashboard66.getMaximumSize();
        managementDashboard12.setMaximumSize(dimension79);
        managementDashboard1.setPreferredSize(dimension79);
        boolean boolean82 = managementDashboard1.isManagingFocus();
        java.awt.im.InputMethodRequests inputMethodRequests83 = managementDashboard1.getInputMethodRequests();
        java.awt.image.VolatileImage volatileImage86 = managementDashboard1.createVolatileImage(0, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNull(component31);
        org.junit.Assert.assertNull(component32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(image39);
        org.junit.Assert.assertNotNull(point50);
        org.junit.Assert.assertNull(component51);
        org.junit.Assert.assertNotNull(image55);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.5f + "'", float70 == 0.5f);
        org.junit.Assert.assertNotNull(component71);
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(inputMethodRequests83);
        org.junit.Assert.assertNull(volatileImage86);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        DebitCardPayment debitCardPayment0 = new DebitCardPayment();
        debitCardPayment0.pay((double) 100L);
        debitCardPayment0.pay((double) (short) 100);
        debitCardPayment0.pay((double) 7);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        int int20 = managementDashboard19.countComponents();
        managementDashboard19.resetKeyboardActions();
        managementDashboard19.layout();
        java.awt.event.MouseEvent mouseEvent23 = null;
        java.awt.Point point24 = managementDashboard19.getPopupLocation(mouseEvent23);
        boolean boolean25 = managementDashboard1.isAncestorOf((java.awt.Component) managementDashboard19);
        java.awt.Dimension dimension26 = managementDashboard1.minimumSize();
        int int27 = managementDashboard1.getY();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(point24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dimension26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener8 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener8);
        managementDashboard1.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray13 = managementDashboard1.getComponents();
        java.awt.Point point14 = managementDashboard1.location();
        managementDashboard1.setFocusTraversalPolicyProvider(false);
        managementDashboard1.firePropertyChange("123456789", false, false);
        int int21 = managementDashboard1.getX();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(componentArray13);
        org.junit.Assert.assertNotNull(point14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.enable();
        java.util.function.Consumer<String> strConsumer5 = null;
        ManagementDashboard managementDashboard6 = new ManagementDashboard(strConsumer5);
        java.beans.PropertyChangeListener propertyChangeListener7 = null;
        managementDashboard6.addPropertyChangeListener(propertyChangeListener7);
        String str9 = managementDashboard6.getName();
        java.awt.event.ComponentListener componentListener10 = null;
        managementDashboard6.removeComponentListener(componentListener10);
        managementDashboard6.move((int) (short) 100, 9);
        int int15 = managementDashboard6.getDebugGraphicsOptions();
        java.awt.Component component18 = managementDashboard6.locate(32, 16);
        java.util.function.Consumer<String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        java.beans.PropertyChangeListener propertyChangeListener21 = null;
        managementDashboard20.addPropertyChangeListener(propertyChangeListener21);
        java.awt.event.FocusEvent.Cause cause23 = null;
        managementDashboard20.requestFocus(cause23);
        java.awt.event.InputMethodListener inputMethodListener25 = null;
        managementDashboard20.addInputMethodListener(inputMethodListener25);
        java.awt.Color color27 = managementDashboard20.getBackground();
        managementDashboard20.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener30 = null;
        managementDashboard20.addMouseListener(mouseListener30);
        boolean boolean32 = managementDashboard20.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent33 = null;
        java.awt.Point point34 = managementDashboard20.getPopupLocation(mouseEvent33);
        java.util.function.Consumer<String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        managementDashboard36.setEnabled(true);
        java.awt.Point point39 = managementDashboard36.location();
        java.awt.Component component40 = managementDashboard20.findComponentAt(point39);
        java.awt.Point point41 = managementDashboard6.getLocation(point39);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setComponentZOrder((java.awt.Component) managementDashboard6, 13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(component18);
        org.junit.Assert.assertNotNull(color27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(point34);
        org.junit.Assert.assertNotNull(point39);
        org.junit.Assert.assertNull(component40);
        org.junit.Assert.assertNotNull(point41);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        java.awt.event.MouseEvent mouseEvent5 = null;
        java.awt.Point point6 = managementDashboard1.getPopupLocation(mouseEvent5);
        boolean boolean7 = managementDashboard1.isPreferredSizeSet();
        boolean boolean9 = managementDashboard1.areFocusTraversalKeysSet(1);
        boolean boolean10 = managementDashboard1.isFocusTraversalPolicyProvider();
        java.awt.event.InputMethodListener inputMethodListener11 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener11);
        boolean boolean13 = managementDashboard1.isFocusCycleRoot();
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Image image19 = managementDashboard15.createImage(13, (-1));
        managementDashboard15.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Component component31 = managementDashboard15.findComponentAt(point30);
        java.util.function.Consumer<String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        java.awt.image.ImageProducer imageProducer34 = null;
        java.awt.Image image35 = managementDashboard33.createImage(imageProducer34);
        java.util.function.Consumer<String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        java.beans.PropertyChangeListener propertyChangeListener38 = null;
        managementDashboard37.addPropertyChangeListener(propertyChangeListener38);
        java.awt.event.FocusEvent.Cause cause40 = null;
        managementDashboard37.requestFocus(cause40);
        java.awt.event.InputMethodListener inputMethodListener42 = null;
        managementDashboard37.addInputMethodListener(inputMethodListener42);
        int int44 = managementDashboard15.checkImage(image35, (java.awt.image.ImageObserver) managementDashboard37);
        managementDashboard37.show();
        java.awt.Dimension dimension46 = managementDashboard37.getMaximumSize();
        managementDashboard1.setPreferredSize(dimension46);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(point6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNull(component31);
        org.junit.Assert.assertNotNull(image35);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(dimension46);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        java.awt.event.MouseMotionListener mouseMotionListener10 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener10);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        java.awt.event.MouseEvent mouseEvent5 = null;
        java.awt.Point point6 = managementDashboard1.getPopupLocation(mouseEvent5);
        boolean boolean7 = managementDashboard1.isPreferredSizeSet();
        boolean boolean9 = managementDashboard1.areFocusTraversalKeysSet(1);
        boolean boolean10 = managementDashboard1.isFocusTraversalPolicyProvider();
        java.awt.event.InputMethodListener inputMethodListener11 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener11);
        boolean boolean15 = managementDashboard1.contains((int) (byte) -1, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(point6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        managementDashboard1.removeAll();
        javax.swing.TransferHandler transferHandler5 = null;
        managementDashboard1.setTransferHandler(transferHandler5);
        managementDashboard1.setDoubleBuffered(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        int int20 = managementDashboard1.getComponentCount();
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray21 = managementDashboard1.getVetoableChangeListeners();
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        boolean boolean24 = managementDashboard23.isVisible();
        java.util.function.Consumer<String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        boolean boolean27 = managementDashboard26.isVisible();
        java.awt.Image image30 = managementDashboard26.createImage(13, (-1));
        managementDashboard26.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        java.beans.PropertyChangeListener propertyChangeListener35 = null;
        managementDashboard34.addPropertyChangeListener(propertyChangeListener35);
        java.awt.event.FocusEvent.Cause cause37 = null;
        managementDashboard34.requestFocus(cause37);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard34.addInputMethodListener(inputMethodListener39);
        java.awt.Point point41 = managementDashboard34.location();
        java.awt.Component component42 = managementDashboard26.findComponentAt(point41);
        java.awt.Component component43 = managementDashboard23.getComponentAt(point41);
        boolean boolean44 = managementDashboard1.contains(point41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray21);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray21, new java.beans.VetoableChangeListener[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(image30);
        org.junit.Assert.assertNotNull(point41);
        org.junit.Assert.assertNull(component42);
        org.junit.Assert.assertNull(component43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        javax.swing.border.Border border15 = null;
        managementDashboard1.setBorder(border15);
        java.util.function.Consumer<String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard18.addPropertyChangeListener(propertyChangeListener19);
        java.awt.event.FocusEvent.Cause cause21 = null;
        managementDashboard18.requestFocus(cause21);
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard18.addInputMethodListener(inputMethodListener23);
        java.awt.Color color25 = managementDashboard18.getBackground();
        managementDashboard1.setForeground(color25);
        java.awt.Container container27 = managementDashboard1.getParent();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Rectangle rectangle28 = container27.bounds();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNotNull(color25);
        org.junit.Assert.assertNull(container27);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        javax.swing.JRootPane jRootPane32 = managementDashboard1.getRootPane();
        javax.accessibility.AccessibleContext accessibleContext33 = managementDashboard1.getAccessibleContext();
        managementDashboard1.move(0, 12);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertNull(jRootPane32);
        org.junit.Assert.assertNotNull(accessibleContext33);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        java.awt.Toolkit toolkit22 = managementDashboard1.getToolkit();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(toolkit22);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Graphics graphics31 = null;
        managementDashboard1.printAll(graphics31);
        boolean boolean33 = managementDashboard1.requestDefaultFocus();
        javax.swing.TransferHandler transferHandler34 = managementDashboard1.getTransferHandler();
        java.awt.event.MouseListener[] mouseListenerArray35 = managementDashboard1.getMouseListeners();
        boolean boolean38 = managementDashboard1.inside((int) (short) 0, 11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(transferHandler34);
        org.junit.Assert.assertNotNull(mouseListenerArray35);
        org.junit.Assert.assertArrayEquals(mouseListenerArray35, new java.awt.event.MouseListener[] {});
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.awt.Image image6 = managementDashboard1.createImage((int) (byte) 1, (int) (short) -1);
        java.awt.Component.BaselineResizeBehavior baselineResizeBehavior7 = managementDashboard1.getBaselineResizeBehavior();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNull(image6);
        org.junit.Assert.assertTrue("'" + baselineResizeBehavior7 + "' != '" + java.awt.Component.BaselineResizeBehavior.OTHER + "'", baselineResizeBehavior7.equals(java.awt.Component.BaselineResizeBehavior.OTHER));
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        managementDashboard1.hide();
        boolean boolean6 = managementDashboard1.isEnabled();
        java.awt.im.InputMethodRequests inputMethodRequests7 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.setOpaque(false);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(inputMethodRequests7);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        boolean boolean85 = managementDashboard72.isLightweight();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        managementDashboard1.firePropertyChange("", (byte) 0, (byte) -1);
        java.awt.event.HierarchyListener hierarchyListener23 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener23);
        managementDashboard1.addNotify();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.awt.Cursor cursor85 = managementDashboard72.getCursor();
        boolean boolean86 = managementDashboard72.isFontSet();
        managementDashboard72.firePropertyChange("data/parkingSpaceData.csv", '#', ' ');
        managementDashboard72.setAlignmentX((float) 6);
        java.awt.event.MouseEvent mouseEvent93 = null;
        java.awt.Point point94 = managementDashboard72.getToolTipLocation(mouseEvent93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertNotNull(cursor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(point94);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.awt.Cursor cursor85 = managementDashboard72.getCursor();
        boolean boolean86 = managementDashboard72.isFontSet();
        managementDashboard72.firePropertyChange("data/parkingSpaceData.csv", '#', ' ');
        managementDashboard72.setAlignmentX((float) 6);
        java.awt.event.ContainerListener[] containerListenerArray93 = managementDashboard72.getContainerListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertNotNull(cursor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(containerListenerArray93);
        org.junit.Assert.assertArrayEquals(containerListenerArray93, new java.awt.event.ContainerListener[] {});
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.ImageCapabilities imageCapabilities22 = null;
        java.awt.image.VolatileImage volatileImage23 = managementDashboard1.createVolatileImage(13, (-1), imageCapabilities22);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNull(volatileImage23);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Shape shape11 = null;
        managementDashboard1.setMixingCutoutShape(shape11);
        managementDashboard1.enable();
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray14 = managementDashboard1.getMouseWheelListeners();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray14);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray14, new java.awt.event.MouseWheelListener[] {});
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        boolean boolean6 = managementDashboard1.contains((int) (byte) -1, (int) '#');
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        javax.swing.JToolTip jToolTip16 = managementDashboard8.createToolTip();
        Object obj17 = null;
        managementDashboard1.putClientProperty((Object) jToolTip16, obj17);
        jToolTip16.setAlignmentX((float) (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
        org.junit.Assert.assertNotNull(jToolTip16);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        SuperManager superManager0 = new SuperManager();
        String str1 = superManager0.getPassword();
        MainSystem.currentManager = superManager0;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "123456789" + "'", str1, "123456789");
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.awt.Insets insets3 = managementDashboard1.getInsets();
        boolean boolean4 = managementDashboard1.getIgnoreRepaint();
        managementDashboard1.move((int) '4', (int) (short) 1);
        managementDashboard1.setFocusCycleRoot(true);
        java.awt.Event event10 = null;
        boolean boolean13 = managementDashboard1.mouseDown(event10, (int) (byte) 0, (int) '4');
        managementDashboard1.move((int) ' ', 2);
        java.awt.GraphicsConfiguration graphicsConfiguration17 = managementDashboard1.getGraphicsConfiguration();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(insets3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(graphicsConfiguration17);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        java.util.function.Consumer<String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        java.util.function.Consumer<String> strConsumer2 = null;
        ManagementDashboard managementDashboard3 = new ManagementDashboard(strConsumer2);
        boolean boolean4 = managementDashboard3.isVisible();
        java.awt.Image image7 = managementDashboard3.createImage(13, (-1));
        managementDashboard3.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        java.beans.PropertyChangeListener propertyChangeListener12 = null;
        managementDashboard11.addPropertyChangeListener(propertyChangeListener12);
        java.awt.event.FocusEvent.Cause cause14 = null;
        managementDashboard11.requestFocus(cause14);
        java.awt.event.InputMethodListener inputMethodListener16 = null;
        managementDashboard11.addInputMethodListener(inputMethodListener16);
        java.awt.Point point18 = managementDashboard11.location();
        java.awt.Component component19 = managementDashboard3.findComponentAt(point18);
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        java.awt.image.ImageProducer imageProducer22 = null;
        java.awt.Image image23 = managementDashboard21.createImage(imageProducer22);
        java.util.function.Consumer<String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        java.beans.PropertyChangeListener propertyChangeListener26 = null;
        managementDashboard25.addPropertyChangeListener(propertyChangeListener26);
        java.awt.event.FocusEvent.Cause cause28 = null;
        managementDashboard25.requestFocus(cause28);
        java.awt.event.InputMethodListener inputMethodListener30 = null;
        managementDashboard25.addInputMethodListener(inputMethodListener30);
        int int32 = managementDashboard3.checkImage(image23, (java.awt.image.ImageObserver) managementDashboard25);
        java.util.function.Consumer<String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        boolean boolean37 = managementDashboard36.isFocusOwner();
        boolean boolean38 = managementDashboard36.isDoubleBuffered();
        managementDashboard36.setAlignmentX((float) 32);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener41 = null;
        managementDashboard36.addHierarchyBoundsListener(hierarchyBoundsListener41);
        int int43 = userDashboard1.checkImage(image23, (int) (short) 0, 6, (java.awt.image.ImageObserver) managementDashboard36);
        java.awt.Component component44 = userDashboard1.getNextFocusableComponent();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(image7);
        org.junit.Assert.assertNotNull(point18);
        org.junit.Assert.assertNull(component19);
        org.junit.Assert.assertNotNull(image23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertNull(component44);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        boolean boolean6 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        javax.swing.InputVerifier inputVerifier7 = null;
        managementDashboard1.setInputVerifier(inputVerifier7);
        java.awt.event.ActionListener actionListener9 = null;
        javax.swing.KeyStroke keyStroke11 = null;
        managementDashboard1.registerKeyboardAction(actionListener9, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", keyStroke11, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        java.awt.Event event32 = null;
        boolean boolean35 = managementDashboard1.mouseDrag(event32, (int) (short) 0, 10);
        managementDashboard1.setSize((int) (short) -1, (int) (byte) 10);
        java.awt.Rectangle rectangle39 = managementDashboard1.getBounds();
        boolean boolean40 = managementDashboard1.isLightweight();
        java.awt.event.ContainerListener containerListener41 = null;
        managementDashboard1.addContainerListener(containerListener41);
        java.beans.PropertyChangeListener propertyChangeListener43 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener43);
        float float45 = managementDashboard1.getAlignmentX();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(rectangle39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.5f + "'", float45 == 0.5f);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        boolean boolean6 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        java.awt.Rectangle rectangle7 = managementDashboard1.getVisibleRect();
        managementDashboard1.grabFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle7);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.firePropertyChange("", 'a', '4');
        java.awt.Component component21 = managementDashboard1.findComponentAt((int) '4', (int) (short) 0);
        java.awt.Graphics graphics22 = null;
        managementDashboard1.paint(graphics22);
        java.awt.Container container24 = managementDashboard1.getFocusCycleRootAncestor();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertNull(container24);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        java.util.function.Consumer<String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        java.awt.image.ImageProducer imageProducer12 = null;
        java.awt.Image image13 = managementDashboard11.createImage(imageProducer12);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        java.beans.PropertyChangeListener propertyChangeListener16 = null;
        managementDashboard15.addPropertyChangeListener(propertyChangeListener16);
        java.awt.event.FocusEvent.Cause cause18 = null;
        managementDashboard15.requestFocus(cause18);
        java.awt.event.InputMethodListener inputMethodListener20 = null;
        managementDashboard15.addInputMethodListener(inputMethodListener20);
        java.awt.Point point22 = managementDashboard15.location();
        java.awt.Component component23 = managementDashboard11.add((java.awt.Component) managementDashboard15);
        javax.swing.JPopupMenu jPopupMenu24 = managementDashboard11.getComponentPopupMenu();
        managementDashboard11.repaint((int) '#', 9, 1, (-1));
        managementDashboard11.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        java.awt.event.ActionListener actionListener34 = null;
        javax.swing.KeyStroke keyStroke36 = null;
        managementDashboard33.registerKeyboardAction(actionListener34, "hi!", keyStroke36, (int) (short) 0);
        java.awt.Font font39 = managementDashboard33.getFont();
        managementDashboard11.setFont(font39);
        java.awt.image.ColorModel colorModel41 = managementDashboard11.getColorModel();
        java.util.function.Consumer<String> strConsumer42 = null;
        ManagementDashboard managementDashboard43 = new ManagementDashboard(strConsumer42);
        boolean boolean44 = managementDashboard43.isVisible();
        java.awt.Image image47 = managementDashboard43.createImage(13, (-1));
        boolean boolean48 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard43);
        boolean boolean49 = managementDashboard43.requestDefaultFocus();
        managementDashboard43.updateUI();
        java.awt.Shape shape51 = null;
        managementDashboard43.setMixingCutoutShape(shape51);
        managementDashboard43.setFocusable(true);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard11, (Object) true, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(image13);
        org.junit.Assert.assertNotNull(point22);
        org.junit.Assert.assertNotNull(component23);
        org.junit.Assert.assertNull(jPopupMenu24);
        org.junit.Assert.assertNotNull(font39);
        org.junit.Assert.assertNotNull(colorModel41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(image47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        String str5 = managementDashboard1.getUIClassID();
        java.awt.event.ComponentListener[] componentListenerArray6 = managementDashboard1.getComponentListeners();
        managementDashboard1.transferFocusDownCycle();
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener8 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener8);
        boolean boolean10 = managementDashboard1.isFontSet();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
        org.junit.Assert.assertNotNull(componentListenerArray6);
        org.junit.Assert.assertArrayEquals(componentListenerArray6, new java.awt.event.ComponentListener[] {});
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseMove(event6, (-1), (int) (byte) 0);
        boolean boolean10 = managementDashboard1.isMinimumSizeSet();
        java.awt.Graphics graphics11 = null;
        managementDashboard1.print(graphics11);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isVisible();
        java.util.function.Consumer<String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        boolean boolean18 = managementDashboard17.isVisible();
        java.awt.Image image21 = managementDashboard17.createImage(13, (-1));
        managementDashboard17.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        java.beans.PropertyChangeListener propertyChangeListener26 = null;
        managementDashboard25.addPropertyChangeListener(propertyChangeListener26);
        java.awt.event.FocusEvent.Cause cause28 = null;
        managementDashboard25.requestFocus(cause28);
        java.awt.event.InputMethodListener inputMethodListener30 = null;
        managementDashboard25.addInputMethodListener(inputMethodListener30);
        java.awt.Point point32 = managementDashboard25.location();
        java.awt.Component component33 = managementDashboard17.findComponentAt(point32);
        java.awt.Component component34 = managementDashboard14.getComponentAt(point32);
        managementDashboard14.grabFocus();
        java.awt.Rectangle rectangle36 = managementDashboard14.bounds();
        managementDashboard1.paintImmediately(rectangle36);
        managementDashboard1.repaint(3, (int) (byte) -1, (int) (short) 100, (int) (short) 10);
        java.awt.Component component44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component45 = managementDashboard1.add("ToolTipText", component44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"parent\" because \"comp\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(image21);
        org.junit.Assert.assertNotNull(point32);
        org.junit.Assert.assertNull(component33);
        org.junit.Assert.assertNull(component34);
        org.junit.Assert.assertNotNull(rectangle36);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isFocusOwner();
        boolean boolean3 = managementDashboard1.isDoubleBuffered();
        managementDashboard1.setAlignmentX((float) 32);
        java.util.function.Consumer<String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        java.beans.PropertyChangeListener propertyChangeListener8 = null;
        managementDashboard7.addPropertyChangeListener(propertyChangeListener8);
        java.awt.event.FocusEvent.Cause cause10 = null;
        managementDashboard7.requestFocus(cause10);
        java.awt.Color color12 = managementDashboard7.getBackground();
        managementDashboard1.setForeground(color12);
        managementDashboard1.setDoubleBuffered(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(color12);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.awt.Point point4 = managementDashboard1.location();
        java.awt.Dimension dimension5 = managementDashboard1.getPreferredSize();
        org.junit.Assert.assertNotNull(point4);
        org.junit.Assert.assertNotNull(dimension5);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", '#', '#');
        managementDashboard1.validate();
        javax.swing.TransferHandler transferHandler13 = null;
        managementDashboard1.setTransferHandler(transferHandler13);
        java.awt.Toolkit toolkit15 = managementDashboard1.getToolkit();
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray16 = managementDashboard1.getMouseWheelListeners();
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
        org.junit.Assert.assertNotNull(toolkit15);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray16);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray16, new java.awt.event.MouseWheelListener[] {});
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Dimension dimension8 = managementDashboard1.minimumSize();
        java.awt.Dimension dimension9 = managementDashboard1.getPreferredSize();
        float float10 = managementDashboard1.getAlignmentX();
        managementDashboard1.setSize(13, (int) (short) 10);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener14 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener14);
        java.awt.Event event16 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.deliverEvent(event16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"e\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.5f + "'", float10 == 0.5f);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        managementDashboard1.hide();
        boolean boolean6 = managementDashboard1.isEnabled();
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        managementDashboard1.setSize(dimension15);
        int int19 = managementDashboard1.getBaseline((int) (byte) 1, 12);
        Object obj20 = null;
        java.util.function.Consumer<String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        int int23 = managementDashboard22.countComponents();
        java.awt.im.InputMethodRequests inputMethodRequests24 = managementDashboard22.getInputMethodRequests();
        java.awt.event.KeyListener keyListener25 = null;
        managementDashboard22.removeKeyListener(keyListener25);
        managementDashboard22.setFocusTraversalPolicyProvider(false);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.putClientProperty(obj20, (Object) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.toString()\" because \"key\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNull(inputMethodRequests24);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        boolean boolean9 = managementDashboard1.isFocusTraversalPolicyProvider();
        managementDashboard1.setBounds(5, 3, (int) (byte) 10, 3);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        int int33 = managementDashboard1.getComponentCount();
        java.util.function.Consumer<String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.beans.PropertyChangeListener propertyChangeListener36 = null;
        managementDashboard35.addPropertyChangeListener(propertyChangeListener36);
        java.awt.event.FocusEvent.Cause cause38 = null;
        managementDashboard35.requestFocus(cause38);
        java.awt.Color color40 = managementDashboard35.getBackground();
        managementDashboard35.repaint();
        boolean boolean42 = managementDashboard35.isOpaque();
        managementDashboard35.firePropertyChange("hi!", 10, 10);
        javax.swing.plaf.PanelUI panelUI47 = managementDashboard35.getUI();
        managementDashboard1.setUI(panelUI47);
        java.io.PrintStream printStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(color40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(panelUI47);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        java.awt.Dimension dimension45 = managementDashboard32.getMaximumSize();
        boolean boolean46 = managementDashboard32.isFocusTraversalPolicySet();
        managementDashboard32.disable();
        java.util.function.Consumer<String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        java.beans.PropertyChangeListener propertyChangeListener50 = null;
        managementDashboard49.addPropertyChangeListener(propertyChangeListener50);
        java.awt.image.ImageProducer imageProducer52 = null;
        java.awt.Image image53 = managementDashboard49.createImage(imageProducer52);
        java.awt.Insets insets54 = managementDashboard49.getInsets();
        java.awt.Insets insets55 = managementDashboard32.getInsets(insets54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(image53);
        org.junit.Assert.assertNotNull(insets54);
        org.junit.Assert.assertNotNull(insets55);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.Dimension dimension8 = managementDashboard1.size();
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Component.BaselineResizeBehavior baselineResizeBehavior10 = jToolTip9.getBaselineResizeBehavior();
        javax.swing.JPopupMenu jPopupMenu11 = null;
        jToolTip9.setComponentPopupMenu(jPopupMenu11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + baselineResizeBehavior10 + "' != '" + java.awt.Component.BaselineResizeBehavior.OTHER + "'", baselineResizeBehavior10.equals(java.awt.Component.BaselineResizeBehavior.OTHER));
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Shape shape11 = null;
        managementDashboard1.setMixingCutoutShape(shape11);
        java.awt.im.InputContext inputContext13 = managementDashboard1.getInputContext();
        int int16 = managementDashboard1.getBaseline((int) (byte) 100, (int) (byte) 10);
        java.util.function.Consumer<String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard18.addPropertyChangeListener(propertyChangeListener19);
        java.awt.event.FocusEvent.Cause cause21 = null;
        managementDashboard18.requestFocus(cause21);
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard18.addInputMethodListener(inputMethodListener23);
        managementDashboard18.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        float float30 = managementDashboard18.getAlignmentY();
        javax.swing.ActionMap actionMap31 = managementDashboard18.getActionMap();
        managementDashboard1.setActionMap(actionMap31);
        java.util.function.Consumer<String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        java.beans.PropertyChangeListener propertyChangeListener35 = null;
        managementDashboard34.addPropertyChangeListener(propertyChangeListener35);
        java.util.Locale locale37 = managementDashboard34.getLocale();
        float float38 = managementDashboard34.getAlignmentY();
        java.awt.image.VolatileImage volatileImage41 = managementDashboard34.createVolatileImage((int) 'a', (int) (short) 1);
        Object obj42 = managementDashboard34.getTreeLock();
        managementDashboard34.setVerifyInputWhenFocusTarget(true);
        managementDashboard34.requestFocus();
        managementDashboard34.setFocusTraversalKeysEnabled(false);
        java.awt.LayoutManager layoutManager48 = managementDashboard34.getLayout();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setComponentZOrder((java.awt.Component) managementDashboard34, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertNull(inputContext13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 0.5f + "'", float30 == 0.5f);
        org.junit.Assert.assertNotNull(actionMap31);
        org.junit.Assert.assertNotNull(locale37);
        org.junit.Assert.assertEquals(locale37.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float38 + "' != '" + 0.5f + "'", float38 == 0.5f);
        org.junit.Assert.assertNull(volatileImage41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(layoutManager48);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.image.ColorModel colorModel4 = managementDashboard1.getColorModel();
        javax.swing.plaf.PanelUI panelUI5 = managementDashboard1.getUI();
        managementDashboard1.repaint((int) '#', (int) (byte) 0, (int) (short) 0, 8);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isVisible();
        java.awt.Image image16 = managementDashboard12.createImage(13, (-1));
        managementDashboard12.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        java.beans.PropertyChangeListener propertyChangeListener21 = null;
        managementDashboard20.addPropertyChangeListener(propertyChangeListener21);
        java.awt.event.FocusEvent.Cause cause23 = null;
        managementDashboard20.requestFocus(cause23);
        java.awt.event.InputMethodListener inputMethodListener25 = null;
        managementDashboard20.addInputMethodListener(inputMethodListener25);
        java.awt.Point point27 = managementDashboard20.location();
        java.awt.Component component28 = managementDashboard12.findComponentAt(point27);
        java.util.function.Consumer<String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        java.awt.image.ImageProducer imageProducer31 = null;
        java.awt.Image image32 = managementDashboard30.createImage(imageProducer31);
        java.util.function.Consumer<String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        java.beans.PropertyChangeListener propertyChangeListener35 = null;
        managementDashboard34.addPropertyChangeListener(propertyChangeListener35);
        java.awt.event.FocusEvent.Cause cause37 = null;
        managementDashboard34.requestFocus(cause37);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard34.addInputMethodListener(inputMethodListener39);
        int int41 = managementDashboard12.checkImage(image32, (java.awt.image.ImageObserver) managementDashboard34);
        managementDashboard34.show();
        java.awt.Dimension dimension43 = managementDashboard34.getMaximumSize();
        managementDashboard1.setMinimumSize(dimension43);
        org.junit.Assert.assertNotNull(colorModel4);
        org.junit.Assert.assertNotNull(panelUI5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(image16);
        org.junit.Assert.assertNotNull(point27);
        org.junit.Assert.assertNull(component28);
        org.junit.Assert.assertNotNull(image32);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(dimension43);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.util.function.Consumer<String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        boolean boolean8 = managementDashboard7.isVisible();
        java.util.function.Consumer<String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard18.addPropertyChangeListener(propertyChangeListener19);
        java.awt.event.FocusEvent.Cause cause21 = null;
        managementDashboard18.requestFocus(cause21);
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard18.addInputMethodListener(inputMethodListener23);
        java.awt.Point point25 = managementDashboard18.location();
        java.awt.Component component26 = managementDashboard10.findComponentAt(point25);
        java.awt.Component component27 = managementDashboard7.getComponentAt(point25);
        managementDashboard7.grabFocus();
        java.util.function.Consumer<String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        boolean boolean31 = managementDashboard30.isVisible();
        java.awt.Image image34 = managementDashboard30.createImage(13, (-1));
        managementDashboard30.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        java.beans.PropertyChangeListener propertyChangeListener39 = null;
        managementDashboard38.addPropertyChangeListener(propertyChangeListener39);
        java.awt.event.FocusEvent.Cause cause41 = null;
        managementDashboard38.requestFocus(cause41);
        java.awt.event.InputMethodListener inputMethodListener43 = null;
        managementDashboard38.addInputMethodListener(inputMethodListener43);
        java.awt.Point point45 = managementDashboard38.location();
        java.awt.Component component46 = managementDashboard30.findComponentAt(point45);
        java.util.function.Consumer<String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        java.awt.image.ImageProducer imageProducer49 = null;
        java.awt.Image image50 = managementDashboard48.createImage(imageProducer49);
        java.util.function.Consumer<String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard52.addPropertyChangeListener(propertyChangeListener53);
        java.awt.event.FocusEvent.Cause cause55 = null;
        managementDashboard52.requestFocus(cause55);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard52.addInputMethodListener(inputMethodListener57);
        int int59 = managementDashboard30.checkImage(image50, (java.awt.image.ImageObserver) managementDashboard52);
        java.util.function.Consumer<String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.util.Locale locale64 = managementDashboard61.getLocale();
        float float65 = managementDashboard61.getAlignmentY();
        java.awt.Component component66 = managementDashboard52.add((java.awt.Component) managementDashboard61);
        java.util.function.Consumer<String> strConsumer67 = null;
        ManagementDashboard managementDashboard68 = new ManagementDashboard(strConsumer67);
        java.beans.PropertyChangeListener propertyChangeListener69 = null;
        managementDashboard68.addPropertyChangeListener(propertyChangeListener69);
        java.util.Locale locale71 = managementDashboard68.getLocale();
        managementDashboard61.setLocale(locale71);
        managementDashboard61.addNotify();
        java.awt.Dimension dimension74 = managementDashboard61.getMaximumSize();
        managementDashboard7.setMaximumSize(dimension74);
        managementDashboard1.setPreferredSize(dimension74);
        java.util.function.Consumer<String> strConsumer77 = null;
        ManagementDashboard managementDashboard78 = new ManagementDashboard(strConsumer77);
        boolean boolean79 = managementDashboard78.isVisible();
        java.awt.Dimension dimension80 = managementDashboard78.getMinimumSize();
        java.awt.image.ColorModel colorModel81 = managementDashboard78.getColorModel();
        java.awt.ComponentOrientation componentOrientation82 = managementDashboard78.getComponentOrientation();
        managementDashboard1.applyComponentOrientation(componentOrientation82);
        int int84 = managementDashboard1.countComponents();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(point25);
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNull(component27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(image34);
        org.junit.Assert.assertNotNull(point45);
        org.junit.Assert.assertNull(component46);
        org.junit.Assert.assertNotNull(image50);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 0.5f + "'", float65 == 0.5f);
        org.junit.Assert.assertNotNull(component66);
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(dimension80);
        org.junit.Assert.assertNotNull(colorModel81);
        org.junit.Assert.assertNotNull(componentOrientation82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        int int8 = managementDashboard1.getWidth();
        java.util.function.Consumer<String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.remove((int) (short) 1);
        java.awt.Dimension dimension17 = managementDashboard10.minimumSize();
        managementDashboard1.setMinimumSize(dimension17);
        java.util.function.Consumer<String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        int int21 = managementDashboard20.countComponents();
        java.awt.Insets insets22 = managementDashboard20.getInsets();
        boolean boolean23 = managementDashboard20.getIgnoreRepaint();
        managementDashboard20.move((int) '4', (int) (short) 1);
        managementDashboard20.setFocusCycleRoot(true);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setComponentZOrder((java.awt.Component) managementDashboard20, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(dimension17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(insets22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        managementDashboard1.removeNotify();
        managementDashboard1.firePropertyChange("data/managerData.csv", (double) 0, (double) (-1L));
        java.util.function.Consumer<String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        boolean boolean21 = managementDashboard20.isVisible();
        java.awt.Image image24 = managementDashboard20.createImage(13, (-1));
        managementDashboard20.remove((int) (short) 1);
        java.awt.Insets insets27 = managementDashboard20.getInsets();
        java.util.Locale locale28 = managementDashboard20.getLocale();
        java.awt.Graphics graphics29 = null;
        managementDashboard20.printAll(graphics29);
        java.awt.event.KeyListener keyListener31 = null;
        managementDashboard20.removeKeyListener(keyListener31);
        java.util.function.Consumer<String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        boolean boolean35 = managementDashboard34.isVisible();
        java.awt.Image image38 = managementDashboard34.createImage(13, (-1));
        managementDashboard34.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        java.beans.PropertyChangeListener propertyChangeListener43 = null;
        managementDashboard42.addPropertyChangeListener(propertyChangeListener43);
        java.awt.event.FocusEvent.Cause cause45 = null;
        managementDashboard42.requestFocus(cause45);
        java.awt.event.InputMethodListener inputMethodListener47 = null;
        managementDashboard42.addInputMethodListener(inputMethodListener47);
        java.awt.Point point49 = managementDashboard42.location();
        java.awt.Component component50 = managementDashboard34.findComponentAt(point49);
        java.util.function.Consumer<String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        java.awt.image.ImageProducer imageProducer53 = null;
        java.awt.Image image54 = managementDashboard52.createImage(imageProducer53);
        java.util.function.Consumer<String> strConsumer55 = null;
        ManagementDashboard managementDashboard56 = new ManagementDashboard(strConsumer55);
        java.beans.PropertyChangeListener propertyChangeListener57 = null;
        managementDashboard56.addPropertyChangeListener(propertyChangeListener57);
        java.awt.event.FocusEvent.Cause cause59 = null;
        managementDashboard56.requestFocus(cause59);
        java.awt.event.InputMethodListener inputMethodListener61 = null;
        managementDashboard56.addInputMethodListener(inputMethodListener61);
        int int63 = managementDashboard34.checkImage(image54, (java.awt.image.ImageObserver) managementDashboard56);
        java.util.function.Consumer<String> strConsumer64 = null;
        ManagementDashboard managementDashboard65 = new ManagementDashboard(strConsumer64);
        java.beans.PropertyChangeListener propertyChangeListener66 = null;
        managementDashboard65.addPropertyChangeListener(propertyChangeListener66);
        java.util.Locale locale68 = managementDashboard65.getLocale();
        float float69 = managementDashboard65.getAlignmentY();
        java.awt.Component component70 = managementDashboard56.add((java.awt.Component) managementDashboard65);
        java.util.function.Consumer<String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        managementDashboard65.setLocale(locale75);
        managementDashboard65.addNotify();
        managementDashboard65.list();
        managementDashboard65.setDoubleBuffered(false);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard20, (Object) managementDashboard65, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(image24);
        org.junit.Assert.assertNotNull(insets27);
        org.junit.Assert.assertNotNull(locale28);
        org.junit.Assert.assertEquals(locale28.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(image38);
        org.junit.Assert.assertNotNull(point49);
        org.junit.Assert.assertNull(component50);
        org.junit.Assert.assertNotNull(image54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(locale68);
        org.junit.Assert.assertEquals(locale68.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 0.5f + "'", float69 == 0.5f);
        org.junit.Assert.assertNotNull(component70);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener8 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener8);
        managementDashboard1.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray13 = managementDashboard1.getComponents();
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        java.awt.event.ActionListener actionListener16 = null;
        javax.swing.KeyStroke keyStroke18 = null;
        managementDashboard15.registerKeyboardAction(actionListener16, "hi!", keyStroke18, (int) (short) 0);
        java.awt.Font font21 = managementDashboard15.getFont();
        managementDashboard1.setFont(font21);
        javax.swing.JPopupMenu jPopupMenu23 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.setInheritsPopupMenu(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(componentArray13);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNull(jPopupMenu23);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        boolean boolean38 = managementDashboard23.isOpaque();
        java.awt.event.ComponentListener[] componentListenerArray39 = managementDashboard23.getComponentListeners();
        managementDashboard23.firePropertyChange("SUPERMAN", 'a', '4');
        java.awt.Insets insets44 = managementDashboard23.getInsets();
        float float45 = managementDashboard23.getAlignmentX();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(componentListenerArray39);
        org.junit.Assert.assertArrayEquals(componentListenerArray39, new java.awt.event.ComponentListener[] {});
        org.junit.Assert.assertNotNull(insets44);
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.5f + "'", float45 == 0.5f);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.image.ImageProducer imageProducer4 = null;
        java.awt.Image image5 = managementDashboard1.createImage(imageProducer4);
        java.awt.Insets insets6 = managementDashboard1.getInsets();
        java.beans.PropertyChangeListener[] propertyChangeListenerArray8 = managementDashboard1.getPropertyChangeListeners("hi!");
        java.awt.Graphics graphics9 = null;
        managementDashboard1.paintComponents(graphics9);
        managementDashboard1.firePropertyChange("data/lotData.csv", 6, 4);
        org.junit.Assert.assertNotNull(image5);
        org.junit.Assert.assertNotNull(insets6);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray8);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray8, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        javax.swing.JFrame.setDefaultLookAndFeelDecorated(false);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.beans.PropertyChangeListener[] propertyChangeListenerArray3 = managementDashboard1.getPropertyChangeListeners();
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Dimension dimension12 = managementDashboard5.minimumSize();
        java.awt.Dimension dimension13 = managementDashboard5.getPreferredSize();
        java.awt.Dimension dimension14 = managementDashboard1.getSize(dimension13);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray3);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray3, new java.beans.PropertyChangeListener[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertNotNull(dimension13);
        org.junit.Assert.assertNotNull(dimension14);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener8 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener8);
        managementDashboard1.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray13 = managementDashboard1.getComponents();
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        java.awt.event.ActionListener actionListener16 = null;
        javax.swing.KeyStroke keyStroke18 = null;
        managementDashboard15.registerKeyboardAction(actionListener16, "hi!", keyStroke18, (int) (short) 0);
        java.awt.Font font21 = managementDashboard15.getFont();
        managementDashboard1.setFont(font21);
        managementDashboard1.repaint();
        java.awt.Event event24 = null;
        boolean boolean27 = managementDashboard1.mouseMove(event24, 100, 52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(componentArray13);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        float float4 = managementDashboard1.getAlignmentX();
        managementDashboard1.show();
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.5f + "'", float4 == 0.5f);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.beans.PropertyChangeListener propertyChangeListener8 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener8);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.Color color28 = managementDashboard23.getBackground();
        java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray29 = managementDashboard23.getHierarchyBoundsListeners();
        boolean boolean30 = managementDashboard23.getIgnoreRepaint();
        java.awt.ComponentOrientation componentOrientation31 = managementDashboard23.getComponentOrientation();
        Object obj32 = managementDashboard1.getClientProperty((Object) managementDashboard23);
        boolean boolean33 = managementDashboard23.isValidateRoot();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertNotNull(color28);
        org.junit.Assert.assertNotNull(hierarchyBoundsListenerArray29);
        org.junit.Assert.assertArrayEquals(hierarchyBoundsListenerArray29, new java.awt.event.HierarchyBoundsListener[] {});
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(componentOrientation31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        ParkingSpace[] parkingSpaceArray2 = parkingLot1.getSpaces();
        parkingLot1.removeBooking((int) ' ');
        String str5 = parkingLot1.getLotAvailability();
        org.junit.Assert.assertNotNull(parkingSpaceArray2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Shape shape11 = null;
        managementDashboard1.setMixingCutoutShape(shape11);
        java.awt.im.InputContext inputContext13 = managementDashboard1.getInputContext();
        int int16 = managementDashboard1.getBaseline((int) (byte) 100, (int) (byte) 10);
        java.awt.Point point17 = managementDashboard1.getLocation();
        boolean boolean18 = managementDashboard1.isFontSet();
        java.awt.Cursor cursor19 = managementDashboard1.getCursor();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertNull(inputContext13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(point17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(cursor19);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        Manager[] managerArray0 = new Manager[] {};
        java.util.ArrayList<Manager> managerList1 = new java.util.ArrayList<Manager>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<Manager>) managerList1, managerArray0);
        MainSystem.managers = managerList1;
        MainSystem.managers = managerList1;
        MainSystem.managers = managerList1;
        org.junit.Assert.assertNotNull(managerArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Graphics graphics31 = null;
        managementDashboard1.printAll(graphics31);
        boolean boolean33 = managementDashboard1.requestDefaultFocus();
        java.util.function.Consumer<String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.beans.PropertyChangeListener propertyChangeListener36 = null;
        managementDashboard35.addPropertyChangeListener(propertyChangeListener36);
        String str38 = managementDashboard35.getName();
        java.awt.event.ComponentListener componentListener39 = null;
        managementDashboard35.removeComponentListener(componentListener39);
        managementDashboard35.move((int) (short) 100, 9);
        int int44 = managementDashboard35.getDebugGraphicsOptions();
        managementDashboard35.setSize(11, 8);
        java.awt.Point point48 = managementDashboard35.getLocation();
        managementDashboard1.setLocation(point48);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(point48);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.Event event38 = null;
        boolean boolean40 = managementDashboard23.keyUp(event38, 0);
        boolean boolean41 = managementDashboard23.isVisible();
        java.awt.event.KeyListener[] keyListenerArray42 = managementDashboard23.getKeyListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(keyListenerArray42);
        org.junit.Assert.assertArrayEquals(keyListenerArray42, new java.awt.event.KeyListener[] {});
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        javax.swing.plaf.PanelUI panelUI9 = managementDashboard1.getUI();
        java.awt.Component component12 = managementDashboard1.locate((-1), (int) (byte) 0);
        int int13 = managementDashboard1.getComponentCount();
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertNotNull(panelUI9);
        org.junit.Assert.assertNull(component12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        boolean boolean6 = managementDashboard1.contains((int) (byte) -1, (int) '#');
        java.io.PrintStream printStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener8 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener8);
        managementDashboard1.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray13 = managementDashboard1.getComponents();
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Image image19 = managementDashboard15.createImage(13, (-1));
        managementDashboard15.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Component component31 = managementDashboard15.findComponentAt(point30);
        boolean boolean32 = managementDashboard15.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard15.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener34);
        java.util.function.Consumer<String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        java.beans.PropertyChangeListener propertyChangeListener38 = null;
        managementDashboard37.addPropertyChangeListener(propertyChangeListener38);
        java.awt.event.FocusEvent.Cause cause40 = null;
        managementDashboard37.requestFocus(cause40);
        java.awt.event.InputMethodListener inputMethodListener42 = null;
        managementDashboard37.addInputMethodListener(inputMethodListener42);
        java.awt.Point point44 = managementDashboard37.location();
        java.awt.Point point45 = managementDashboard15.getLocation(point44);
        managementDashboard15.enable();
        int int47 = managementDashboard15.getComponentCount();
        managementDashboard15.firePropertyChange("", '#', '#');
        java.awt.event.ContainerListener containerListener52 = null;
        managementDashboard15.addContainerListener(containerListener52);
        java.awt.Color color54 = managementDashboard15.getForeground();
        managementDashboard1.setForeground(color54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(componentArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNull(component31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(point44);
        org.junit.Assert.assertNotNull(point45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(color54);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        float float13 = managementDashboard1.getAlignmentY();
        boolean boolean14 = managementDashboard1.isOptimizedDrawingEnabled();
        float float15 = managementDashboard1.getAlignmentX();
        managementDashboard1.setFocusTraversalKeysEnabled(true);
        String str18 = managementDashboard1.getName();
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.5f + "'", float13 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 0.5f + "'", float15 == 0.5f);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.repaint((int) '#', 9, 1, (-1));
        managementDashboard1.setIgnoreRepaint(true);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.awt.event.ActionListener actionListener24 = null;
        javax.swing.KeyStroke keyStroke26 = null;
        managementDashboard23.registerKeyboardAction(actionListener24, "hi!", keyStroke26, (int) (short) 0);
        java.awt.Font font29 = managementDashboard23.getFont();
        managementDashboard1.setFont(font29);
        java.awt.image.ColorModel colorModel31 = managementDashboard1.getColorModel();
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard1.addPropertyChangeListener("data/managerData.csv", propertyChangeListener33);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertNotNull(colorModel31);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.firePropertyChange("", 'a', '4');
        java.awt.Component component21 = managementDashboard1.findComponentAt((int) '4', (int) (short) 0);
        java.awt.Event event22 = null;
        boolean boolean25 = managementDashboard1.mouseEnter(event22, (-1), 6);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setEnabled(true);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.awt.Insets insets12 = managementDashboard5.getInsets();
        java.util.Locale locale13 = managementDashboard5.getLocale();
        java.awt.Graphics graphics14 = null;
        managementDashboard5.printAll(graphics14);
        String str16 = managementDashboard5.toString();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard5);
        java.awt.event.MouseListener mouseListener18 = null;
        managementDashboard1.addMouseListener(mouseListener18);
        java.awt.event.MouseWheelListener mouseWheelListener20 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener20);
        managementDashboard1.setDoubleBuffered(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(insets12);
        org.junit.Assert.assertNotNull(locale13);
        org.junit.Assert.assertEquals(locale13.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str16, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        boolean boolean6 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        boolean boolean7 = managementDashboard1.requestDefaultFocus();
        managementDashboard1.updateUI();
        managementDashboard1.setVisible(false);
        java.awt.event.HierarchyListener hierarchyListener11 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        java.awt.MenuComponent menuComponent13 = null;
        managementDashboard1.remove(menuComponent13);
        managementDashboard1.grabFocus();
        javax.swing.KeyStroke keyStroke16 = null;
        java.awt.event.ActionListener actionListener17 = managementDashboard1.getActionForKeyStroke(keyStroke16);
        java.awt.Dimension dimension18 = managementDashboard1.getMaximumSize();
        org.junit.Assert.assertNull(actionListener17);
        org.junit.Assert.assertNotNull(dimension18);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.Color color6 = managementDashboard1.getBackground();
        managementDashboard1.repaint();
        boolean boolean8 = managementDashboard1.isOpaque();
        int int9 = managementDashboard1.getHeight();
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        org.junit.Assert.assertNotNull(color6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        javax.swing.event.AncestorListener ancestorListener45 = null;
        managementDashboard32.removeAncestorListener(ancestorListener45);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        managementDashboard1.repaint((long) 32);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard1.keyDown(event11, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Dimension dimension17 = managementDashboard15.getMinimumSize();
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard19.addPropertyChangeListener(propertyChangeListener20);
        java.awt.event.FocusEvent.Cause cause22 = null;
        managementDashboard19.requestFocus(cause22);
        java.awt.event.InputMethodListener inputMethodListener24 = null;
        managementDashboard19.addInputMethodListener(inputMethodListener24);
        java.awt.Point point26 = managementDashboard19.location();
        managementDashboard15.setLocation(point26);
        java.awt.Point point28 = managementDashboard1.getLocation(point26);
        java.util.function.Consumer<String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        boolean boolean31 = managementDashboard30.isVisible();
        java.awt.Image image34 = managementDashboard30.createImage(13, (-1));
        managementDashboard30.resize(0, (int) '4');
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener46 = null;
        managementDashboard39.removeMouseMotionListener(mouseMotionListener46);
        managementDashboard39.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray51 = managementDashboard39.getComponents();
        java.util.function.Consumer<String> strConsumer52 = null;
        ManagementDashboard managementDashboard53 = new ManagementDashboard(strConsumer52);
        java.awt.event.ActionListener actionListener54 = null;
        javax.swing.KeyStroke keyStroke56 = null;
        managementDashboard53.registerKeyboardAction(actionListener54, "hi!", keyStroke56, (int) (short) 0);
        java.awt.Font font59 = managementDashboard53.getFont();
        managementDashboard39.setFont(font59);
        managementDashboard30.setFont(font59);
        java.util.function.Consumer<String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        boolean boolean64 = managementDashboard63.isVisible();
        java.awt.Image image67 = managementDashboard63.createImage(13, (-1));
        managementDashboard63.remove((int) (short) 1);
        java.awt.Dimension dimension70 = managementDashboard63.minimumSize();
        java.awt.Dimension dimension71 = managementDashboard63.getPreferredSize();
        java.awt.Dimension dimension72 = managementDashboard30.getSize(dimension71);
        managementDashboard1.setPreferredSize(dimension72);
        managementDashboard1.setEnabled(false);
        java.awt.Graphics graphics76 = null;
        managementDashboard1.paintAll(graphics76);
        boolean boolean78 = managementDashboard1.isFocusCycleRoot();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(dimension17);
        org.junit.Assert.assertNotNull(point26);
        org.junit.Assert.assertNotNull(point28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(image34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(componentArray51);
        org.junit.Assert.assertNotNull(font59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(image67);
        org.junit.Assert.assertNotNull(dimension70);
        org.junit.Assert.assertNotNull(dimension71);
        org.junit.Assert.assertNotNull(dimension72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        java.awt.event.MouseEvent mouseEvent5 = null;
        java.awt.Point point6 = managementDashboard1.getPopupLocation(mouseEvent5);
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap8 = managementDashboard1.getInputMap((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(point6);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        boolean boolean22 = managementDashboard21.isVisible();
        java.awt.LayoutManager layoutManager23 = managementDashboard21.getLayout();
        java.awt.Graphics graphics24 = null;
        managementDashboard21.print(graphics24);
        String str26 = managementDashboard21.getToolTipText();
        java.util.function.Consumer<String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isVisible();
        java.util.function.Consumer<String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isVisible();
        java.awt.Image image35 = managementDashboard31.createImage(13, (-1));
        managementDashboard31.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.awt.event.FocusEvent.Cause cause42 = null;
        managementDashboard39.requestFocus(cause42);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener44);
        java.awt.Point point46 = managementDashboard39.location();
        java.awt.Component component47 = managementDashboard31.findComponentAt(point46);
        java.awt.Component component48 = managementDashboard28.getComponentAt(point46);
        managementDashboard28.grabFocus();
        java.awt.Rectangle rectangle50 = managementDashboard28.bounds();
        managementDashboard21.repaint(rectangle50);
        managementDashboard1.paintImmediately(rectangle50);
        java.beans.VetoableChangeListener vetoableChangeListener53 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener53);
        java.awt.Event event55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = managementDashboard1.postEvent(event55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(layoutManager23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(image35);
        org.junit.Assert.assertNotNull(point46);
        org.junit.Assert.assertNull(component47);
        org.junit.Assert.assertNull(component48);
        org.junit.Assert.assertNotNull(rectangle50);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        boolean boolean22 = managementDashboard21.isVisible();
        java.awt.LayoutManager layoutManager23 = managementDashboard21.getLayout();
        java.awt.Graphics graphics24 = null;
        managementDashboard21.print(graphics24);
        String str26 = managementDashboard21.getToolTipText();
        java.util.function.Consumer<String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isVisible();
        java.util.function.Consumer<String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isVisible();
        java.awt.Image image35 = managementDashboard31.createImage(13, (-1));
        managementDashboard31.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.awt.event.FocusEvent.Cause cause42 = null;
        managementDashboard39.requestFocus(cause42);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener44);
        java.awt.Point point46 = managementDashboard39.location();
        java.awt.Component component47 = managementDashboard31.findComponentAt(point46);
        java.awt.Component component48 = managementDashboard28.getComponentAt(point46);
        managementDashboard28.grabFocus();
        java.awt.Rectangle rectangle50 = managementDashboard28.bounds();
        managementDashboard21.repaint(rectangle50);
        managementDashboard1.paintImmediately(rectangle50);
        java.beans.VetoableChangeListener vetoableChangeListener53 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener53);
        java.awt.Event event55 = null;
        Object obj56 = null;
        boolean boolean57 = managementDashboard1.action(event55, obj56);
        java.awt.Dimension dimension58 = managementDashboard1.getPreferredSize();
        managementDashboard1.show();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(layoutManager23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(image35);
        org.junit.Assert.assertNotNull(point46);
        org.junit.Assert.assertNull(component47);
        org.junit.Assert.assertNull(component48);
        org.junit.Assert.assertNotNull(rectangle50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(dimension58);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.awt.Insets insets3 = managementDashboard1.getInsets();
        boolean boolean4 = managementDashboard1.getIgnoreRepaint();
        java.awt.event.ActionListener actionListener5 = null;
        javax.swing.KeyStroke keyStroke6 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener5, keyStroke6, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(insets3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        managementDashboard23.show();
        managementDashboard23.show();
        boolean boolean33 = managementDashboard23.getAutoscrolls();
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener34 = null;
        managementDashboard23.addHierarchyBoundsListener(hierarchyBoundsListener34);
        java.awt.event.ContainerListener containerListener36 = null;
        managementDashboard23.addContainerListener(containerListener36);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        ParkingSpace parkingSpace4 = new ParkingSpace(128, "hi!", "PanelUI", "");
        int int5 = parkingSpace4.getIndex();
        String str6 = parkingSpace4.getCurrentUser();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 128 + "'", int5 == 128);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PanelUI" + "'", str6, "PanelUI");
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        managementDashboard23.show();
        java.awt.Insets insets32 = managementDashboard23.getInsets();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(insets32);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        boolean boolean14 = managementDashboard1.isDisplayable();
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray15 = managementDashboard1.getVetoableChangeListeners();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray15);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray15, new java.beans.VetoableChangeListener[] {});
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        int int20 = managementDashboard1.getComponentCount();
        java.awt.event.FocusListener[] focusListenerArray21 = managementDashboard1.getFocusListeners();
        java.awt.Container container22 = managementDashboard1.getFocusCycleRootAncestor();
        java.awt.event.KeyListener keyListener23 = null;
        // The following exception was thrown during execution in test generation
        try {
            container22.removeKeyListener(keyListener23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(focusListenerArray21);
        org.junit.Assert.assertArrayEquals(focusListenerArray21, new java.awt.event.FocusListener[] {});
        org.junit.Assert.assertNull(container22);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        java.awt.Point point16 = managementDashboard1.getMousePosition(true);
        java.awt.Component component17 = managementDashboard1.getNextFocusableComponent();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Rectangle rectangle18 = component17.getBounds();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNull(point16);
        org.junit.Assert.assertNull(component17);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.event.FocusEvent.Cause cause47 = null;
        managementDashboard32.requestFocus(cause47);
        java.awt.Event event49 = null;
        ParkingLot parkingLot51 = new ParkingLot("hi!");
        String str52 = parkingLot51.getLotAvailability();
        boolean boolean53 = managementDashboard32.action(event49, (Object) parkingLot51);
        java.util.function.Consumer<String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        java.beans.PropertyChangeListener propertyChangeListener56 = null;
        managementDashboard55.addPropertyChangeListener(propertyChangeListener56);
        String str58 = managementDashboard55.getName();
        java.awt.event.ComponentListener componentListener59 = null;
        managementDashboard55.removeComponentListener(componentListener59);
        managementDashboard55.move((int) (short) 100, 9);
        int int64 = managementDashboard55.getDebugGraphicsOptions();
        java.awt.Component component67 = managementDashboard55.locate(32, 16);
        java.util.function.Consumer<String> strConsumer68 = null;
        ManagementDashboard managementDashboard69 = new ManagementDashboard(strConsumer68);
        java.beans.PropertyChangeListener propertyChangeListener70 = null;
        managementDashboard69.addPropertyChangeListener(propertyChangeListener70);
        java.awt.event.FocusEvent.Cause cause72 = null;
        managementDashboard69.requestFocus(cause72);
        java.awt.event.InputMethodListener inputMethodListener74 = null;
        managementDashboard69.addInputMethodListener(inputMethodListener74);
        java.awt.Color color76 = managementDashboard69.getBackground();
        managementDashboard69.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener79 = null;
        managementDashboard69.addMouseListener(mouseListener79);
        boolean boolean81 = managementDashboard69.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent82 = null;
        java.awt.Point point83 = managementDashboard69.getPopupLocation(mouseEvent82);
        java.util.function.Consumer<String> strConsumer84 = null;
        ManagementDashboard managementDashboard85 = new ManagementDashboard(strConsumer84);
        managementDashboard85.setEnabled(true);
        java.awt.Point point88 = managementDashboard85.location();
        java.awt.Component component89 = managementDashboard69.findComponentAt(point88);
        java.awt.Point point90 = managementDashboard55.getLocation(point88);
        java.awt.Component component91 = managementDashboard32.findComponentAt(point88);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.event.FocusListener[] focusListenerArray92 = component91.getFocusListeners();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(component67);
        org.junit.Assert.assertNotNull(color76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(point83);
        org.junit.Assert.assertNotNull(point88);
        org.junit.Assert.assertNull(component89);
        org.junit.Assert.assertNotNull(point90);
        org.junit.Assert.assertNull(component91);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        java.lang.String str5 = managementDashboard1.getUIClassID();
        java.awt.event.ComponentListener[] componentListenerArray6 = managementDashboard1.getComponentListeners();
        boolean boolean7 = managementDashboard1.isForegroundSet();
        java.awt.image.ColorModel colorModel8 = managementDashboard1.getColorModel();
        java.awt.event.FocusListener focusListener9 = null;
        managementDashboard1.addFocusListener(focusListener9);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
        org.junit.Assert.assertNotNull(componentListenerArray6);
        org.junit.Assert.assertArrayEquals(componentListenerArray6, new java.awt.event.ComponentListener[] {});
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(colorModel8);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<java.lang.String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<java.lang.String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.awt.Cursor cursor85 = managementDashboard72.getCursor();
        boolean boolean86 = managementDashboard72.isFontSet();
        java.util.function.Consumer<java.lang.String> strConsumer87 = null;
        ManagementDashboard managementDashboard88 = new ManagementDashboard(strConsumer87);
        boolean boolean89 = managementDashboard88.isVisible();
        java.awt.Image image92 = managementDashboard88.createImage(13, (-1));
        boolean boolean93 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard88);
        managementDashboard72.setNextFocusableComponent((java.awt.Component) managementDashboard88);
        javax.swing.ActionMap actionMap95 = managementDashboard72.getActionMap();
        int int98 = managementDashboard72.getBaseline((int) '4', 11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertNotNull(cursor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(image92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(actionMap95);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        managementDashboard1.setRequestFocusEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        managementDashboard1.move((-1), (int) '#');
        int int14 = managementDashboard1.getBaseline((int) 'a', 128);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        boolean boolean17 = managementDashboard16.isVisible();
        java.awt.Image image20 = managementDashboard16.createImage(13, (-1));
        managementDashboard16.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        java.beans.PropertyChangeListener propertyChangeListener25 = null;
        managementDashboard24.addPropertyChangeListener(propertyChangeListener25);
        java.awt.event.FocusEvent.Cause cause27 = null;
        managementDashboard24.requestFocus(cause27);
        java.awt.event.InputMethodListener inputMethodListener29 = null;
        managementDashboard24.addInputMethodListener(inputMethodListener29);
        java.awt.Point point31 = managementDashboard24.location();
        java.awt.Component component32 = managementDashboard16.findComponentAt(point31);
        java.util.function.Consumer<java.lang.String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        java.awt.image.ImageProducer imageProducer35 = null;
        java.awt.Image image36 = managementDashboard34.createImage(imageProducer35);
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        java.beans.PropertyChangeListener propertyChangeListener39 = null;
        managementDashboard38.addPropertyChangeListener(propertyChangeListener39);
        java.awt.event.FocusEvent.Cause cause41 = null;
        managementDashboard38.requestFocus(cause41);
        java.awt.event.InputMethodListener inputMethodListener43 = null;
        managementDashboard38.addInputMethodListener(inputMethodListener43);
        int int45 = managementDashboard16.checkImage(image36, (java.awt.image.ImageObserver) managementDashboard38);
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.util.Locale locale50 = managementDashboard47.getLocale();
        float float51 = managementDashboard47.getAlignmentY();
        java.awt.image.VolatileImage volatileImage54 = managementDashboard47.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj55 = managementDashboard47.getTreeLock();
        java.awt.FocusTraversalPolicy focusTraversalPolicy56 = managementDashboard47.getFocusTraversalPolicy();
        java.awt.Event event57 = null;
        boolean boolean59 = managementDashboard47.keyUp(event57, 0);
        int int60 = managementDashboard1.checkImage(image36, (java.awt.image.ImageObserver) managementDashboard47);
        java.awt.event.MouseListener mouseListener61 = null;
        managementDashboard1.addMouseListener(mouseListener61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(image20);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertNull(component32);
        org.junit.Assert.assertNotNull(image36);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(locale50);
        org.junit.Assert.assertEquals(locale50.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float51 + "' != '" + 0.5f + "'", float51 == 0.5f);
        org.junit.Assert.assertNull(volatileImage54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNull(focusTraversalPolicy56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        java.awt.event.MouseEvent mouseEvent5 = null;
        java.awt.Point point6 = managementDashboard1.getPopupLocation(mouseEvent5);
        java.awt.Component component7 = managementDashboard1.getNextFocusableComponent();
        boolean boolean9 = managementDashboard1.requestFocus(false);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(point6);
        org.junit.Assert.assertNull(component7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        managementDashboard32.setVisible(true);
        java.awt.event.FocusEvent.Cause cause47 = null;
        managementDashboard32.requestFocus(cause47);
        java.awt.Event event49 = null;
        ParkingLot parkingLot51 = new ParkingLot("hi!");
        java.lang.String str52 = parkingLot51.getLotAvailability();
        boolean boolean53 = managementDashboard32.action(event49, (java.lang.Object) parkingLot51);
        java.lang.String str54 = parkingLot51.getLotAvailability();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        java.awt.MenuComponent menuComponent13 = null;
        managementDashboard1.remove(menuComponent13);
        java.awt.Event event15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = managementDashboard1.postEvent(event15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        managementDashboard1.repaint((long) 32);
        managementDashboard1.firePropertyChange("data/managerData.csv", '#', ' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        int int8 = managementDashboard1.getHeight();
        managementDashboard1.setName("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.enable();
        managementDashboard1.validate();
        managementDashboard1.setFocusable(true);
        java.awt.Rectangle rectangle8 = managementDashboard1.getVisibleRect();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(rectangle8);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        ParkingLot parkingLot1 = new ParkingLot("SUPERMAN");
        boolean boolean2 = parkingLot1.getEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        managementDashboard1.disable();
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        boolean boolean17 = managementDashboard16.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        boolean boolean20 = managementDashboard19.isVisible();
        java.awt.Image image23 = managementDashboard19.createImage(13, (-1));
        managementDashboard19.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        java.beans.PropertyChangeListener propertyChangeListener28 = null;
        managementDashboard27.addPropertyChangeListener(propertyChangeListener28);
        java.awt.event.FocusEvent.Cause cause30 = null;
        managementDashboard27.requestFocus(cause30);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard27.addInputMethodListener(inputMethodListener32);
        java.awt.Point point34 = managementDashboard27.location();
        java.awt.Component component35 = managementDashboard19.findComponentAt(point34);
        java.awt.Component component36 = managementDashboard16.getComponentAt(point34);
        managementDashboard16.grabFocus();
        java.awt.Rectangle rectangle38 = managementDashboard16.bounds();
        java.awt.Rectangle rectangle39 = managementDashboard1.getBounds(rectangle38);
        boolean boolean40 = managementDashboard1.isDoubleBuffered();
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(image23);
        org.junit.Assert.assertNotNull(point34);
        org.junit.Assert.assertNull(component35);
        org.junit.Assert.assertNull(component36);
        org.junit.Assert.assertNotNull(rectangle38);
        org.junit.Assert.assertNotNull(rectangle39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        managementDashboard1.resetKeyboardActions();
        managementDashboard1.layout();
        java.awt.event.MouseEvent mouseEvent5 = null;
        java.awt.Point point6 = managementDashboard1.getPopupLocation(mouseEvent5);
        boolean boolean7 = managementDashboard1.isPreferredSizeSet();
        boolean boolean9 = managementDashboard1.areFocusTraversalKeysSet(1);
        boolean boolean10 = managementDashboard1.isFocusTraversalPolicyProvider();
        java.awt.event.InputMethodListener inputMethodListener11 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener11);
        boolean boolean13 = managementDashboard1.isFocusCycleRoot();
        boolean boolean14 = managementDashboard1.isDoubleBuffered();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(point6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj9 = managementDashboard1.getTreeLock();
        managementDashboard1.setFocusTraversalKeysEnabled(false);
        managementDashboard1.doLayout();
        java.awt.Event event13 = null;
        boolean boolean16 = managementDashboard1.mouseDown(event13, 10, 5);
        boolean boolean17 = managementDashboard1.isValidateRoot();
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        javax.swing.plaf.PanelUI panelUI9 = managementDashboard1.getUI();
        javax.swing.InputVerifier inputVerifier10 = managementDashboard1.getInputVerifier();
        javax.swing.InputVerifier inputVerifier11 = managementDashboard1.getInputVerifier();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isVisible();
        java.awt.Image image17 = managementDashboard13.createImage(13, (-1));
        managementDashboard13.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        java.beans.PropertyChangeListener propertyChangeListener22 = null;
        managementDashboard21.addPropertyChangeListener(propertyChangeListener22);
        java.awt.event.FocusEvent.Cause cause24 = null;
        managementDashboard21.requestFocus(cause24);
        java.awt.event.InputMethodListener inputMethodListener26 = null;
        managementDashboard21.addInputMethodListener(inputMethodListener26);
        java.awt.Point point28 = managementDashboard21.location();
        java.awt.Component component29 = managementDashboard13.findComponentAt(point28);
        boolean boolean30 = managementDashboard13.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener32 = null;
        managementDashboard13.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener32);
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.beans.PropertyChangeListener propertyChangeListener36 = null;
        managementDashboard35.addPropertyChangeListener(propertyChangeListener36);
        java.awt.event.FocusEvent.Cause cause38 = null;
        managementDashboard35.requestFocus(cause38);
        java.awt.event.InputMethodListener inputMethodListener40 = null;
        managementDashboard35.addInputMethodListener(inputMethodListener40);
        java.awt.Point point42 = managementDashboard35.location();
        java.awt.Point point43 = managementDashboard13.getLocation(point42);
        boolean boolean44 = managementDashboard1.contains(point43);
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        boolean boolean48 = managementDashboard47.isVisible();
        java.awt.Image image51 = managementDashboard47.createImage(13, (-1));
        java.awt.Event event52 = null;
        boolean boolean55 = managementDashboard47.mouseMove(event52, (-1), (int) (byte) 0);
        boolean boolean56 = managementDashboard47.isMinimumSizeSet();
        java.awt.Graphics graphics57 = null;
        managementDashboard47.print(graphics57);
        java.util.function.Consumer<java.lang.String> strConsumer59 = null;
        ManagementDashboard managementDashboard60 = new ManagementDashboard(strConsumer59);
        boolean boolean61 = managementDashboard60.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        boolean boolean64 = managementDashboard63.isVisible();
        java.awt.Image image67 = managementDashboard63.createImage(13, (-1));
        managementDashboard63.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer70 = null;
        ManagementDashboard managementDashboard71 = new ManagementDashboard(strConsumer70);
        java.beans.PropertyChangeListener propertyChangeListener72 = null;
        managementDashboard71.addPropertyChangeListener(propertyChangeListener72);
        java.awt.event.FocusEvent.Cause cause74 = null;
        managementDashboard71.requestFocus(cause74);
        java.awt.event.InputMethodListener inputMethodListener76 = null;
        managementDashboard71.addInputMethodListener(inputMethodListener76);
        java.awt.Point point78 = managementDashboard71.location();
        java.awt.Component component79 = managementDashboard63.findComponentAt(point78);
        java.awt.Component component80 = managementDashboard60.getComponentAt(point78);
        managementDashboard60.grabFocus();
        java.awt.Rectangle rectangle82 = managementDashboard60.bounds();
        managementDashboard47.paintImmediately(rectangle82);
        managementDashboard47.repaint(3, (int) (byte) -1, (int) (short) 100, (int) (short) 10);
        java.awt.event.MouseListener[] mouseListenerArray89 = managementDashboard47.getMouseListeners();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component90 = managementDashboard1.add("", (java.awt.Component) managementDashboard47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: ");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertNotNull(panelUI9);
        org.junit.Assert.assertNull(inputVerifier10);
        org.junit.Assert.assertNull(inputVerifier11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(image17);
        org.junit.Assert.assertNotNull(point28);
        org.junit.Assert.assertNull(component29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(point42);
        org.junit.Assert.assertNotNull(point43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(image51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(image67);
        org.junit.Assert.assertNotNull(point78);
        org.junit.Assert.assertNull(component79);
        org.junit.Assert.assertNull(component80);
        org.junit.Assert.assertNotNull(rectangle82);
        org.junit.Assert.assertNotNull(mouseListenerArray89);
        org.junit.Assert.assertArrayEquals(mouseListenerArray89, new java.awt.event.MouseListener[] {});
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.awt.Event event38 = null;
        boolean boolean40 = managementDashboard23.keyUp(event38, 0);
        java.util.function.Consumer<java.lang.String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        java.beans.PropertyChangeListener propertyChangeListener43 = null;
        managementDashboard42.addPropertyChangeListener(propertyChangeListener43);
        managementDashboard42.enableInputMethods(true);
        java.awt.Dimension dimension47 = managementDashboard42.getMinimumSize();
        managementDashboard42.transferFocusUpCycle();
        java.awt.ComponentOrientation componentOrientation49 = managementDashboard42.getComponentOrientation();
        managementDashboard23.applyComponentOrientation(componentOrientation49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dimension47);
        org.junit.Assert.assertNotNull(componentOrientation49);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        boolean boolean6 = managementDashboard1.contains((int) (byte) -1, (int) '#');
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        javax.swing.JToolTip jToolTip16 = managementDashboard8.createToolTip();
        java.lang.Object obj17 = null;
        managementDashboard1.putClientProperty((java.lang.Object) jToolTip16, obj17);
        java.awt.event.MouseMotionListener[] mouseMotionListenerArray19 = jToolTip16.getMouseMotionListeners();
        jToolTip16.setSize(128, 1);
        java.util.function.Consumer<java.lang.String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        java.beans.PropertyChangeListener propertyChangeListener25 = null;
        managementDashboard24.addPropertyChangeListener(propertyChangeListener25);
        java.awt.event.FocusEvent.Cause cause27 = null;
        managementDashboard24.requestFocus(cause27);
        java.awt.event.InputMethodListener inputMethodListener29 = null;
        managementDashboard24.addInputMethodListener(inputMethodListener29);
        managementDashboard24.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        boolean boolean36 = managementDashboard24.isValid();
        managementDashboard24.reshape(8, (int) ' ', (int) (short) 10, 1);
        java.awt.Font font42 = managementDashboard24.getFont();
        jToolTip16.setFont(font42);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
        org.junit.Assert.assertNotNull(jToolTip16);
        org.junit.Assert.assertNotNull(mouseMotionListenerArray19);
        org.junit.Assert.assertArrayEquals(mouseMotionListenerArray19, new java.awt.event.MouseMotionListener[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(font42);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.util.function.Consumer<java.lang.String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        boolean boolean8 = managementDashboard7.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard18.addPropertyChangeListener(propertyChangeListener19);
        java.awt.event.FocusEvent.Cause cause21 = null;
        managementDashboard18.requestFocus(cause21);
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard18.addInputMethodListener(inputMethodListener23);
        java.awt.Point point25 = managementDashboard18.location();
        java.awt.Component component26 = managementDashboard10.findComponentAt(point25);
        java.awt.Component component27 = managementDashboard7.getComponentAt(point25);
        managementDashboard7.grabFocus();
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        boolean boolean31 = managementDashboard30.isVisible();
        java.awt.Image image34 = managementDashboard30.createImage(13, (-1));
        managementDashboard30.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        java.beans.PropertyChangeListener propertyChangeListener39 = null;
        managementDashboard38.addPropertyChangeListener(propertyChangeListener39);
        java.awt.event.FocusEvent.Cause cause41 = null;
        managementDashboard38.requestFocus(cause41);
        java.awt.event.InputMethodListener inputMethodListener43 = null;
        managementDashboard38.addInputMethodListener(inputMethodListener43);
        java.awt.Point point45 = managementDashboard38.location();
        java.awt.Component component46 = managementDashboard30.findComponentAt(point45);
        java.util.function.Consumer<java.lang.String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        java.awt.image.ImageProducer imageProducer49 = null;
        java.awt.Image image50 = managementDashboard48.createImage(imageProducer49);
        java.util.function.Consumer<java.lang.String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard52.addPropertyChangeListener(propertyChangeListener53);
        java.awt.event.FocusEvent.Cause cause55 = null;
        managementDashboard52.requestFocus(cause55);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard52.addInputMethodListener(inputMethodListener57);
        int int59 = managementDashboard30.checkImage(image50, (java.awt.image.ImageObserver) managementDashboard52);
        java.util.function.Consumer<java.lang.String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.util.Locale locale64 = managementDashboard61.getLocale();
        float float65 = managementDashboard61.getAlignmentY();
        java.awt.Component component66 = managementDashboard52.add((java.awt.Component) managementDashboard61);
        java.util.function.Consumer<java.lang.String> strConsumer67 = null;
        ManagementDashboard managementDashboard68 = new ManagementDashboard(strConsumer67);
        java.beans.PropertyChangeListener propertyChangeListener69 = null;
        managementDashboard68.addPropertyChangeListener(propertyChangeListener69);
        java.util.Locale locale71 = managementDashboard68.getLocale();
        managementDashboard61.setLocale(locale71);
        managementDashboard61.addNotify();
        java.awt.Dimension dimension74 = managementDashboard61.getMaximumSize();
        managementDashboard7.setMaximumSize(dimension74);
        managementDashboard1.setPreferredSize(dimension74);
        java.util.function.Consumer<java.lang.String> strConsumer77 = null;
        ManagementDashboard managementDashboard78 = new ManagementDashboard(strConsumer77);
        boolean boolean79 = managementDashboard78.isVisible();
        java.awt.Dimension dimension80 = managementDashboard78.getMinimumSize();
        java.awt.image.ColorModel colorModel81 = managementDashboard78.getColorModel();
        java.awt.ComponentOrientation componentOrientation82 = managementDashboard78.getComponentOrientation();
        managementDashboard1.applyComponentOrientation(componentOrientation82);
        java.awt.Event event84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = managementDashboard1.postEvent(event84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(point25);
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNull(component27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(image34);
        org.junit.Assert.assertNotNull(point45);
        org.junit.Assert.assertNull(component46);
        org.junit.Assert.assertNotNull(image50);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(locale64);
        org.junit.Assert.assertEquals(locale64.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 0.5f + "'", float65 == 0.5f);
        org.junit.Assert.assertNotNull(component66);
        org.junit.Assert.assertNotNull(locale71);
        org.junit.Assert.assertEquals(locale71.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(dimension80);
        org.junit.Assert.assertNotNull(colorModel81);
        org.junit.Assert.assertNotNull(componentOrientation82);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Image image10 = managementDashboard1.createImage((int) 'a', (int) (byte) 1);
        java.util.Locale locale11 = managementDashboard1.getLocale();
        javax.swing.JComponent.setDefaultLocale(locale11);
        org.junit.Assert.assertNull(image10);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_CA");
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.util.Locale locale42 = managementDashboard39.getLocale();
        managementDashboard32.setLocale(locale42);
        managementDashboard32.addNotify();
        java.awt.Dimension dimension45 = managementDashboard32.getMaximumSize();
        boolean boolean46 = managementDashboard32.isFocusTraversalPolicySet();
        boolean boolean47 = managementDashboard32.hasFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertNotNull(locale42);
        org.junit.Assert.assertEquals(locale42.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        javax.swing.InputVerifier inputVerifier38 = null;
        managementDashboard32.setInputVerifier(inputVerifier38);
        managementDashboard32.requestFocus();
        managementDashboard32.updateUI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        // The following exception was thrown during execution in test generation
        try {
            paymentProcessor1.processPayment((double) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"PaymentStrategy.pay(double)\" because \"this.paymentStrategy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        java.awt.Graphics graphics10 = null;
        managementDashboard1.printAll(graphics10);
        java.lang.String str12 = managementDashboard1.toString();
        boolean boolean13 = managementDashboard1.isOptimizedDrawingEnabled();
        managementDashboard1.setSize(10, 100);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard18.addPropertyChangeListener(propertyChangeListener19);
        java.awt.image.ColorModel colorModel21 = managementDashboard18.getColorModel();
        java.awt.Insets insets22 = managementDashboard18.getInsets();
        java.awt.Insets insets23 = managementDashboard1.getInsets(insets22);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = managementDashboard1.areFocusTraversalKeysSet((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str12, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(colorModel21);
        org.junit.Assert.assertNotNull(insets22);
        org.junit.Assert.assertNotNull(insets23);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        java.awt.MenuComponent menuComponent13 = null;
        managementDashboard1.remove(menuComponent13);
        managementDashboard1.grabFocus();
        javax.swing.KeyStroke keyStroke16 = null;
        java.awt.event.ActionListener actionListener17 = managementDashboard1.getActionForKeyStroke(keyStroke16);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard1.keyUp(event20, (int) (short) -1);
        org.junit.Assert.assertNull(actionListener17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.Dimension dimension8 = managementDashboard1.size();
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        int int10 = managementDashboard1.getWidth();
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Image image19 = managementDashboard15.createImage(13, (-1));
        managementDashboard15.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Component component31 = managementDashboard15.findComponentAt(point30);
        java.awt.Component component32 = managementDashboard12.getComponentAt(point30);
        managementDashboard12.grabFocus();
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        boolean boolean36 = managementDashboard35.isVisible();
        java.awt.Image image39 = managementDashboard35.createImage(13, (-1));
        managementDashboard35.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer42 = null;
        ManagementDashboard managementDashboard43 = new ManagementDashboard(strConsumer42);
        java.beans.PropertyChangeListener propertyChangeListener44 = null;
        managementDashboard43.addPropertyChangeListener(propertyChangeListener44);
        java.awt.event.FocusEvent.Cause cause46 = null;
        managementDashboard43.requestFocus(cause46);
        java.awt.event.InputMethodListener inputMethodListener48 = null;
        managementDashboard43.addInputMethodListener(inputMethodListener48);
        java.awt.Point point50 = managementDashboard43.location();
        java.awt.Component component51 = managementDashboard35.findComponentAt(point50);
        java.util.function.Consumer<java.lang.String> strConsumer52 = null;
        ManagementDashboard managementDashboard53 = new ManagementDashboard(strConsumer52);
        java.awt.image.ImageProducer imageProducer54 = null;
        java.awt.Image image55 = managementDashboard53.createImage(imageProducer54);
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.beans.PropertyChangeListener propertyChangeListener58 = null;
        managementDashboard57.addPropertyChangeListener(propertyChangeListener58);
        java.awt.event.FocusEvent.Cause cause60 = null;
        managementDashboard57.requestFocus(cause60);
        java.awt.event.InputMethodListener inputMethodListener62 = null;
        managementDashboard57.addInputMethodListener(inputMethodListener62);
        int int64 = managementDashboard35.checkImage(image55, (java.awt.image.ImageObserver) managementDashboard57);
        java.util.function.Consumer<java.lang.String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        java.beans.PropertyChangeListener propertyChangeListener67 = null;
        managementDashboard66.addPropertyChangeListener(propertyChangeListener67);
        java.util.Locale locale69 = managementDashboard66.getLocale();
        float float70 = managementDashboard66.getAlignmentY();
        java.awt.Component component71 = managementDashboard57.add((java.awt.Component) managementDashboard66);
        java.util.function.Consumer<java.lang.String> strConsumer72 = null;
        ManagementDashboard managementDashboard73 = new ManagementDashboard(strConsumer72);
        java.beans.PropertyChangeListener propertyChangeListener74 = null;
        managementDashboard73.addPropertyChangeListener(propertyChangeListener74);
        java.util.Locale locale76 = managementDashboard73.getLocale();
        managementDashboard66.setLocale(locale76);
        managementDashboard66.addNotify();
        java.awt.Dimension dimension79 = managementDashboard66.getMaximumSize();
        managementDashboard12.setMaximumSize(dimension79);
        managementDashboard1.setPreferredSize(dimension79);
        boolean boolean82 = managementDashboard1.isManagingFocus();
        java.awt.im.InputMethodRequests inputMethodRequests83 = managementDashboard1.getInputMethodRequests();
        java.beans.PropertyChangeListener[] propertyChangeListenerArray85 = managementDashboard1.getPropertyChangeListeners("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(image19);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNull(component31);
        org.junit.Assert.assertNull(component32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(image39);
        org.junit.Assert.assertNotNull(point50);
        org.junit.Assert.assertNull(component51);
        org.junit.Assert.assertNotNull(image55);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(locale69);
        org.junit.Assert.assertEquals(locale69.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 0.5f + "'", float70 == 0.5f);
        org.junit.Assert.assertNotNull(component71);
        org.junit.Assert.assertNotNull(locale76);
        org.junit.Assert.assertEquals(locale76.toString(), "en_CA");
        org.junit.Assert.assertNotNull(dimension79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(inputMethodRequests83);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray85);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray85, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        managementDashboard1.repaint((long) 32);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard1.keyDown(event11, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        boolean boolean16 = managementDashboard15.isVisible();
        java.awt.Dimension dimension17 = managementDashboard15.getMinimumSize();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard19.addPropertyChangeListener(propertyChangeListener20);
        java.awt.event.FocusEvent.Cause cause22 = null;
        managementDashboard19.requestFocus(cause22);
        java.awt.event.InputMethodListener inputMethodListener24 = null;
        managementDashboard19.addInputMethodListener(inputMethodListener24);
        java.awt.Point point26 = managementDashboard19.location();
        managementDashboard15.setLocation(point26);
        java.awt.Point point28 = managementDashboard1.getLocation(point26);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        java.beans.PropertyChangeListener propertyChangeListener31 = null;
        managementDashboard30.addPropertyChangeListener(propertyChangeListener31);
        java.util.Locale locale33 = managementDashboard30.getLocale();
        float float34 = managementDashboard30.getAlignmentY();
        java.awt.image.VolatileImage volatileImage37 = managementDashboard30.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj38 = managementDashboard30.getTreeLock();
        managementDashboard30.setVerifyInputWhenFocusTarget(true);
        managementDashboard30.requestFocus();
        managementDashboard30.setFocusTraversalKeysEnabled(false);
        java.awt.LayoutManager layoutManager44 = managementDashboard30.getLayout();
        managementDashboard1.setLayout(layoutManager44);
        java.lang.Class<?> wildcardClass46 = managementDashboard1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(dimension17);
        org.junit.Assert.assertNotNull(point26);
        org.junit.Assert.assertNotNull(point28);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 0.5f + "'", float34 == 0.5f);
        org.junit.Assert.assertNull(volatileImage37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(layoutManager44);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", '#', '#');
        java.awt.event.MouseMotionListener mouseMotionListener12 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener12);
        java.awt.Graphics graphics14 = null;
        managementDashboard1.print(graphics14);
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        boolean boolean18 = managementDashboard17.isVisible();
        java.awt.Image image21 = managementDashboard17.createImage(13, (-1));
        managementDashboard17.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        java.beans.PropertyChangeListener propertyChangeListener26 = null;
        managementDashboard25.addPropertyChangeListener(propertyChangeListener26);
        java.awt.event.FocusEvent.Cause cause28 = null;
        managementDashboard25.requestFocus(cause28);
        java.awt.event.InputMethodListener inputMethodListener30 = null;
        managementDashboard25.addInputMethodListener(inputMethodListener30);
        java.awt.Point point32 = managementDashboard25.location();
        java.awt.Component component33 = managementDashboard17.findComponentAt(point32);
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.awt.image.ImageProducer imageProducer36 = null;
        java.awt.Image image37 = managementDashboard35.createImage(imageProducer36);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.awt.event.FocusEvent.Cause cause42 = null;
        managementDashboard39.requestFocus(cause42);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener44);
        int int46 = managementDashboard17.checkImage(image37, (java.awt.image.ImageObserver) managementDashboard39);
        java.util.function.Consumer<java.lang.String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        java.beans.PropertyChangeListener propertyChangeListener49 = null;
        managementDashboard48.addPropertyChangeListener(propertyChangeListener49);
        java.util.Locale locale51 = managementDashboard48.getLocale();
        float float52 = managementDashboard48.getAlignmentY();
        java.awt.Component component53 = managementDashboard39.add((java.awt.Component) managementDashboard48);
        javax.swing.InputVerifier inputVerifier54 = null;
        managementDashboard48.setInputVerifier(inputVerifier54);
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        boolean boolean58 = managementDashboard57.isVisible();
        java.awt.Image image61 = managementDashboard57.createImage(13, (-1));
        managementDashboard57.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer64 = null;
        ManagementDashboard managementDashboard65 = new ManagementDashboard(strConsumer64);
        java.beans.PropertyChangeListener propertyChangeListener66 = null;
        managementDashboard65.addPropertyChangeListener(propertyChangeListener66);
        java.awt.event.FocusEvent.Cause cause68 = null;
        managementDashboard65.requestFocus(cause68);
        java.awt.event.InputMethodListener inputMethodListener70 = null;
        managementDashboard65.addInputMethodListener(inputMethodListener70);
        java.awt.Point point72 = managementDashboard65.location();
        java.awt.Component component73 = managementDashboard57.findComponentAt(point72);
        boolean boolean74 = managementDashboard57.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener76 = null;
        managementDashboard57.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener76);
        java.util.function.Consumer<java.lang.String> strConsumer78 = null;
        ManagementDashboard managementDashboard79 = new ManagementDashboard(strConsumer78);
        java.beans.PropertyChangeListener propertyChangeListener80 = null;
        managementDashboard79.addPropertyChangeListener(propertyChangeListener80);
        java.awt.event.FocusEvent.Cause cause82 = null;
        managementDashboard79.requestFocus(cause82);
        java.awt.event.InputMethodListener inputMethodListener84 = null;
        managementDashboard79.addInputMethodListener(inputMethodListener84);
        java.awt.Point point86 = managementDashboard79.location();
        java.awt.Point point87 = managementDashboard57.getLocation(point86);
        boolean boolean88 = managementDashboard48.contains(point86);
        java.awt.Component component89 = managementDashboard1.getComponentAt(point86);
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(image21);
        org.junit.Assert.assertNotNull(point32);
        org.junit.Assert.assertNull(component33);
        org.junit.Assert.assertNotNull(image37);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(locale51);
        org.junit.Assert.assertEquals(locale51.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 0.5f + "'", float52 == 0.5f);
        org.junit.Assert.assertNotNull(component53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(image61);
        org.junit.Assert.assertNotNull(point72);
        org.junit.Assert.assertNull(component73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(point86);
        org.junit.Assert.assertNotNull(point87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(component89);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        CreditCardPayment creditCardPayment0 = new CreditCardPayment();
        creditCardPayment0.pay((double) (byte) 0);
        creditCardPayment0.pay((double) (byte) 10);
        creditCardPayment0.pay(100.0d);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        java.awt.Graphics graphics4 = null;
        managementDashboard1.print(graphics4);
        java.lang.String str6 = managementDashboard1.getToolTipText();
        java.awt.Container container7 = managementDashboard1.getTopLevelAncestor();
        managementDashboard1.setLocation((int) (short) 100, (int) (byte) 100);
        javax.swing.event.AncestorListener ancestorListener11 = null;
        managementDashboard1.removeAncestorListener(ancestorListener11);
        managementDashboard1.setDoubleBuffered(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(container7);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj9 = managementDashboard1.getTreeLock();
        java.awt.FocusTraversalPolicy focusTraversalPolicy10 = managementDashboard1.getFocusTraversalPolicy();
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard1.keyUp(event11, 0);
        managementDashboard1.show(true);
        java.awt.event.MouseEvent mouseEvent16 = null;
        java.awt.Point point17 = managementDashboard1.getToolTipLocation(mouseEvent16);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(focusTraversalPolicy10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(point17);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        java.awt.Container container5 = managementDashboard1.getFocusCycleRootAncestor();
        float float6 = managementDashboard1.getAlignmentX();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component8 = managementDashboard1.getComponent((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertNull(container5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.5f + "'", float6 == 0.5f);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        java.awt.event.InputMethodListener inputMethodListener2 = null;
        managementAccountsView1.removeInputMethodListener(inputMethodListener2);
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.lang.String str8 = managementDashboard5.getName();
        boolean boolean9 = managementDashboard5.isPaintingTile();
        managementDashboard5.requestFocus();
        java.awt.Dimension dimension11 = managementDashboard5.getSize();
        managementAccountsView1.setMaximumSize(dimension11);
        java.awt.Container container13 = managementAccountsView1.getTopLevelAncestor();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNull(container13);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        javax.swing.JComponent.setDefaultLocale(locale4);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.firePropertyChange("", 'a', '4');
        managementDashboard1.show();
        managementDashboard1.requestFocus();
        managementDashboard1.nextFocus();
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        int int24 = managementDashboard23.countComponents();
        managementDashboard23.resetKeyboardActions();
        managementDashboard23.layout();
        java.awt.event.MouseEvent mouseEvent27 = null;
        java.awt.Point point28 = managementDashboard23.getPopupLocation(mouseEvent27);
        boolean boolean29 = managementDashboard23.isPreferredSizeSet();
        boolean boolean31 = managementDashboard23.areFocusTraversalKeysSet(1);
        boolean boolean32 = managementDashboard23.isFocusTraversalPolicyProvider();
        java.util.Locale locale33 = managementDashboard23.getLocale();
        managementDashboard1.setLocale(locale33);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNull(point28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(locale33);
        org.junit.Assert.assertEquals(locale33.toString(), "en_CA");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.awt.event.MouseWheelListener mouseWheelListener4 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener4);
        boolean boolean8 = managementDashboard1.contains(13, (-1));
        java.awt.event.ComponentListener[] componentListenerArray9 = managementDashboard1.getComponentListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(componentListenerArray9);
        org.junit.Assert.assertArrayEquals(componentListenerArray9, new java.awt.event.ComponentListener[] {});
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        managementDashboard1.hide();
        boolean boolean6 = managementDashboard1.isValid();
        boolean boolean9 = managementDashboard1.contains((int) 'a', 7);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        int int20 = managementDashboard19.countComponents();
        managementDashboard19.resetKeyboardActions();
        managementDashboard19.layout();
        java.awt.event.MouseEvent mouseEvent23 = null;
        java.awt.Point point24 = managementDashboard19.getPopupLocation(mouseEvent23);
        boolean boolean25 = managementDashboard1.isAncestorOf((java.awt.Component) managementDashboard19);
        java.awt.dnd.DropTarget dropTarget26 = managementDashboard1.getDropTarget();
        int int27 = managementDashboard1.getY();
        managementDashboard1.show();
        javax.swing.JPopupMenu jPopupMenu29 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu29);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(point24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(dropTarget26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.resize(0, (int) '4');
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener17 = null;
        managementDashboard10.removeMouseMotionListener(mouseMotionListener17);
        managementDashboard10.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray22 = managementDashboard10.getComponents();
        java.util.function.Consumer<java.lang.String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        java.awt.event.ActionListener actionListener25 = null;
        javax.swing.KeyStroke keyStroke27 = null;
        managementDashboard24.registerKeyboardAction(actionListener25, "hi!", keyStroke27, (int) (short) 0);
        java.awt.Font font30 = managementDashboard24.getFont();
        managementDashboard10.setFont(font30);
        managementDashboard1.setFont(font30);
        java.util.function.Consumer<java.lang.String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        boolean boolean35 = managementDashboard34.isVisible();
        java.awt.Image image38 = managementDashboard34.createImage(13, (-1));
        managementDashboard34.remove((int) (short) 1);
        java.awt.Dimension dimension41 = managementDashboard34.minimumSize();
        java.awt.Dimension dimension42 = managementDashboard34.getPreferredSize();
        java.awt.Dimension dimension43 = managementDashboard1.getSize(dimension42);
        java.util.function.Consumer<java.lang.String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        boolean boolean46 = managementDashboard45.isVisible();
        java.awt.Image image49 = managementDashboard45.createImage(13, (-1));
        managementDashboard45.remove((int) (short) 1);
        java.awt.Dimension dimension52 = managementDashboard45.minimumSize();
        java.awt.Dimension dimension53 = managementDashboard45.getPreferredSize();
        managementDashboard1.setMaximumSize(dimension53);
        javax.swing.KeyStroke keyStroke55 = null;
        int int56 = managementDashboard1.getConditionForKeyStroke(keyStroke55);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(componentArray22);
        org.junit.Assert.assertNotNull(font30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(image38);
        org.junit.Assert.assertNotNull(dimension41);
        org.junit.Assert.assertNotNull(dimension42);
        org.junit.Assert.assertNotNull(dimension43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(image49);
        org.junit.Assert.assertNotNull(dimension52);
        org.junit.Assert.assertNotNull(dimension53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        managementDashboard1.move((-1), (int) '#');
        int int14 = managementDashboard1.getBaseline((int) 'a', 128);
        java.awt.event.KeyListener keyListener15 = null;
        managementDashboard1.removeKeyListener(keyListener15);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        java.awt.Event event22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = managementDashboard1.handleEvent(event22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.im.InputMethodRequests inputMethodRequests8 = managementDashboard1.getInputMethodRequests();
        boolean boolean9 = managementDashboard1.hasFocus();
        java.awt.Dimension dimension10 = managementDashboard1.getMinimumSize();
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isVisible();
        java.awt.Image image16 = managementDashboard12.createImage(13, (-1));
        managementDashboard12.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener19 = null;
        managementDashboard12.removeMouseMotionListener(mouseMotionListener19);
        managementDashboard12.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray24 = managementDashboard12.getComponents();
        java.lang.Object obj25 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard12);
        managementDashboard1.transferFocusUpCycle();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNull(inputMethodRequests8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(dimension10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(image16);
        org.junit.Assert.assertNotNull(componentArray24);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        boolean boolean6 = managementDashboard1.contains((int) (byte) -1, (int) '#');
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        javax.swing.JToolTip jToolTip16 = managementDashboard8.createToolTip();
        java.lang.Object obj17 = null;
        managementDashboard1.putClientProperty((java.lang.Object) jToolTip16, obj17);
        java.awt.event.MouseMotionListener[] mouseMotionListenerArray19 = jToolTip16.getMouseMotionListeners();
        jToolTip16.setSize(128, 1);
        java.awt.event.FocusEvent.Cause cause23 = null;
        boolean boolean24 = jToolTip16.requestFocusInWindow(cause23);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard26.addPropertyChangeListener(propertyChangeListener27);
        java.awt.event.FocusEvent.Cause cause29 = null;
        managementDashboard26.requestFocus(cause29);
        java.awt.event.InputMethodListener inputMethodListener31 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener31);
        java.awt.Color color33 = managementDashboard26.getBackground();
        managementDashboard26.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener36 = null;
        managementDashboard26.addMouseListener(mouseListener36);
        boolean boolean38 = managementDashboard26.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent39 = null;
        java.awt.Point point40 = managementDashboard26.getPopupLocation(mouseEvent39);
        java.util.function.Consumer<java.lang.String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        managementDashboard42.setEnabled(true);
        java.awt.Point point45 = managementDashboard42.location();
        java.awt.Component component46 = managementDashboard26.findComponentAt(point45);
        java.awt.Component component47 = jToolTip16.getComponentAt(point45);
        javax.swing.ActionMap actionMap48 = jToolTip16.getActionMap();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
        org.junit.Assert.assertNotNull(jToolTip16);
        org.junit.Assert.assertNotNull(mouseMotionListenerArray19);
        org.junit.Assert.assertArrayEquals(mouseMotionListenerArray19, new java.awt.event.MouseMotionListener[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(color33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(point40);
        org.junit.Assert.assertNotNull(point45);
        org.junit.Assert.assertNull(component46);
        org.junit.Assert.assertNotNull(component47);
        org.junit.Assert.assertNotNull(actionMap48);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.countComponents();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.requestFocus();
        int int5 = managementDashboard1.getDebugGraphicsOptions();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        ParkingSpace[] parkingSpaceArray2 = parkingLot1.getSpaces();
        parkingLot1.removeBooking((int) ' ');
        parkingLot1.removeBooking(5);
        ParkingSpace[] parkingSpaceArray7 = parkingLot1.getSpaces();
        org.junit.Assert.assertNotNull(parkingSpaceArray2);
        org.junit.Assert.assertNotNull(parkingSpaceArray7);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        java.awt.Graphics graphics10 = null;
        managementDashboard1.printAll(graphics10);
        java.lang.String str12 = managementDashboard1.toString();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]", (float) 64, (float) (short) 100);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard1.mouseDown(event17, 11, 4);
        java.awt.im.InputMethodRequests inputMethodRequests21 = managementDashboard1.getInputMethodRequests();
        java.awt.Event event22 = null;
        boolean boolean25 = managementDashboard1.mouseEnter(event22, (int) ' ', 128);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str12, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inputMethodRequests21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.grabFocus();
        javax.swing.event.AncestorListener[] ancestorListenerArray5 = managementDashboard1.getAncestorListeners();
        java.awt.Event event6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = managementDashboard1.handleEvent(event6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(ancestorListenerArray5);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray5, new javax.swing.event.AncestorListener[] {});
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.ActionListener actionListener2 = null;
        javax.swing.KeyStroke keyStroke4 = null;
        managementDashboard1.registerKeyboardAction(actionListener2, "hi!", keyStroke4, (int) (short) 0);
        boolean boolean8 = managementDashboard1.areFocusTraversalKeysSet((int) (byte) 1);
        java.awt.event.FocusEvent.Cause cause9 = null;
        boolean boolean10 = managementDashboard1.requestFocusInWindow(cause9);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        managementDashboard1.hide();
        boolean boolean6 = managementDashboard1.isEnabled();
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        managementDashboard1.setSize(dimension15);
        int int19 = managementDashboard1.getBaseline((int) (byte) 1, 12);
        managementDashboard1.hide();
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray21 = managementDashboard1.getMouseWheelListeners();
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(mouseWheelListenerArray21);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray21, new java.awt.event.MouseWheelListener[] {});
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.image.ImageProducer imageProducer4 = null;
        java.awt.Image image5 = managementDashboard1.createImage(imageProducer4);
        float float6 = managementDashboard1.getAlignmentX();
        managementDashboard1.firePropertyChange("123456789", '4', '#');
        java.awt.Point point11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component12 = managementDashboard1.findComponentAt(point11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"p\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(image5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.5f + "'", float6 == 0.5f);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.firePropertyChange("", 'a', '4');
        java.awt.Component component21 = managementDashboard1.findComponentAt((int) '4', (int) (short) 0);
        java.awt.Graphics graphics22 = null;
        managementDashboard1.paint(graphics22);
        managementDashboard1.setEnabled(true);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
        org.junit.Assert.assertNull(component21);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Point point8 = managementDashboard1.location();
        javax.swing.plaf.PanelUI panelUI9 = managementDashboard1.getUI();
        javax.swing.InputVerifier inputVerifier10 = managementDashboard1.getInputVerifier();
        java.io.PrintStream printStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(point8);
        org.junit.Assert.assertNotNull(panelUI9);
        org.junit.Assert.assertNull(inputVerifier10);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        GenerateAccountView generateAccountView1 = new GenerateAccountView(strConsumer0);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray2 = generateAccountView1.getPropertyChangeListeners();
        int int3 = generateAccountView1.getX();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        boolean boolean6 = managementDashboard5.isVisible();
        java.awt.Image image9 = managementDashboard5.createImage(13, (-1));
        managementDashboard5.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        java.beans.PropertyChangeListener propertyChangeListener14 = null;
        managementDashboard13.addPropertyChangeListener(propertyChangeListener14);
        java.awt.event.FocusEvent.Cause cause16 = null;
        managementDashboard13.requestFocus(cause16);
        java.awt.event.InputMethodListener inputMethodListener18 = null;
        managementDashboard13.addInputMethodListener(inputMethodListener18);
        java.awt.Point point20 = managementDashboard13.location();
        java.awt.Component component21 = managementDashboard5.findComponentAt(point20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.awt.image.ImageProducer imageProducer24 = null;
        java.awt.Image image25 = managementDashboard23.createImage(imageProducer24);
        java.util.function.Consumer<java.lang.String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        java.beans.PropertyChangeListener propertyChangeListener28 = null;
        managementDashboard27.addPropertyChangeListener(propertyChangeListener28);
        java.awt.event.FocusEvent.Cause cause30 = null;
        managementDashboard27.requestFocus(cause30);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard27.addInputMethodListener(inputMethodListener32);
        int int34 = managementDashboard5.checkImage(image25, (java.awt.image.ImageObserver) managementDashboard27);
        java.util.function.Consumer<java.lang.String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        java.beans.PropertyChangeListener propertyChangeListener37 = null;
        managementDashboard36.addPropertyChangeListener(propertyChangeListener37);
        java.util.Locale locale39 = managementDashboard36.getLocale();
        float float40 = managementDashboard36.getAlignmentY();
        java.awt.Component component41 = managementDashboard27.add((java.awt.Component) managementDashboard36);
        java.awt.Event event42 = null;
        boolean boolean44 = managementDashboard27.keyUp(event42, 0);
        boolean boolean45 = managementDashboard27.isVisible();
        managementDashboard27.nextFocus();
        boolean boolean47 = generateAccountView1.isFocusCycleRoot((java.awt.Container) managementDashboard27);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray2);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray2, new java.beans.PropertyChangeListener[] {});
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(image9);
        org.junit.Assert.assertNotNull(point20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertNotNull(image25);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(locale39);
        org.junit.Assert.assertEquals(locale39.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 0.5f + "'", float40 == 0.5f);
        org.junit.Assert.assertNotNull(component41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.MouseMotionListener mouseMotionListener6 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener6);
        managementDashboard1.enable(true);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard1.addPropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Point point30 = managementDashboard23.location();
        java.awt.Point point31 = managementDashboard1.getLocation(point30);
        managementDashboard1.enable();
        int int33 = managementDashboard1.getComponentCount();
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        java.beans.PropertyChangeListener propertyChangeListener36 = null;
        managementDashboard35.addPropertyChangeListener(propertyChangeListener36);
        java.awt.event.FocusEvent.Cause cause38 = null;
        managementDashboard35.requestFocus(cause38);
        java.awt.Color color40 = managementDashboard35.getBackground();
        managementDashboard35.repaint();
        boolean boolean42 = managementDashboard35.isOpaque();
        managementDashboard35.firePropertyChange("hi!", 10, 10);
        javax.swing.plaf.PanelUI panelUI47 = managementDashboard35.getUI();
        managementDashboard1.setUI(panelUI47);
        java.awt.Event event49 = null;
        boolean boolean51 = managementDashboard1.keyUp(event49, 8);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(point30);
        org.junit.Assert.assertNotNull(point31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(color40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(panelUI47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.Dimension dimension6 = managementDashboard1.getMinimumSize();
        float float7 = managementDashboard1.getAlignmentX();
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard18.addPropertyChangeListener(propertyChangeListener19);
        java.awt.event.FocusEvent.Cause cause21 = null;
        managementDashboard18.requestFocus(cause21);
        java.awt.event.InputMethodListener inputMethodListener23 = null;
        managementDashboard18.addInputMethodListener(inputMethodListener23);
        java.awt.Point point25 = managementDashboard18.location();
        java.awt.Component component26 = managementDashboard10.findComponentAt(point25);
        java.awt.Graphics graphics27 = null;
        managementDashboard10.update(graphics27);
        javax.swing.InputVerifier inputVerifier29 = managementDashboard10.getInputVerifier();
        managementDashboard10.firePropertyChange("PanelUI", 'a', '4');
        javax.swing.InputMap inputMap35 = managementDashboard10.getInputMap(0);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap(11, inputMap35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(dimension6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.5f + "'", float7 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(point25);
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNull(inputVerifier29);
        org.junit.Assert.assertNotNull(inputMap35);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        java.util.function.Consumer<java.lang.String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        boolean boolean22 = managementDashboard21.isVisible();
        java.awt.LayoutManager layoutManager23 = managementDashboard21.getLayout();
        java.awt.Graphics graphics24 = null;
        managementDashboard21.print(graphics24);
        java.lang.String str26 = managementDashboard21.getToolTipText();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isVisible();
        java.awt.Image image35 = managementDashboard31.createImage(13, (-1));
        managementDashboard31.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.awt.event.FocusEvent.Cause cause42 = null;
        managementDashboard39.requestFocus(cause42);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener44);
        java.awt.Point point46 = managementDashboard39.location();
        java.awt.Component component47 = managementDashboard31.findComponentAt(point46);
        java.awt.Component component48 = managementDashboard28.getComponentAt(point46);
        managementDashboard28.grabFocus();
        java.awt.Rectangle rectangle50 = managementDashboard28.bounds();
        managementDashboard21.repaint(rectangle50);
        managementDashboard1.paintImmediately(rectangle50);
        java.beans.VetoableChangeListener vetoableChangeListener53 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener53);
        managementDashboard1.setOpaque(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(layoutManager23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(image35);
        org.junit.Assert.assertNotNull(point46);
        org.junit.Assert.assertNull(component47);
        org.junit.Assert.assertNull(component48);
        org.junit.Assert.assertNotNull(rectangle50);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<java.lang.String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<java.lang.String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.awt.Cursor cursor85 = managementDashboard72.getCursor();
        boolean boolean86 = managementDashboard72.isFontSet();
        boolean boolean87 = managementDashboard72.isFocusable();
        java.io.PrintWriter printWriter88 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard72.list(printWriter88, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.print(String)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertNotNull(cursor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        managementDashboard1.show(true);
        java.lang.String str20 = managementDashboard1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]" + "'", str20, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        java.lang.String str2 = parkingLot1.getLotAvailability();
        parkingLot1.removeBooking(11);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        java.lang.String str5 = managementDashboard1.getUIClassID();
        java.awt.event.ComponentListener[] componentListenerArray6 = managementDashboard1.getComponentListeners();
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        GenerateAccountView generateAccountView8 = new GenerateAccountView(strConsumer7);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray9 = generateAccountView8.getPropertyChangeListeners();
        javax.swing.InputVerifier inputVerifier10 = null;
        generateAccountView8.setInputVerifier(inputVerifier10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        int int14 = managementDashboard13.countComponents();
        managementDashboard13.resetKeyboardActions();
        managementDashboard13.layout();
        java.awt.event.MouseEvent mouseEvent17 = null;
        java.awt.Point point18 = managementDashboard13.getPopupLocation(mouseEvent17);
        java.awt.Color color19 = managementDashboard13.getForeground();
        generateAccountView8.setForeground(color19);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        boolean boolean23 = managementDashboard22.isVisible();
        java.awt.Image image26 = managementDashboard22.createImage(13, (-1));
        managementDashboard22.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        java.beans.PropertyChangeListener propertyChangeListener31 = null;
        managementDashboard30.addPropertyChangeListener(propertyChangeListener31);
        java.awt.event.FocusEvent.Cause cause33 = null;
        managementDashboard30.requestFocus(cause33);
        java.awt.event.InputMethodListener inputMethodListener35 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener35);
        java.awt.Point point37 = managementDashboard30.location();
        java.awt.Component component38 = managementDashboard22.findComponentAt(point37);
        java.util.function.Consumer<java.lang.String> strConsumer39 = null;
        ManagementDashboard managementDashboard40 = new ManagementDashboard(strConsumer39);
        java.awt.image.ImageProducer imageProducer41 = null;
        java.awt.Image image42 = managementDashboard40.createImage(imageProducer41);
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        java.beans.PropertyChangeListener propertyChangeListener45 = null;
        managementDashboard44.addPropertyChangeListener(propertyChangeListener45);
        java.awt.event.FocusEvent.Cause cause47 = null;
        managementDashboard44.requestFocus(cause47);
        java.awt.event.InputMethodListener inputMethodListener49 = null;
        managementDashboard44.addInputMethodListener(inputMethodListener49);
        int int51 = managementDashboard22.checkImage(image42, (java.awt.image.ImageObserver) managementDashboard44);
        java.awt.Container container52 = managementDashboard22.getParent();
        javax.swing.JRootPane jRootPane53 = managementDashboard22.getRootPane();
        javax.accessibility.AccessibleContext accessibleContext54 = managementDashboard22.getAccessibleContext();
        java.awt.Cursor cursor55 = managementDashboard22.getCursor();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) generateAccountView8, (java.lang.Object) cursor55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: constraint must be a string (or null)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PanelUI" + "'", str5, "PanelUI");
        org.junit.Assert.assertNotNull(componentListenerArray6);
        org.junit.Assert.assertArrayEquals(componentListenerArray6, new java.awt.event.ComponentListener[] {});
        org.junit.Assert.assertNotNull(propertyChangeListenerArray9);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray9, new java.beans.PropertyChangeListener[] {});
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(point18);
        org.junit.Assert.assertNotNull(color19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(image26);
        org.junit.Assert.assertNotNull(point37);
        org.junit.Assert.assertNull(component38);
        org.junit.Assert.assertNotNull(image42);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(container52);
        org.junit.Assert.assertNull(jRootPane53);
        org.junit.Assert.assertNotNull(accessibleContext54);
        org.junit.Assert.assertNotNull(cursor55);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementAccountsView managementAccountsView1 = new ManagementAccountsView(strConsumer0);
        java.awt.event.InputMethodListener inputMethodListener2 = null;
        managementAccountsView1.removeInputMethodListener(inputMethodListener2);
        boolean boolean4 = managementAccountsView1.isFocusTraversable();
        java.awt.im.InputMethodRequests inputMethodRequests5 = managementAccountsView1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        java.beans.PropertyChangeListener propertyChangeListener8 = null;
        managementDashboard7.addPropertyChangeListener(propertyChangeListener8);
        java.awt.event.FocusEvent.Cause cause10 = null;
        managementDashboard7.requestFocus(cause10);
        java.awt.Color color12 = managementDashboard7.getBackground();
        managementDashboard7.repaint();
        boolean boolean14 = managementDashboard7.isOpaque();
        managementDashboard7.firePropertyChange("hi!", 10, 10);
        javax.swing.plaf.PanelUI panelUI19 = managementDashboard7.getUI();
        managementAccountsView1.setUI(panelUI19);
        managementAccountsView1.setSize((int) (short) 1, 2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(inputMethodRequests5);
        org.junit.Assert.assertNotNull(color12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(panelUI19);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.image.ImageProducer imageProducer4 = null;
        java.awt.Image image5 = managementDashboard1.createImage(imageProducer4);
        java.awt.Insets insets6 = managementDashboard1.getInsets();
        managementDashboard1.setBounds(0, 16, 11, (int) (byte) 10);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        org.junit.Assert.assertNotNull(image5);
        org.junit.Assert.assertNotNull(insets6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.lang.String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        int int10 = managementDashboard1.getDebugGraphicsOptions();
        java.awt.event.HierarchyListener[] hierarchyListenerArray11 = managementDashboard1.getHierarchyListeners();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component13 = managementDashboard1.getComponent(64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 64");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(hierarchyListenerArray11);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray11, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        int int20 = managementDashboard1.getComponentCount();
        java.awt.event.FocusListener[] focusListenerArray21 = managementDashboard1.getFocusListeners();
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        java.awt.Color color30 = managementDashboard23.getBackground();
        managementDashboard23.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener33 = null;
        managementDashboard23.addMouseListener(mouseListener33);
        boolean boolean35 = managementDashboard23.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent36 = null;
        java.awt.Point point37 = managementDashboard23.getPopupLocation(mouseEvent36);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        managementDashboard39.setEnabled(true);
        java.awt.Point point42 = managementDashboard39.location();
        java.awt.Component component43 = managementDashboard23.findComponentAt(point42);
        boolean boolean44 = managementDashboard1.contains(point42);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(focusListenerArray21);
        org.junit.Assert.assertArrayEquals(focusListenerArray21, new java.awt.event.FocusListener[] {});
        org.junit.Assert.assertNotNull(color30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(point37);
        org.junit.Assert.assertNotNull(point42);
        org.junit.Assert.assertNull(component43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        managementDashboard23.show();
        managementDashboard23.show();
        boolean boolean33 = managementDashboard23.getAutoscrolls();
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener34 = null;
        managementDashboard23.addHierarchyBoundsListener(hierarchyBoundsListener34);
        boolean boolean36 = managementDashboard23.requestFocusInWindow();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<java.lang.String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<java.lang.String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        java.beans.PropertyChangeListener propertyChangeListener73 = null;
        managementDashboard72.addPropertyChangeListener(propertyChangeListener73);
        java.util.Locale locale75 = managementDashboard72.getLocale();
        float float76 = managementDashboard72.getAlignmentY();
        java.awt.image.VolatileImage volatileImage79 = managementDashboard72.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj80 = managementDashboard72.getTreeLock();
        managementDashboard72.setVerifyInputWhenFocusTarget(true);
        int int83 = managementDashboard23.checkImage(image59, (int) 'a', 10, (java.awt.image.ImageObserver) managementDashboard72);
        javax.swing.InputMap inputMap84 = managementDashboard72.getInputMap();
        java.awt.Cursor cursor85 = managementDashboard72.getCursor();
        boolean boolean86 = managementDashboard72.isFontSet();
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray87 = managementDashboard72.getMouseWheelListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale75);
        org.junit.Assert.assertEquals(locale75.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.5f + "'", float76 == 0.5f);
        org.junit.Assert.assertNull(volatileImage79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(inputMap84);
        org.junit.Assert.assertNotNull(cursor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray87);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray87, new java.awt.event.MouseWheelListener[] {});
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        managementDashboard1.enable();
        managementDashboard1.validate();
        managementDashboard1.setFocusable(true);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray8 = managementDashboard1.getPropertyChangeListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray8);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray8, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        managementDashboard1.setFocusTraversalKeysEnabled(true);
        boolean boolean12 = managementDashboard1.isBackgroundSet();
        java.awt.FocusTraversalPolicy focusTraversalPolicy13 = managementDashboard1.getFocusTraversalPolicy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(focusTraversalPolicy13);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard32.addPropertyChangeListener(propertyChangeListener33);
        java.util.Locale locale35 = managementDashboard32.getLocale();
        float float36 = managementDashboard32.getAlignmentY();
        java.awt.Component component37 = managementDashboard23.add((java.awt.Component) managementDashboard32);
        boolean boolean38 = managementDashboard23.isOpaque();
        java.awt.event.ComponentListener[] componentListenerArray39 = managementDashboard23.getComponentListeners();
        java.awt.event.ComponentListener componentListener40 = null;
        managementDashboard23.removeComponentListener(componentListener40);
        java.util.function.Consumer<java.lang.String> strConsumer42 = null;
        ManagementDashboard managementDashboard43 = new ManagementDashboard(strConsumer42);
        int int44 = managementDashboard43.countComponents();
        java.awt.im.InputMethodRequests inputMethodRequests45 = managementDashboard43.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        managementDashboard47.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        float float59 = managementDashboard47.getAlignmentY();
        javax.swing.ActionMap actionMap60 = managementDashboard47.getActionMap();
        managementDashboard43.setActionMap(actionMap60);
        managementDashboard23.setActionMap(actionMap60);
        java.awt.Graphics graphics63 = null;
        managementDashboard23.paint(graphics63);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(locale35);
        org.junit.Assert.assertEquals(locale35.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(componentListenerArray39);
        org.junit.Assert.assertArrayEquals(componentListenerArray39, new java.awt.event.ComponentListener[] {});
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNull(inputMethodRequests45);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 0.5f + "'", float59 == 0.5f);
        org.junit.Assert.assertNotNull(actionMap60);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        java.beans.PropertyChangeListener propertyChangeListener6 = null;
        managementDashboard5.addPropertyChangeListener(propertyChangeListener6);
        java.awt.event.FocusEvent.Cause cause8 = null;
        managementDashboard5.requestFocus(cause8);
        java.awt.event.InputMethodListener inputMethodListener10 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener10);
        java.awt.Point point12 = managementDashboard5.location();
        java.awt.Component component13 = managementDashboard1.add((java.awt.Component) managementDashboard5);
        javax.swing.JPopupMenu jPopupMenu14 = managementDashboard1.getComponentPopupMenu();
        managementDashboard1.firePropertyChange("", 'a', '4');
        managementDashboard1.show();
        managementDashboard1.requestFocus();
        managementDashboard1.nextFocus();
        javax.swing.event.AncestorListener ancestorListener22 = null;
        managementDashboard1.addAncestorListener(ancestorListener22);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(point12);
        org.junit.Assert.assertNotNull(component13);
        org.junit.Assert.assertNull(jPopupMenu14);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        managementDashboard1.enableInputMethods(true);
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) (short) 0, 1);
        int int9 = managementDashboard1.getComponentCount();
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        boolean boolean18 = managementDashboard1.isRequestFocusEnabled();
        javax.accessibility.AccessibleContext accessibleContext19 = managementDashboard1.getAccessibleContext();
        java.util.function.Consumer<java.lang.String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        boolean boolean22 = managementDashboard21.isVisible();
        java.awt.LayoutManager layoutManager23 = managementDashboard21.getLayout();
        java.awt.Graphics graphics24 = null;
        managementDashboard21.print(graphics24);
        java.lang.String str26 = managementDashboard21.getToolTipText();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isVisible();
        java.awt.Image image35 = managementDashboard31.createImage(13, (-1));
        managementDashboard31.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        java.beans.PropertyChangeListener propertyChangeListener40 = null;
        managementDashboard39.addPropertyChangeListener(propertyChangeListener40);
        java.awt.event.FocusEvent.Cause cause42 = null;
        managementDashboard39.requestFocus(cause42);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener44);
        java.awt.Point point46 = managementDashboard39.location();
        java.awt.Component component47 = managementDashboard31.findComponentAt(point46);
        java.awt.Component component48 = managementDashboard28.getComponentAt(point46);
        managementDashboard28.grabFocus();
        java.awt.Rectangle rectangle50 = managementDashboard28.bounds();
        managementDashboard21.repaint(rectangle50);
        managementDashboard1.paintImmediately(rectangle50);
        java.beans.VetoableChangeListener vetoableChangeListener53 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener53);
        java.awt.Event event55 = null;
        java.lang.Object obj56 = null;
        boolean boolean57 = managementDashboard1.action(event55, obj56);
        java.awt.Dimension dimension58 = managementDashboard1.getPreferredSize();
        boolean boolean59 = managementDashboard1.requestFocusInWindow();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(accessibleContext19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(layoutManager23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(image35);
        org.junit.Assert.assertNotNull(point46);
        org.junit.Assert.assertNull(component47);
        org.junit.Assert.assertNull(component48);
        org.junit.Assert.assertNotNull(rectangle50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(dimension58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.awt.Insets insets8 = managementDashboard1.getInsets();
        java.util.Locale locale9 = managementDashboard1.getLocale();
        java.awt.Graphics graphics10 = null;
        managementDashboard1.printAll(graphics10);
        java.awt.Event event12 = null;
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isVisible();
        java.awt.Image image18 = managementDashboard14.createImage(13, (-1));
        managementDashboard14.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard22.addPropertyChangeListener(propertyChangeListener23);
        java.awt.event.FocusEvent.Cause cause25 = null;
        managementDashboard22.requestFocus(cause25);
        java.awt.event.InputMethodListener inputMethodListener27 = null;
        managementDashboard22.addInputMethodListener(inputMethodListener27);
        java.awt.Point point29 = managementDashboard22.location();
        java.awt.Component component30 = managementDashboard14.findComponentAt(point29);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.awt.image.ImageProducer imageProducer33 = null;
        java.awt.Image image34 = managementDashboard32.createImage(imageProducer33);
        java.util.function.Consumer<java.lang.String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        java.beans.PropertyChangeListener propertyChangeListener37 = null;
        managementDashboard36.addPropertyChangeListener(propertyChangeListener37);
        java.awt.event.FocusEvent.Cause cause39 = null;
        managementDashboard36.requestFocus(cause39);
        java.awt.event.InputMethodListener inputMethodListener41 = null;
        managementDashboard36.addInputMethodListener(inputMethodListener41);
        int int43 = managementDashboard14.checkImage(image34, (java.awt.image.ImageObserver) managementDashboard36);
        java.util.function.Consumer<java.lang.String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        java.beans.PropertyChangeListener propertyChangeListener46 = null;
        managementDashboard45.addPropertyChangeListener(propertyChangeListener46);
        java.util.Locale locale48 = managementDashboard45.getLocale();
        float float49 = managementDashboard45.getAlignmentY();
        java.awt.Component component50 = managementDashboard36.add((java.awt.Component) managementDashboard45);
        java.awt.image.ImageProducer imageProducer51 = null;
        java.awt.Image image52 = managementDashboard45.createImage(imageProducer51);
        boolean boolean53 = managementDashboard1.lostFocus(event12, (java.lang.Object) imageProducer51);
        java.awt.event.KeyListener[] keyListenerArray54 = managementDashboard1.getKeyListeners();
        java.awt.AWTKeyStroke[] aWTKeyStrokeArray56 = new java.awt.AWTKeyStroke[] {};
        java.util.LinkedHashSet<java.awt.AWTKeyStroke> aWTKeyStrokeSet57 = new java.util.LinkedHashSet<java.awt.AWTKeyStroke>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.awt.AWTKeyStroke>) aWTKeyStrokeSet57, aWTKeyStrokeArray56);
        managementDashboard1.setFocusTraversalKeys(0, (java.util.Set<java.awt.AWTKeyStroke>) aWTKeyStrokeSet57);
        java.awt.event.InputMethodListener inputMethodListener60 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener60);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(insets8);
        org.junit.Assert.assertNotNull(locale9);
        org.junit.Assert.assertEquals(locale9.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(image18);
        org.junit.Assert.assertNotNull(point29);
        org.junit.Assert.assertNull(component30);
        org.junit.Assert.assertNotNull(image34);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(locale48);
        org.junit.Assert.assertEquals(locale48.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 0.5f + "'", float49 == 0.5f);
        org.junit.Assert.assertNotNull(component50);
        org.junit.Assert.assertNotNull(image52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(keyListenerArray54);
        org.junit.Assert.assertArrayEquals(keyListenerArray54, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertNotNull(aWTKeyStrokeArray56);
        org.junit.Assert.assertArrayEquals(aWTKeyStrokeArray56, new java.awt.AWTKeyStroke[] {});
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.lang.String str4 = managementDashboard1.getName();
        java.awt.event.ComponentListener componentListener5 = null;
        managementDashboard1.removeComponentListener(componentListener5);
        managementDashboard1.move((int) (short) 100, 9);
        boolean boolean10 = managementDashboard1.isLightweight();
        managementDashboard1.hide();
        java.awt.Graphics graphics12 = null;
        managementDashboard1.printComponents(graphics12);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        java.awt.Event event32 = null;
        boolean boolean35 = managementDashboard1.mouseDrag(event32, (int) (short) 0, 10);
        java.awt.event.MouseEvent mouseEvent36 = null;
        java.awt.Point point37 = managementDashboard1.getToolTipLocation(mouseEvent36);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(point37);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        java.awt.Event event32 = null;
        boolean boolean35 = managementDashboard1.mouseDrag(event32, (int) (short) 0, 10);
        managementDashboard1.setSize((int) (short) -1, (int) (byte) 10);
        java.awt.Rectangle rectangle39 = managementDashboard1.getBounds();
        managementDashboard1.setEnabled(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(rectangle39);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        java.awt.Color color8 = managementDashboard1.getBackground();
        managementDashboard1.paintImmediately((int) (byte) 0, (int) (byte) 10, (int) (short) 100, 0);
        managementDashboard1.reshape(0, 10, (int) (byte) 100, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        boolean boolean21 = managementDashboard20.isVisible();
        java.awt.Image image24 = managementDashboard20.createImage(13, (-1));
        managementDashboard20.show(true);
        java.awt.Dimension dimension27 = managementDashboard20.size();
        managementDashboard1.setMaximumSize(dimension27);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        java.awt.image.ImageProducer imageProducer31 = null;
        java.awt.Image image32 = managementDashboard30.createImage(imageProducer31);
        managementDashboard30.resize(2, 100);
        java.beans.VetoableChangeListener vetoableChangeListener36 = null;
        managementDashboard30.removeVetoableChangeListener(vetoableChangeListener36);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isVisible();
        java.awt.Image image43 = managementDashboard39.createImage(13, (-1));
        managementDashboard39.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard47.addPropertyChangeListener(propertyChangeListener48);
        java.awt.event.FocusEvent.Cause cause50 = null;
        managementDashboard47.requestFocus(cause50);
        java.awt.event.InputMethodListener inputMethodListener52 = null;
        managementDashboard47.addInputMethodListener(inputMethodListener52);
        java.awt.Point point54 = managementDashboard47.location();
        java.awt.Component component55 = managementDashboard39.findComponentAt(point54);
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        java.awt.image.ImageProducer imageProducer58 = null;
        java.awt.Image image59 = managementDashboard57.createImage(imageProducer58);
        java.util.function.Consumer<java.lang.String> strConsumer60 = null;
        ManagementDashboard managementDashboard61 = new ManagementDashboard(strConsumer60);
        java.beans.PropertyChangeListener propertyChangeListener62 = null;
        managementDashboard61.addPropertyChangeListener(propertyChangeListener62);
        java.awt.event.FocusEvent.Cause cause64 = null;
        managementDashboard61.requestFocus(cause64);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard61.addInputMethodListener(inputMethodListener66);
        int int68 = managementDashboard39.checkImage(image59, (java.awt.image.ImageObserver) managementDashboard61);
        java.util.function.Consumer<java.lang.String> strConsumer69 = null;
        ManagementDashboard managementDashboard70 = new ManagementDashboard(strConsumer69);
        java.beans.PropertyChangeListener propertyChangeListener71 = null;
        managementDashboard70.addPropertyChangeListener(propertyChangeListener71);
        java.util.Locale locale73 = managementDashboard70.getLocale();
        float float74 = managementDashboard70.getAlignmentY();
        java.awt.Component component75 = managementDashboard61.add((java.awt.Component) managementDashboard70);
        java.util.function.Consumer<java.lang.String> strConsumer76 = null;
        ManagementDashboard managementDashboard77 = new ManagementDashboard(strConsumer76);
        java.beans.PropertyChangeListener propertyChangeListener78 = null;
        managementDashboard77.addPropertyChangeListener(propertyChangeListener78);
        java.util.Locale locale80 = managementDashboard77.getLocale();
        managementDashboard70.setLocale(locale80);
        managementDashboard30.setLocale(locale80);
        java.awt.Font font83 = managementDashboard30.getFont();
        java.awt.FontMetrics fontMetrics84 = managementDashboard1.getFontMetrics(font83);
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(image24);
        org.junit.Assert.assertNotNull(dimension27);
        org.junit.Assert.assertNotNull(image32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(image43);
        org.junit.Assert.assertNotNull(point54);
        org.junit.Assert.assertNull(component55);
        org.junit.Assert.assertNotNull(image59);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(locale73);
        org.junit.Assert.assertEquals(locale73.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 0.5f + "'", float74 == 0.5f);
        org.junit.Assert.assertNotNull(component75);
        org.junit.Assert.assertNotNull(locale80);
        org.junit.Assert.assertEquals(locale80.toString(), "en_CA");
        org.junit.Assert.assertNotNull(font83);
        org.junit.Assert.assertNotNull(fontMetrics84);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        boolean boolean6 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        java.awt.Rectangle rectangle7 = managementDashboard1.getVisibleRect();
        int int8 = managementDashboard1.getY();
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isVisible();
        java.awt.Image image14 = managementDashboard10.createImage(13, (-1));
        managementDashboard10.show(true);
        java.awt.Dimension dimension17 = managementDashboard10.size();
        java.awt.event.MouseListener[] mouseListenerArray18 = managementDashboard10.getMouseListeners();
        managementDashboard10.firePropertyChange("", (byte) 0, (byte) 100);
        java.lang.Object obj23 = null;
        managementDashboard1.putClientProperty((java.lang.Object) managementDashboard10, obj23);
        java.awt.event.MouseEvent mouseEvent25 = null;
        java.lang.String str26 = managementDashboard10.getToolTipText(mouseEvent25);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(image14);
        org.junit.Assert.assertNotNull(dimension17);
        org.junit.Assert.assertNotNull(mouseListenerArray18);
        org.junit.Assert.assertArrayEquals(mouseListenerArray18, new java.awt.event.MouseListener[] {});
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj9 = managementDashboard1.getTreeLock();
        managementDashboard1.setFocusTraversalKeysEnabled(false);
        java.awt.event.KeyListener keyListener12 = null;
        managementDashboard1.addKeyListener(keyListener12);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        ParkingLot parkingLot1 = new ParkingLot("hi!");
        ParkingSpace[] parkingSpaceArray2 = parkingLot1.getSpaces();
        boolean boolean3 = parkingLot1.getEnabled();
        parkingLot1.setEnabled(false);
        ParkingSpace parkingSpace7 = parkingLot1.getSpace((int) (byte) 10);
        parkingSpace7.book("PanelUI");
        org.junit.Assert.assertNotNull(parkingSpaceArray2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(parkingSpace7);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        java.awt.Graphics graphics4 = null;
        managementDashboard1.print(graphics4);
        java.lang.String str6 = managementDashboard1.getToolTipText();
        java.awt.Container container7 = managementDashboard1.getTopLevelAncestor();
        managementDashboard1.setLocation((int) (short) 100, (int) (byte) 100);
        managementDashboard1.setVerifyInputWhenFocusTarget(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(container7);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        boolean boolean13 = managementDashboard1.isValid();
        managementDashboard1.reshape(8, (int) ' ', (int) (short) 10, 1);
        managementDashboard1.setAutoscrolls(false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Dimension dimension3 = managementDashboard1.getMinimumSize();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        int int6 = managementDashboard5.countComponents();
        java.awt.Insets insets7 = managementDashboard5.getInsets();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        boolean boolean10 = managementDashboard9.isVisible();
        java.awt.LayoutManager layoutManager11 = managementDashboard9.getLayout();
        boolean boolean14 = managementDashboard9.contains((int) (byte) -1, (int) '#');
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        boolean boolean17 = managementDashboard16.isVisible();
        java.awt.Image image20 = managementDashboard16.createImage(13, (-1));
        managementDashboard16.show(true);
        java.awt.Dimension dimension23 = managementDashboard16.size();
        javax.swing.JToolTip jToolTip24 = managementDashboard16.createToolTip();
        java.lang.Object obj25 = null;
        managementDashboard9.putClientProperty((java.lang.Object) jToolTip24, obj25);
        java.awt.event.MouseMotionListener[] mouseMotionListenerArray27 = jToolTip24.getMouseMotionListeners();
        jToolTip24.requestFocus();
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        boolean boolean31 = managementDashboard30.isVisible();
        java.awt.Image image34 = managementDashboard30.createImage(13, (-1));
        managementDashboard30.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        java.beans.PropertyChangeListener propertyChangeListener39 = null;
        managementDashboard38.addPropertyChangeListener(propertyChangeListener39);
        java.awt.event.FocusEvent.Cause cause41 = null;
        managementDashboard38.requestFocus(cause41);
        java.awt.event.InputMethodListener inputMethodListener43 = null;
        managementDashboard38.addInputMethodListener(inputMethodListener43);
        java.awt.Point point45 = managementDashboard38.location();
        java.awt.Component component46 = managementDashboard30.findComponentAt(point45);
        java.util.function.Consumer<java.lang.String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        java.awt.image.ImageProducer imageProducer49 = null;
        java.awt.Image image50 = managementDashboard48.createImage(imageProducer49);
        java.util.function.Consumer<java.lang.String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard52.addPropertyChangeListener(propertyChangeListener53);
        java.awt.event.FocusEvent.Cause cause55 = null;
        managementDashboard52.requestFocus(cause55);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard52.addInputMethodListener(inputMethodListener57);
        int int59 = managementDashboard30.checkImage(image50, (java.awt.image.ImageObserver) managementDashboard52);
        managementDashboard52.show();
        java.awt.Dimension dimension61 = managementDashboard52.getMaximumSize();
        jToolTip24.setMaximumSize(dimension61);
        managementDashboard5.setPreferredSize(dimension61);
        managementDashboard1.setMinimumSize(dimension61);
        java.lang.String str65 = managementDashboard1.getName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(dimension3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(insets7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(layoutManager11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(image20);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertNotNull(jToolTip24);
        org.junit.Assert.assertNotNull(mouseMotionListenerArray27);
        org.junit.Assert.assertArrayEquals(mouseMotionListenerArray27, new java.awt.event.MouseMotionListener[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(image34);
        org.junit.Assert.assertNotNull(point45);
        org.junit.Assert.assertNull(component46);
        org.junit.Assert.assertNotNull(image50);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(dimension61);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.awt.event.FocusEvent.Cause cause4 = null;
        managementDashboard1.requestFocus(cause4);
        java.awt.event.InputMethodListener inputMethodListener6 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener6);
        managementDashboard1.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        java.awt.MenuComponent menuComponent13 = null;
        managementDashboard1.remove(menuComponent13);
        managementDashboard1.grabFocus();
        javax.swing.KeyStroke keyStroke16 = null;
        java.awt.event.ActionListener actionListener17 = managementDashboard1.getActionForKeyStroke(keyStroke16);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.disable();
        org.junit.Assert.assertNull(actionListener17);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        managementDashboard23.show();
        managementDashboard23.setToolTipText("data/lotData.csv");
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener34 = null;
        managementDashboard23.removeHierarchyBoundsListener(hierarchyBoundsListener34);
        java.lang.Object obj36 = managementDashboard23.getTreeLock();
        java.awt.image.ImageProducer imageProducer37 = null;
        java.awt.Image image38 = managementDashboard23.createImage(imageProducer37);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(image38);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.ActionListener actionListener2 = null;
        javax.swing.KeyStroke keyStroke4 = null;
        managementDashboard1.registerKeyboardAction(actionListener2, "hi!", keyStroke4, (int) (short) 0);
        java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray7 = managementDashboard1.getHierarchyBoundsListeners();
        boolean boolean8 = managementDashboard1.getAutoscrolls();
        org.junit.Assert.assertNotNull(hierarchyBoundsListenerArray7);
        org.junit.Assert.assertArrayEquals(hierarchyBoundsListenerArray7, new java.awt.event.HierarchyBoundsListener[] {});
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        java.awt.Event event32 = null;
        boolean boolean35 = managementDashboard1.mouseDrag(event32, (int) (short) 0, 10);
        managementDashboard1.setSize((int) (short) -1, (int) (byte) 10);
        java.awt.Rectangle rectangle39 = managementDashboard1.getBounds();
        java.awt.event.InputMethodListener inputMethodListener40 = null;
        managementDashboard1.removeInputMethodListener(inputMethodListener40);
        managementDashboard1.enable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(rectangle39);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard9.addPropertyChangeListener(propertyChangeListener10);
        java.awt.event.FocusEvent.Cause cause12 = null;
        managementDashboard9.requestFocus(cause12);
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard9.addInputMethodListener(inputMethodListener14);
        java.awt.Point point16 = managementDashboard9.location();
        java.awt.Component component17 = managementDashboard1.findComponentAt(point16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        java.awt.image.ImageProducer imageProducer20 = null;
        java.awt.Image image21 = managementDashboard19.createImage(imageProducer20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard23.addPropertyChangeListener(propertyChangeListener24);
        java.awt.event.FocusEvent.Cause cause26 = null;
        managementDashboard23.requestFocus(cause26);
        java.awt.event.InputMethodListener inputMethodListener28 = null;
        managementDashboard23.addInputMethodListener(inputMethodListener28);
        int int30 = managementDashboard1.checkImage(image21, (java.awt.image.ImageObserver) managementDashboard23);
        java.awt.Container container31 = managementDashboard1.getParent();
        java.awt.Event event32 = null;
        boolean boolean35 = managementDashboard1.mouseDrag(event32, (int) (short) 0, 10);
        java.awt.event.KeyListener keyListener36 = null;
        managementDashboard1.removeKeyListener(keyListener36);
        boolean boolean38 = managementDashboard1.isPaintingTile();
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        java.beans.PropertyChangeListener propertyChangeListener42 = null;
        managementDashboard41.addPropertyChangeListener(propertyChangeListener42);
        java.util.Locale locale44 = managementDashboard41.getLocale();
        float float45 = managementDashboard41.getAlignmentY();
        java.awt.image.VolatileImage volatileImage48 = managementDashboard41.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj49 = managementDashboard41.getTreeLock();
        managementDashboard41.setVerifyInputWhenFocusTarget(true);
        managementDashboard41.requestFocus();
        managementDashboard41.setFocusTraversalKeysEnabled(false);
        java.awt.LayoutManager layoutManager55 = managementDashboard41.getLayout();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component56 = managementDashboard1.add("SUPERMAN", (java.awt.Component) managementDashboard41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: SUPERMAN");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(point16);
        org.junit.Assert.assertNull(component17);
        org.junit.Assert.assertNotNull(image21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(locale44);
        org.junit.Assert.assertEquals(locale44.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float45 + "' != '" + 0.5f + "'", float45 == 0.5f);
        org.junit.Assert.assertNull(volatileImage48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(layoutManager55);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        boolean boolean2 = userDashboard1.getAutoscrolls();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.image.ImageProducer imageProducer2 = null;
        java.awt.Image image3 = managementDashboard1.createImage(imageProducer2);
        javax.swing.event.AncestorListener[] ancestorListenerArray4 = managementDashboard1.getAncestorListeners();
        managementDashboard1.hide();
        java.awt.event.MouseWheelListener mouseWheelListener6 = null;
        managementDashboard1.removeMouseWheelListener(mouseWheelListener6);
        org.junit.Assert.assertNotNull(image3);
        org.junit.Assert.assertNotNull(ancestorListenerArray4);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray4, new javax.swing.event.AncestorListener[] {});
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj9 = managementDashboard1.getTreeLock();
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard1.removeContainerListener(containerListener10);
        java.awt.event.MouseEvent mouseEvent12 = null;
        java.lang.String str13 = managementDashboard1.getToolTipText(mouseEvent12);
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isFocusOwner();
        boolean boolean3 = managementDashboard1.isDoubleBuffered();
        managementDashboard1.requestFocus();
        managementDashboard1.layout();
        java.lang.Object obj6 = managementDashboard1.getTreeLock();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.beans.PropertyChangeListener propertyChangeListener2 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener2);
        java.util.Locale locale4 = managementDashboard1.getLocale();
        float float5 = managementDashboard1.getAlignmentY();
        java.awt.image.VolatileImage volatileImage8 = managementDashboard1.createVolatileImage((int) 'a', (int) (short) 1);
        java.lang.Object obj9 = managementDashboard1.getTreeLock();
        managementDashboard1.setFocusTraversalKeysEnabled(false);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        java.beans.PropertyChangeListener propertyChangeListener14 = null;
        managementDashboard13.addPropertyChangeListener(propertyChangeListener14);
        java.awt.event.FocusEvent.Cause cause16 = null;
        managementDashboard13.requestFocus(cause16);
        java.awt.Color color18 = managementDashboard13.getBackground();
        java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray19 = managementDashboard13.getHierarchyBoundsListeners();
        boolean boolean20 = managementDashboard13.getIgnoreRepaint();
        java.awt.ComponentOrientation componentOrientation21 = managementDashboard13.getComponentOrientation();
        managementDashboard1.applyComponentOrientation(componentOrientation21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet24 = managementDashboard1.getFocusTraversalKeys(64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(locale4);
        org.junit.Assert.assertEquals(locale4.toString(), "en_CA");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.5f + "'", float5 == 0.5f);
        org.junit.Assert.assertNull(volatileImage8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(color18);
        org.junit.Assert.assertNotNull(hierarchyBoundsListenerArray19);
        org.junit.Assert.assertArrayEquals(hierarchyBoundsListenerArray19, new java.awt.event.HierarchyBoundsListener[] {});
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(componentOrientation21);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        java.awt.event.ActionListener actionListener6 = null;
        javax.swing.KeyStroke keyStroke8 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener6, "SUPERMAN", keyStroke8, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        managementDashboard1.show(true);
        java.awt.Dimension dimension8 = managementDashboard1.size();
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        java.awt.image.ImageProducer imageProducer12 = null;
        java.awt.Image image13 = managementDashboard11.createImage(imageProducer12);
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        java.beans.PropertyChangeListener propertyChangeListener16 = null;
        managementDashboard15.addPropertyChangeListener(propertyChangeListener16);
        java.awt.event.FocusEvent.Cause cause18 = null;
        managementDashboard15.requestFocus(cause18);
        java.awt.event.InputMethodListener inputMethodListener20 = null;
        managementDashboard15.addInputMethodListener(inputMethodListener20);
        java.awt.Point point22 = managementDashboard15.location();
        java.awt.Component component23 = managementDashboard11.add((java.awt.Component) managementDashboard15);
        java.beans.PropertyChangeListener propertyChangeListener25 = null;
        component23.removePropertyChangeListener("data/parkingSpaceData.csv", propertyChangeListener25);
        java.awt.image.ColorModel colorModel27 = component23.getColorModel();
        java.awt.image.ImageProducer imageProducer28 = null;
        java.awt.Image image29 = component23.createImage(imageProducer28);
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        java.beans.PropertyChangeListener propertyChangeListener32 = null;
        managementDashboard31.addPropertyChangeListener(propertyChangeListener32);
        java.awt.event.FocusEvent.Cause cause34 = null;
        managementDashboard31.requestFocus(cause34);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard31.addInputMethodListener(inputMethodListener36);
        managementDashboard31.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        boolean boolean43 = managementDashboard31.isValid();
        managementDashboard31.reshape(8, (int) ' ', (int) (short) 10, 1);
        java.awt.Font font49 = managementDashboard31.getFont();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = jToolTip9.prepareImage(image29, (java.awt.image.ImageObserver) managementDashboard31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.ImageProducer.startProduction(java.awt.image.ImageConsumer)\" because the return value of \"sun.awt.image.ToolkitImage.getSource()\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertNotNull(image13);
        org.junit.Assert.assertNotNull(point22);
        org.junit.Assert.assertNotNull(component23);
        org.junit.Assert.assertNotNull(colorModel27);
        org.junit.Assert.assertNotNull(image29);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(font49);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.util.function.Consumer<java.lang.String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isVisible();
        java.awt.Image image8 = managementDashboard4.createImage(13, (-1));
        managementDashboard4.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard12.addPropertyChangeListener(propertyChangeListener13);
        java.awt.event.FocusEvent.Cause cause15 = null;
        managementDashboard12.requestFocus(cause15);
        java.awt.event.InputMethodListener inputMethodListener17 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener17);
        java.awt.Point point19 = managementDashboard12.location();
        java.awt.Component component20 = managementDashboard4.findComponentAt(point19);
        java.awt.Component component21 = managementDashboard1.getComponentAt(point19);
        managementDashboard1.grabFocus();
        java.util.function.Consumer<java.lang.String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        java.beans.PropertyChangeListener propertyChangeListener25 = null;
        managementDashboard24.addPropertyChangeListener(propertyChangeListener25);
        java.awt.event.FocusEvent.Cause cause27 = null;
        managementDashboard24.requestFocus(cause27);
        java.awt.event.InputMethodListener inputMethodListener29 = null;
        managementDashboard24.addInputMethodListener(inputMethodListener29);
        managementDashboard24.setBounds((int) (byte) 1, (int) (short) 10, (int) (byte) 0, 10);
        float float36 = managementDashboard24.getAlignmentY();
        managementDashboard24.doLayout();
        javax.swing.InputMap inputMap38 = managementDashboard24.getInputMap();
        boolean boolean39 = managementDashboard24.isFocusTraversalPolicySet();
        boolean boolean40 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard24);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(image8);
        org.junit.Assert.assertNotNull(point19);
        org.junit.Assert.assertNull(component20);
        org.junit.Assert.assertNull(component21);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.5f + "'", float36 == 0.5f);
        org.junit.Assert.assertNotNull(inputMap38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.LayoutManager layoutManager3 = managementDashboard1.getLayout();
        boolean boolean6 = managementDashboard1.contains((int) (byte) -1, (int) '#');
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        boolean boolean9 = managementDashboard8.isVisible();
        java.awt.Image image12 = managementDashboard8.createImage(13, (-1));
        managementDashboard8.show(true);
        java.awt.Dimension dimension15 = managementDashboard8.size();
        javax.swing.JToolTip jToolTip16 = managementDashboard8.createToolTip();
        java.lang.Object obj17 = null;
        managementDashboard1.putClientProperty((java.lang.Object) jToolTip16, obj17);
        java.awt.event.MouseMotionListener[] mouseMotionListenerArray19 = jToolTip16.getMouseMotionListeners();
        jToolTip16.setSize(128, 1);
        java.awt.event.FocusEvent.Cause cause23 = null;
        boolean boolean24 = jToolTip16.requestFocusInWindow(cause23);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard26.addPropertyChangeListener(propertyChangeListener27);
        java.awt.event.FocusEvent.Cause cause29 = null;
        managementDashboard26.requestFocus(cause29);
        java.awt.event.InputMethodListener inputMethodListener31 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener31);
        java.awt.Color color33 = managementDashboard26.getBackground();
        managementDashboard26.setRequestFocusEnabled(true);
        java.awt.event.MouseListener mouseListener36 = null;
        managementDashboard26.addMouseListener(mouseListener36);
        boolean boolean38 = managementDashboard26.isPaintingTile();
        java.awt.event.MouseEvent mouseEvent39 = null;
        java.awt.Point point40 = managementDashboard26.getPopupLocation(mouseEvent39);
        java.util.function.Consumer<java.lang.String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        managementDashboard42.setEnabled(true);
        java.awt.Point point45 = managementDashboard42.location();
        java.awt.Component component46 = managementDashboard26.findComponentAt(point45);
        java.awt.Component component47 = jToolTip16.getComponentAt(point45);
        java.awt.Component component50 = jToolTip16.findComponentAt(6, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(layoutManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(image12);
        org.junit.Assert.assertNotNull(dimension15);
        org.junit.Assert.assertNotNull(jToolTip16);
        org.junit.Assert.assertNotNull(mouseMotionListenerArray19);
        org.junit.Assert.assertArrayEquals(mouseMotionListenerArray19, new java.awt.event.MouseMotionListener[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(color33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(point40);
        org.junit.Assert.assertNotNull(point45);
        org.junit.Assert.assertNull(component46);
        org.junit.Assert.assertNotNull(component47);
        org.junit.Assert.assertNull(component50);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isVisible();
        java.awt.Image image5 = managementDashboard1.createImage(13, (-1));
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseMove(event6, (-1), (int) (byte) 0);
        boolean boolean10 = managementDashboard1.isFocusable();
        java.awt.event.ComponentListener componentListener11 = null;
        managementDashboard1.addComponentListener(componentListener11);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isVisible();
        java.awt.Image image18 = managementDashboard14.createImage(13, (-1));
        managementDashboard14.remove((int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard22.addPropertyChangeListener(propertyChangeListener23);
        java.awt.event.FocusEvent.Cause cause25 = null;
        managementDashboard22.requestFocus(cause25);
        java.awt.event.InputMethodListener inputMethodListener27 = null;
        managementDashboard22.addInputMethodListener(inputMethodListener27);
        java.awt.Point point29 = managementDashboard22.location();
        java.awt.Component component30 = managementDashboard14.findComponentAt(point29);
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        java.awt.image.ImageProducer imageProducer33 = null;
        java.awt.Image image34 = managementDashboard32.createImage(imageProducer33);
        java.util.function.Consumer<java.lang.String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        java.beans.PropertyChangeListener propertyChangeListener37 = null;
        managementDashboard36.addPropertyChangeListener(propertyChangeListener37);
        java.awt.event.FocusEvent.Cause cause39 = null;
        managementDashboard36.requestFocus(cause39);
        java.awt.event.InputMethodListener inputMethodListener41 = null;
        managementDashboard36.addInputMethodListener(inputMethodListener41);
        int int43 = managementDashboard14.checkImage(image34, (java.awt.image.ImageObserver) managementDashboard36);
        java.util.function.Consumer<java.lang.String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        boolean boolean46 = managementDashboard45.isVisible();
        java.awt.Image image49 = managementDashboard45.createImage(13, (-1));
        managementDashboard45.show(true);
        java.awt.event.MouseMotionListener mouseMotionListener52 = null;
        managementDashboard45.removeMouseMotionListener(mouseMotionListener52);
        managementDashboard45.resize((int) (byte) -1, (int) (byte) -1);
        java.awt.Component[] componentArray57 = managementDashboard45.getComponents();
        java.awt.Point point58 = managementDashboard45.location();
        managementDashboard45.setFocusTraversalPolicyProvider(false);
        int int61 = managementDashboard1.checkImage(image34, (java.awt.image.ImageObserver) managementDashboard45);
        java.awt.Graphics graphics62 = null;
        managementDashboard1.print(graphics62);
        boolean boolean64 = managementDashboard1.isRequestFocusEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(image5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(image18);
        org.junit.Assert.assertNotNull(point29);
        org.junit.Assert.assertNull(component30);
        org.junit.Assert.assertNotNull(image34);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(image49);
        org.junit.Assert.assertNotNull(componentArray57);
        org.junit.Assert.assertNotNull(point58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }
}

